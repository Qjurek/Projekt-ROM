(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    989089,      18705]
NotebookOptionsPosition[    978081,      18494]
NotebookOutlinePosition[    978576,      18512]
CellTagsIndexPosition[    978533,      18509]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Kriptovalute", "Title",
 CellChangeTimes->{{3.8267881722916975`*^9, 
  3.826788182889098*^9}},ExpressionUUID->"0c60ad2c-412c-4f5d-9c9d-\
e2714dc6e87e"],

Cell["Pripravil : Jure Kova\[CHacek], FMF 2020/21", "Subtitle",
 CellChangeTimes->{{3.8267882047158957`*^9, 
  3.82678823008852*^9}},ExpressionUUID->"261899e7-4a2d-437a-9512-\
dc4ad6562e64"],

Cell[CellGroupData[{

Cell["Uvodna beseda", "Section",
 CellChangeTimes->{{3.833380040887497*^9, 
  3.8333800512258444`*^9}},ExpressionUUID->"8cf0acad-d56e-4e3a-a293-\
319ca6395e2d"],

Cell["\<\
Kriptovalute. Za kaj pravzaprav gre? Za nekatere so to tehnologija \
prihodnosti, za marsikoga enostaven zaslu\[ZHacek]ek spet tretji v \
kriptovalutah vidijo navaden \[OpenCurlyDoubleQuote]nateg\
\[CloseCurlyDoubleQuote]. Ve\[CHacek]ina ljudi pa se pravzaprav ne zanima za \
to \[CHacek]udo - veliko so smo sli\[SHacek]ali preko medijev o kriptovalutah \
leta 2017, ko so kriptovalute do\[ZHacek]ivele nenormalen vzpon (kar je tudi \
povzro\[CHacek]ilo mrzlico rudarjenja kriptovalut), ter nedavno januarja \
2021, ko so cene le-teh ponovno narasle, na najvi\[SHacek]jo mo\[ZHacek]no \
vsoto (vrednost Bitcoina je zna\[SHacek]ala skoraj 60.000 eur). A kaj je \
pravzaprav \[OpenCurlyDoubleQuote]kriptovaluta\[CloseCurlyDoubleQuote]? \
\[CapitalCHacek]e na hitro opi\[SHacek]emo zadevo, bi marsikdo mislil, da gre \
pravzaprav za neke vrste internetno delnico, mar ne? Ne ravno. V slede\
\[CHacek]em seminarskem delu, bom poizku\[SHacek]al opisati kriptovalute ter \
analiziral razvoj, ter si pomagal z orodji, ki jih ponuja Wolframova \
Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.8333801654779577`*^9, 3.8333803223991823`*^9}, {
  3.8333804156788015`*^9, 3.8333807968165755`*^9}, {3.8334340809267645`*^9, 
  3.8334340829700413`*^9}},ExpressionUUID->"113dcc3c-56e0-431e-8209-\
fdef0e8c3852"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1. Poglavje - Kripto za nevedne\[ZHacek]e", "Chapter",
 CellChangeTimes->{{3.8334339949536343`*^9, 
  3.833434033011445*^9}},ExpressionUUID->"3a129c01-4c24-46f9-8285-\
886b35210c20"],

Cell[CellGroupData[{

Cell["1. Definicija (Wikipedia)", "Section",
 CellChangeTimes->{{3.8333808022330666`*^9, 3.833380811647339*^9}, {
  3.833381168993431*^9, 3.8333811790617085`*^9}, {3.833427742246847*^9, 
  3.8334277428309674`*^9}, {3.833429009939625*^9, 
  3.833429010772046*^9}},ExpressionUUID->"b1040eba-bac7-4fba-8b81-\
71cfd94d335f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"def", " ", "=", 
  RowBox[{
   RowBox[{"TextSentences", "[", 
    RowBox[{"WikipediaData", "[", "\"\<Cryptocurrency\>\"", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{";;", "7"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8334274820640326`*^9, 3.8334274821418552`*^9}, {
  3.833427512582595*^9, 3.8334275402166405`*^9}, {3.8334275763253813`*^9, 
  3.8334275777209225`*^9}, {3.833427615603445*^9, 3.8334276265647116`*^9}, {
  3.8334277214777527`*^9, 3.833427724544778*^9}, {3.833427767382805*^9, 
  3.8334277820670567`*^9}, {3.833427828075919*^9, 3.833427831177896*^9}, {
  3.8334285296805706`*^9, 3.833428544729635*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"59d0e300-a31e-4169-ab0f-1f6f3d051257"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A cryptocurrency, crypto-currency, or crypto is a digital \
asset designed to work as a medium of exchange wherein individual coin \
ownership records are stored in a ledger existing in a form of a computerized \
database using strong cryptography to secure transaction records, to control \
the creation of additional coins, and to verify the transfer of coin \
ownership.\"\>", 
   ",", "\<\"It typically does not exist in physical form (like paper money) \
and is typically not issued by a central authority.\"\>", 
   ",", "\<\"Cryptocurrencies typically use decentralized control as opposed \
to a central bank digital currency (CBDC).\"\>", 
   ",", "\<\"When a cryptocurrency is minted or created prior to issuance or \
issued by a single issuer, it is generally considered centralized.\"\>", 
   ",", "\<\"When implemented with decentralized control, each cryptocurrency \
works through distributed ledger technology, typically a blockchain, that \
serves as a public financial transaction database.\"\>", 
   ",", "\<\"Bitcoin, first released as open-source software in 2009, is the \
first decentralized cryptocurrency.\"\>", 
   ",", "\<\"Since the release of bitcoin, other cryptocurrencies have been \
created.\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8334276196286945`*^9, 3.833427627731477*^9}, 
   3.8334277287713194`*^9, {3.833427769403225*^9, 3.8334277834366136`*^9}, 
   3.83342783632493*^9, {3.833428531570916*^9, 3.8334285468287525`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"e91b4753-8fa8-4903-8d51-6f51e5a16cae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TextTranslation", "[", 
    RowBox[{"def", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", "\"\<Slovenian\>\"", "}"}]}]], "Input",
 CellChangeTimes->{{3.8334278536376376`*^9, 3.8334278706431475`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7a72f135-73de-4134-a94c-02eedaedbc0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"Kriptovaluta, kriptovaluta ali kripto je digitalno sredstvo, \
namenjeno za delo kot medij izmenjave, v katerem so posamezni zapisi lastni\
\[SHacek]tva kovancev shranjeni v knjigi, ki obstaja v obliki \
ra\[CHacek]unalni\[SHacek]ko podprte zbirke podatkov z uporabo mo\[CHacek]ne \
kriptografije za varno transakcijo, za nadzor nad ustvarjanjem dodatnih \
kovancev in za preverjanje prenosa lastni\[SHacek]tva kovancev.\"\>", 
    ",", "\<\"Obi\[CHacek]ajno ne obstaja v fizi\[CHacek]ni obliki (kot \
papirni denar) in ga obi\[CHacek]ajno ne izda osrednji organ.\"\>", 
    ",", "\<\"Kripto valute obi\[CHacek]ajno uporabljajo decentraliziran \
nadzor v nasprotju z digitalno valuto centralne banke (CBDC).\"\>", 
    ",", "\<\"Kadar je kripto valuta kovnjena ali ustvarjena pred izdajo ali \
izdajo enega izdajatelja, se na splo\[SHacek]no \[SHacek]teje za \
centralizirano.\"\>", 
    ",", "\<\"Ko se izvaja z decentraliziranim nadzorom, vsaka kripto valuta \
deluje s tehnologijo distribuirane knjige, obi\[CHacek]ajno blockchain, ki \
slu\[ZHacek]i kot javna zbirka podatkov o finan\[CHacek]nih \
transakcijah.\"\>", 
    ",", "\<\"Bitcoin, prvi\[CHacek] izdan kot odprtokodna programska oprema \
leta 2009, je prva decentralizirana kriptokurrenca.\"\>", 
    ",", "\<\"Od izdaje bitcoina so bile ustvarjene druge kriptovate.\"\>"}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8334279183351617`*^9, 3.8334285574933558`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e239110a-7cf8-4ae7-8a75-8111f681a60e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Zgodovina (Wikipedia)", "Section",
 CellChangeTimes->{{3.8334283698484287`*^9, 3.8334283864726315`*^9}, {
  3.8334290137432528`*^9, 
  3.833429014127063*^9}},ExpressionUUID->"a14496a6-7355-40af-9edb-\
3c6d5182f9f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"his", " ", "=", " ", 
  RowBox[{
   RowBox[{"TextSentences", "[", 
    RowBox[{"WikipediaData", "[", "\"\<Cryptocurrency\>\"", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"9", ";;", "24"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.833428410000241*^9, 3.8334284219381657`*^9}, {
  3.8334284990559673`*^9, 3.8334285027215815`*^9}, {3.8334285674639854`*^9, 
  3.833428689823044*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1859327e-eb4c-4d53-a02f-71175eceb472"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"In 1983, the American cryptographer David Chaum conceived an \
anonymous cryptographic electronic money called ecash.\"\>", 
   ",", "\<\"Later, in 1995, he implemented it through Digicash, an early \
form of cryptographic electronic payments which required user software in \
order to withdraw notes from a bank and designate specific encrypted keys \
before it can be sent to a recipient.\"\>", 
   ",", "\<\"This allowed the digital currency to be untraceable by the \
issuing bank, the government, or any third party.\"\>", 
   ",", "\<\"In 1996, the National Security Agency published a paper entitled \
How to Make a Mint: the Cryptography of Anonymous Electronic Cash, describing \
a Cryptocurrency system, first publishing it in an MIT mailing list and later \
in 1997, in The American Law Review (Vol. 46, Issue 4).\"\>", 
   ",", "\<\"In 1998, Wei Dai published a description of \\\"b-money\\\", \
characterized as an anonymous, distributed electronic cash system.\"\>", 
   ",", "\<\"Shortly thereafter, Nick Szabo described bit gold.\"\>", 
   ",", "\<\"Like bitcoin and other cryptocurrencies that would follow it, \
bit gold (not to be confused with the later gold-based exchange, BitGold) was \
described as an electronic currency system which required users to complete a \
proof of work function with solutions being cryptographically put together \
and published.\"\>", 
   ",", "\<\"In 2009, the first decentralized cryptocurrency, bitcoin, was \
created by presumably pseudonymous developer Satoshi Nakamoto.\"\>", 
   ",", "\<\"It used SHA-256, a cryptographic hash function, in its \
proof-of-work scheme.\"\>", 
   ",", "\<\"In April 2011, Namecoin was created as an attempt at forming a \
decentralized DNS, which would make internet censorship very difficult.\"\>", 
   ",", "\<\"Soon after, in October 2011, Litecoin was released.\"\>", 
   ",", "\<\"It used scrypt as its hash function instead of SHA-256.\"\>", 
   ",", "\<\"Another notable cryptocurrency, Peercoin used a \
proof-of-work/proof-of-stake hybrid.\"\>", 
   ",", "\<\"On 6 August 2014, the UK announced its Treasury had been \
commissioned a study of cryptocurrencies, and what role, if any, they could \
play in the UK economy.\"\>", 
   ",", "\<\"The study was also to report on whether regulation should be \
considered.\"\>", 
   ",", "\<\"In June 2021, El Salvador became the first country to accept \
Bitcoin as legal tender, after the Legislative Assembly had voted 62\[Dash]22 \
to pass a bill submitted by President Nayib Bukele classifying the \
cryptocurrency as such.\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8334284249805527`*^9, 3.8334285044489174`*^9, {3.833428572487138*^9, 
   3.8334286910919685`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"42da9771-1d48-4ed3-a6e5-e65f08c27645"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TextTranslation", "[", 
    RowBox[{"his", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", "\"\<Slovenian\>\"", "}"}]}]], "Input",
 CellChangeTimes->{{3.833428718868536*^9, 3.8334287204911084`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e2e5ae5a-d251-43b4-a241-998e483e9100"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"Leta 1983 je ameri\[SHacek]ki kriptograf David Chaum spo\
\[CHacek]el anonimni kriptografski elektronski denar imenovan ecash.\"\>", 
    ",", "\<\"Kasneje ga je leta 1995 izvajal prek Digicasha, zgodnje oblike \
kriptografskih elektronskih pla\[CHacek]il, ki so zahtevala \
uporabni\[SHacek]ka programska oprema, da bi iz banke umaknil zapiske in pred \
po\[SHacek]iljanje prejemniku dolo\[CHacek]ila posebne \[SHacek]ifrirane klju\
\[CHacek]e.\"\>", 
    ",", "\<\"To je omogo\[CHacek]ilo, da se digitalni valuti ni \
mogo\[CHacek]e izslediti s strani banke, vlade ali katere koli tretje \
osebe.\"\>", 
    ",", "\<\"Leta 1996 je Agencija za nacionalno varnost objavila \
\[CHacek]lanek z naslovom How to Make a Mint: the Cryptography of Anonymous \
Electronic Cash, ki opisuje sistem kripto valut, ki ga je najprej objavil na \
MIT po\[SHacek]tnem seznamu in kasneje leta 1997, v Ameri\[SHacek]kem \
pregledu prava (Vol. 46, Issue 4).\"\>", 
    ",", "\<\"Leta 1998 je Wei Dai objavil opis \\\"b-denarja\\\", zna\
\[CHacek]ilnega za anonimen, distribuiran elektronski denarni sistem.\"\>", 
    ",", "\<\"Kmalu potem je Nick Szabo opisal bit zlata.\"\>", 
    ",", "\<\"Kot bitcoin in druge kriptovalute, ki bi mu sledile, je bil bit \
gold (ki se ne sme zamenjati s poznej\[SHacek]im borzo na osnovi zlata, \
BitGold) opisan kot sistem elektronske valute, ki je od uporabnikov zahteval, \
da dokon\[CHacek]ajo dokaz o delovni funkciji z re\[SHacek]itvami, ki se \
kriptografsko sestavijo in objavijo.\"\>", 
    ",", "\<\"Leta 2009 je prvo decentralizirano kriptoventijo, bitcoin, \
ustvaril domnevno psevdonimni razvijalec Satoshi Nakamoto.\"\>", 
    ",", "\<\"V svoji shemi za dokaz dela je uporabila SHA-256, kriptografsko \
funkcijo hasha.\"\>", 
    ",", "\<\"Aprila 2011 je bil Namecoin ustvarjen kot poskus oblikovanja \
decentraliziranega DNS- ja, kar bi zelo ote\[ZHacek]ujelo cenzuro \
interneta.\"\>", 
    ",", "\<\"Kmalu zatem, oktobra 2011, je iz\[SHacek]el Litecoin.\"\>", 
    ",", "\<\"Uporabil je \[SHacek]ifriranje kot svojo funkcijo hash namesto \
SHA-256.\"\>", 
    ",", "\<\"Peercoin je uporabil \[SHacek]e eno cryptocurrency, ki je bila \
uporabljena kot dokaz za delo/dokaz o kocki.\"\>", 
    ",", "\<\"Zdru\[ZHacek]eno kraljestvo je 6.\"\>", 
    ",", "\<\"V \[SHacek]tudiji je bilo treba poro\[CHacek]ati tudi o tem, \
ali je treba preu\[CHacek]iti ureditev.\"\>", 
    ",", "\<\"Junija 2021 je El Salvador postal prva dr\[ZHacek]ava, ki je \
sprejela Bitcoin kot pravno ponudbo, potem ko je zakonodajna skup\[SHacek]\
\[CHacek]ina glasovala 62\[AHat]22 za sprejetje predloga zakona, ki ga je \
predlo\[ZHacek]il predsednik Nayib Bukele, ki je kriptovanko opredelil kot \
tako.\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.833428728275664*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"76b6863c-d338-4772-aa6e-051834e3c1dd"]
}, Open  ]],

Cell["\<\
Kriptovaluta je torej le neke vrste koda, ki nosi raznorazne podatke o lastni\
\[SHacek]tvu, transakcijah itd. Ampak ... zakaj bi kdorkoli sploh \
\[ZHacek]elel kaj takega? Saj sploh nima fizi\[CHacek]ne oblike, sploh ni \
\"prava\" stvar!
Pa vendarle se moramo isto vpra\[SHacek]ati o na\[SHacek]i stari dobri \
gotovini ...  Je tudi denar kot ga poznamo \"prava\" stvar ? Konec koncev gre \
samo za posebno vrsto papirja ter kovine, le - teh pa je na svetu precej. \
Ideja vrednosti neke \"stvari\" je v tem, da ji bo vrednosti narasla po tem, \
koliko ljudi se pravzaprav zanima za njo. In kot vemo, bi se dan danes \
marsikdo \[ZHacek]elel bitcoina. A temu vedno ni bilo tako - prva komercialna \
transakcija Bitcoina se je izvedla leta 2010. Programer po imenu Laszlo \
Hanyecz je namre\[CHacek] za menjavo 10.000 Bitcoinov naro\[CHacek]il dve \
pici. \[CapitalCHacek]e bi prevedli tak znesek Bitcoinov v dana\[SHacek]nji \
\[CHacek]as, bi vrednost le - teh zna\[SHacek]ala kar 284.420 .000 dolarjev! \
Definitivno bi si lahko privo\[SHacek]\[CHacek]il \[SHacek]e tretjo pico. Pa \
vendar ... \[ZHacek]e iz zgornjega opisa nam postane jasno, da ni \[SHacek]lo \
za \"napako\", ki jo je gospod Hanzecz storil. To dejanje je bilo namre\
\[CHacek] klju\[CHacek]no za nadaljni razvoj Bitcoina in kriptovalut samih, \
saj je bila prva transakcija kriptovalute za neko materialno \"dobrino\".\
\>", "Text",
 CellChangeTimes->{{3.8334302865426006`*^9, 
  3.833430291946535*^9}},ExpressionUUID->"56f1cdbc-c8ed-4db7-b6d1-\
54f7ae79cfa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Bitcoin, Ethereum, Dogecoin", "Section",
 CellChangeTimes->{{3.83342901809654*^9, 3.8334290185002675`*^9}, {
  3.8334291836142254`*^9, 3.8334291937592506`*^9}, {3.8334292334602194`*^9, 
  3.8334292495740376`*^9}, {3.8334339489179873`*^9, 
  3.833433960700153*^9}},ExpressionUUID->"eb4cb3bb-877e-4c03-aa10-\
ce5ba44e32a1"],

Cell["\<\
Ena od bolj \"kul\" zadev kriptovalut je ta, da so \
\[OpenCurlyDoubleQuote]decentralizirane\[CloseCurlyDoubleQuote]. Kar to \
pomeni je, da vlada in banke NE morejo vplivati na to tehnologijo. \
\[CapitalSHacek]e ve\[CHacek], veliko kriptovalut je skorajda imunih na \
inflacijo (npr. Bitcoinov je kon\[CHacek]no mnogo - 21 milijonov)! Stvar je v \
tem, da je vsaka enota kriptovalute UNIKATNA. Ker namre\[CHacek] vsaka nosi \
svojo unikatno kodo z dolo\[CHacek]enimi informacijami. Le-ta se imenuje HASH. 
Poglejmo si 3 kriptovalute, ki so bile v letu 2021 najbolj odmevne.\
\>", "Text",
 CellChangeTimes->{{3.8334303853484974`*^9, 3.8334304702443004`*^9}, {
  3.833430507842697*^9, 3.833430558152053*^9}, {3.8334305999080906`*^9, 
  3.8334306282235317`*^9}, {3.8334306651536646`*^9, 3.833430738734655*^9}, {
  3.833430914512317*^9, 3.8334309193018074`*^9}, {3.8334310750393476`*^9, 
  3.8334310788858805`*^9}},ExpressionUUID->"ae576aeb-f457-41ba-b18e-\
582725ef919b"],

Cell[CellGroupData[{

Cell["1. Bitcoin", "Subsection",
 CellChangeTimes->{{3.8334307461352615`*^9, 
  3.833430760628677*^9}},ExpressionUUID->"bec68de3-5937-472a-8a84-\
4006c54f814e"],

Cell["\<\
Bitcoin smo omenili \[ZHacek]e precejkrat - prva kriptovaluta, ustvarjena \
leta 2009, njen avtor je \[OpenCurlyDoubleQuote]Satoshi Nakomoto\
\[CloseCurlyDoubleQuote] (ne ve se, ali je avtor eden ali ve\[CHacek], vendar \
naj bi bilo ime \[OpenCurlyDoubleQuote]Satoshi Nakomoto\
\[CloseCurlyDoubleQuote] zgolj psevdonim). Danes je Bitcoin dale\[CHacek] \
najbolj vredna in za\[ZHacek]eljena kriptovaluta na svetu.\
\>", "Text",
 CellChangeTimes->{{3.8334308114586644`*^9, 3.8334308974082007`*^9}, {
  3.833430932652113*^9, 
  3.833431008210315*^9}},ExpressionUUID->"6263d048-b8f0-4736-a5b5-\
ae7e86b259f6"],

Cell[CellGroupData[{

Cell["Tabela - Bitcoin", "Subsubsection",
 CellChangeTimes->{{3.833437222030467*^9, 
  3.8334372347777696`*^9}},ExpressionUUID->"04b39778-8352-4b19-8e4b-\
5f47396c29cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BlockchainData", "[", 
   RowBox[{"BlockchainBase", "\[Rule]", "\"\<Bitcoin\>\""}], "]"}], "//", 
  "Dataset"}]], "Input",
 CellChangeTimes->{{3.833431033890933*^9, 3.8334310397051687`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c89d2d07-e78d-4ba0-9ddf-029f0073cfc0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Type" -> "Bitcoin", "Name" -> "BTC.main", "Core" -> "Bitcoin", 
       "Blocks" -> 688576, "LatestBlockHash" -> 
       "0000000000000000000ce0a8b4d183f7be8900dd76b7dd6a12fe45ccffc62cba", 
       "MinimumFee" -> Quantity[53645, "Satoshis"]], "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Type"} -> 
        TypeSystem`PackageScope`AtomShape[67.20000000000002], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Core"} -> 
        TypeSystem`PackageScope`AtomShape[67.20000000000002], {"Blocks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LatestBlockHash"} -> 
        TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
         "MinimumFee"} -> TypeSystem`PackageScope`AtomShape[75]], 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "Type", "Name", "Core", "Blocks", "LatestBlockHash", "MinimumFee"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[
         Quantity[1, "Satoshis"]]}], "Meta" -> 
     Association["ID" -> 177369500337955], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Type"} -> 
        TypeSystem`PackageScope`AtomShape[67.20000000000002], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Core"} -> 
        TypeSystem`PackageScope`AtomShape[67.20000000000002], {"Blocks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LatestBlockHash"} -> 
        TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
         "MinimumFee"} -> TypeSystem`PackageScope`AtomShape[75]], 1], "Type" -> 
     TypeSystem`Struct[{
       "Type", "Name", "Core", "Blocks", "LatestBlockHash", "MinimumFee"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[
         Quantity[1, "Satoshis"]]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     6, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Type", 
                  Style[
                  "Type", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Type"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Type"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Bitcoin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["BTC.main", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Core", 
                  Style[
                  "Core", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Core"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Core"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Bitcoin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Core"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blocks", 
                  Style[
                  "Blocks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Blocks"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blocks"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["688576"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blocks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LatestBlockHash", 
                  Style[
                  "LatestBlockHash", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["LatestBlockHash"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LatestBlockHash"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "0000000000000000000ce0a8b4d183f7be8900dd76b7dd6a12fe45ccffc62cb\
a", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LatestBlockHash"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MinimumFee", 
                  Style[
                  "MinimumFee", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["MinimumFee"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MinimumFee"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"53645", 
                   RowBox[{"\[VeryThinSpace]", 
                    FormBox["\" sat\"", TraditionalForm]}], "satoshis", 
                   "\"Satoshis\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MinimumFee"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{619., {89.5, 95.5}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{619., {89.5, 95.5}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833431042899069*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"87fba6af-1be5-47fd-bcb6-08b42971496e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graf cene Bitcoina", "Subsubsection",
 CellChangeTimes->{{3.8334372398214483`*^9, 
  3.833437253426228*^9}},ExpressionUUID->"ac58238c-90cf-4c10-8db9-\
aac914126ff1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<BTC\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8334364572373514`*^9, 3.833436457245936*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"0039ce36-fbae-487e-9fd1-723182cb8f2f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAKMtzsGn46kHS0Yt7UpV8QD7CDxIN
/+pBVoA2na8kdkDRjQRlPwbrQTFrzR1gqnVAPT+GofcM60GluMve/ohqQGN7
gx+OE+tBCeTciRIncEAHjNmOsxrrQRVHPjL3BmxAg4K8514h60GHWb1rw/9t
QH1N+DGZKOtBta3e04m+cEAxo6+9sS/rQbAhBfJGRmtAvt7zMlA260HBXMwP
HJdtQMnukJl9PetByoFnGl7FdECs5LrpMETrQXYG2MgAdXtASmVge8JK60HJ
5A/TEap3QGW6Xv7iUetBa7s3PrjeeUBZ9elqiVjrQWw1Fl4y8XtAygTOyL5f
60HAHGR24/qBQPaeLWjSZutBmi4tZ/AJhUD7Hhrxa23rQTG6G95s0IFAfXNf
a5R060HgmMBPU06DQNitMc9Ce+tBIzyt4vZ7h0CwvFwkgILrQZSLZzsj4o9A
Q1YDu5uJ60FCczaJ/GWPQK7VNjs9kOtBNSmhsIH2jkCXKcOsbZfrQUgkAXZ8
ZJtAWWPcBySe60FAUJ8OOx+kQNUncaS4pOtB1t3iZxqQpUDPwF4y3KvrQXUu
IEfuI7BAoT/ZqYWy60G4CKFWRoK3QPGSrBK+uetB1WxZ2R83xkD7cPu81MDr
QXGh2RpBO8pA3jTXUHHH60G7rrtfNhXDQD7NC9aczutBvAp/HUWmukB3S81E
TtXrQbDtUyA+UsBAalQK9d3b60EeFf4YfVa3QNsxoJb84utBpHRko09YuEAl
9cIhoenrQWMKTz7tV7lA7Iw+ntTw60H+sikbm+i4QIwKRwSO9+tBnACjMVbB
qUDmEsurJf7rQYL61Fi3H6xAvu+nREwF7EFP9v2vdImuQG6yEcf4C+xBb5cr
1bp1tECcSdQ6NBPsQc2+wZAhQsBAhGsS8E0a7EHgYF2Qtv3GQEVz3Y7tIOxB
iWUw4vvLw0CETwEfHCjsQS2mKGNBCsBAmxGymNAu7EHttwJH0hfBQG1e3lNj
NexBC/0DeKmsvEC8f2MAhTzsQZBiD+HGi8JA5IZ1lixD7EFrwOARca2zQIpi
4B1jSuxB1cig2Av0wEDqyMbmd1HsQX+EUIqNXsJAIxU6mRJY7EH5v0tva0fC
QNk1Bj08X+xBAE0KQ1toxUBoPF/K62XsQSzkssXhSsZAdBcRSSpt7EErS2UF
tuDQQCTEEa7rb+xBBOXnSUrC2UBoJL8a
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$271333#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3833395200}, {0., 
                26377.160760854385`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAKMtzsGn46kHS0Yt7UpV8QD7CDxIN
/+pBVoA2na8kdkDRjQRlPwbrQTFrzR1gqnVAPT+GofcM60GluMve/ohqQGN7
gx+OE+tBCeTciRIncEAHjNmOsxrrQRVHPjL3BmxAg4K8514h60GHWb1rw/9t
QH1N+DGZKOtBta3e04m+cEAxo6+9sS/rQbAhBfJGRmtAvt7zMlA260HBXMwP
HJdtQMnukJl9PetByoFnGl7FdECs5LrpMETrQXYG2MgAdXtASmVge8JK60HJ
5A/TEap3QGW6Xv7iUetBa7s3PrjeeUBZ9elqiVjrQWw1Fl4y8XtAygTOyL5f
60HAHGR24/qBQPaeLWjSZutBmi4tZ/AJhUD7Hhrxa23rQTG6G95s0IFAfXNf
a5R060HgmMBPU06DQNitMc9Ce+tBIzyt4vZ7h0CwvFwkgILrQZSLZzsj4o9A
Q1YDu5uJ60FCczaJ/GWPQK7VNjs9kOtBNSmhsIH2jkCXKcOsbZfrQUgkAXZ8
ZJtAWWPcBySe60FAUJ8OOx+kQNUncaS4pOtB1t3iZxqQpUDPwF4y3KvrQXUu
IEfuI7BAoT/ZqYWy60G4CKFWRoK3QPGSrBK+uetB1WxZ2R83xkD7cPu81MDr
QXGh2RpBO8pA3jTXUHHH60G7rrtfNhXDQD7NC9aczutBvAp/HUWmukB3S81E
TtXrQbDtUyA+UsBAalQK9d3b60EeFf4YfVa3QNsxoJb84utBpHRko09YuEAl
9cIhoenrQWMKTz7tV7lA7Iw+ntTw60H+sikbm+i4QIwKRwSO9+tBnACjMVbB
qUDmEsurJf7rQYL61Fi3H6xAvu+nREwF7EFP9v2vdImuQG6yEcf4C+xBb5cr
1bp1tECcSdQ6NBPsQc2+wZAhQsBAhGsS8E0a7EHgYF2Qtv3GQEVz3Y7tIOxB
iWUw4vvLw0CETwEfHCjsQS2mKGNBCsBAmxGymNAu7EHttwJH0hfBQG1e3lNj
NexBC/0DeKmsvEC8f2MAhTzsQZBiD+HGi8JA5IZ1lixD7EFrwOARca2zQIpi
4B1jSuxB1cig2Av0wEDqyMbmd1HsQX+EUIqNXsJAIxU6mRJY7EH5v0tva0fC
QNk1Bj08X+xBAE0KQ1toxUBoPF/K62XsQSzkssXhSsZAdBcRSSpt7EErS2UF
tuDQQCTEEa7rb+xBBOXnSUrC2UBoJL8a
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$271333#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3833395200}, {0., 
                26377.160760854385`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1: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
FfsfQAQ+lQ==
    "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWxIXSvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
H8mzdvZ8m49Ut/lIdZuP5CfCsufbfKS6zUeq23ykiuYjVTQfqaL5SO9ZA7H5
SBXNR/KDadlzNB+povlIvrGJPUfzkSqaj1TZfKTK5iNpqUGGVjYfyX8La8/m
I1U2H6my+UiaTJOhlc1Hqmw+0p+fWUYkQ7UAIkP9mF7WXs1Hqmo+knUc1l7N
R1IkQ6uaj/Tn156/SB/JLxcM1T/QR1Kkj6RIH8kRDFWkj6R/oI+U3q0sDkUf
yes/MFSRPpIjGJoG7MBQgz6SV+xgqCJ9JEX6SIr0kfLPb18jgqFelYKh6Wcn
F4eij+SnUYKh6XvvWPukj+RYrH3SR8o/P8H9RfpIivSR0hvZrH3SR3Is1j7p
I2mCSB9JkT6S93Y2a1/0kbwoH6x90UdyTNa+6CMp0kfyozo3a1/0kbTcp4+k
SB8p//wg+RfpI3mr4LL2TR9JkT6SHxE6Wfumj+RYrH3TR0pvwbD2Qx/JWxSb
tR/6SOnnarP2Qx/JMVn7oY+kSB/JJ83N2g99pPzz8+x/46WP5Fis/dJHUqSP
pEgfyRdhF2u/9JEU6SM5Fmu/9JEU6SN5/+aw9qCPpEgfyc9tHaw96CM5JmsP
+kiK9JHyz4/Vf5E+kiJ9pPTDzll70EcyBJK1J30kRfpIivSRFOkjKdJHcizW
nvSRFOkjKdJH8lNsN2sv+kiK9JH8IK2HtRd9JEX6SIr0kbyptll70UdKL1NY
e9FHcizWXvSRcjz0kRTpI+V74RyRPpIifSRHIFWRPpIifSQ/4pdIFZ2I1PHQ
R9LskT6SIn0kzy3JUF+GXPyzVIwUqRg5kpLiDSk5BhUj71aSkmNSMUo/Yp9N
TipGfmgxKemrOGxyUjFSpGKkSMXIWwGkpL69pORYVIwcSUnNVEjJsagY+VHK
pKRmAaTkWFSM0u+uOBQVIz+egJQci4pR+gcHWPumYuRHOJOSOu+TkmNTMXIk
JfVfkpLvEh2RipEiFaP07x6w9k3FyJGU9H3zrP1QMVKkYuSfSCQlx6Fi5J1s
UlKRlPRyiLUfKkaKVIz8fGtSUqWSkuNSMVKkYuRISo5Lxcj766TkuFSMfDom
JcelYpTjUjFyJCXHpWKUI6gYKVIx8r4+KTmCipEiFSNHUnIEFSP7GKTkCCpG
ilSMfs89ZO1JxciXF0hJRVLSv4nB2pOKkZ8yTkpqgkxKjqRipEjFyJGUfP9W
RCpGvuhBSvqnOVh7UTHyw85JST/agbUXFSNFKkaKVIwUqRj5YgspOYqKUfrv
RO36J1JyPlSM/Ah2UlJ8JSW1WiAldfImJedDxciRlJwPFSNPVEjJ+VAx8qPf
SUlfkkftc1AxciQl56BipEjFSJGKka9EkZJaZ5KSc1Ax8hPoSUlFLjy1liI0
56RilL7eydonFSOvOolUHTdEqn+2hbVPKkbWcIlUTeKJVC3piNS5qBgpUjHK
d7+VkUjVSyZS/esxrH1RMfLz+InUuagYKVIxciRS56JiZOgRqXNTMVKkYvR7
FDhr31SMHInUuakY+SkJROrcVIwUqRjZGCNS56FipEjFyJFInYeKkSIVI/9Y
AZE6DxUjXw8iUuehYuRIpM5DxcgXS4nUeakYKVIx8o8kEKnzUjFyJFLnpWL0
e4gta79UjHyRlkidl4pRzkvFKGdQMXIkUmdQMfK1fiJ1BhUjRSpGfxCCSMXI
kUidQcVIkYqRIhUj/4IEkTqTipEiFSNHInUmFSP/xhiROpOKUfr7ydqTipFb
JVJnUjFyJFJnUTHynWlE6iwqRr5yTqTOomKU/rkn1l5UjBSpGP3ePGsvKkaK
VIyEOSpGilSMHInU9VAxUqRiZGISqeuhYqRIxci/jkOkroeKkSORuh4qRn5w
GJG6BhWj9I9foXZfqEHta1AxciRS16Bi5O1mInUNKkb5XjxDpGLk7y6R6t/g
Yu2TipEiFSP/yAmRuiYVI0UqRv7xciJ1TSpGjkTqmlSMfr/rwNoXFSP/uAqR
uhYVI0UqRo6/b+x/At/KmSY=
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833436494629569*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"3d9520f3-7594-4b17-96d9-fd6ae123c29c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8334365079620376`*^9, 3.833436507972039*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"b1368b7f-72cc-47de-a95c-09922025754c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
LnVrxust1ivF0GacrwqJNfMEr+3kaY4zYf93qBnvx7dg/X/WjP2Vj/WvQvM8
5bBdLuZt97D+tWnO8+c21v/BzXl9603rqS6pOeePKOz/DzRn/yqo3PJEsO+N
UwnjfmL9L+vM+53nxCoXZy4fhv1/sOBOhxspUqZi/5/ozO9TLsTmvc78vmKH
9f+RM8dfNNb/Ui14P+qN9b9FC26vL7G+fwte7xVY/xMEZwRkpk8oS+OV7G7B
/qhMLL/fgt//exCrC1vwfiAE+pu15PU3nNjYpyW/r2N/Y4lvyf0XQP+Olrx/
uA79dwXPP347fcMa6C9oyfp2QX/jVjzfl0F/UCvez9yD/rhW/H7K+5+trXj/
Ngb6b7fi/ck06P8luFbK0fSvQfC/kwvbawn838uF32+T4f+pLhxf2Vj/N7nw
+/F27H9uCKbzwlnY/3x34fMLvG9ZHFvnKZvWdDKbgollPVrzeJsh/ie1Zv2O
iP+NrXk9G07vR4argpdapahf90f++9Ka12vka2l9Oc/n6sj/3eQ8X28i/8UI
njHILyEiCflvnZzjN4jaN10SfMrlrzn+MNZ/i+DZ205pV3lg/avbhudTHeS/
Lm34vCAf+W+84HYzphi/n0D+W92G5/tq5L+MNvz+fB7570ObkvWWWFW7Lecz
Xv+VbXm9H4X1P7It59tr0L+iLY9HDf1GwXtW9/B5+Qf6c9uWvB9i/avpyvkX
+UnfyZXz7SWsfxGuPB/vYP1bVlK/DPLfWVeOj9FY/94J/ve4kc9wE/RXc+Px
3Id+TzdevzFeyyjBprWOCe83Q7/Ojd/PsL9QnXJjfzoi/79x4/O9T9BftR3n
72zodxd8Y8Ma9YnhxNIR7bj+Pax/Ke14fUX/muPteD+tovb1L9vxeEdCf+X2
bL8e0N++Pa8ndfD+p27P72NvoH+B4Ik2FbMKVmD/d6Q965mF9f9Fe14fDmL9
t+rA9ub137UD72fwPqcaItj+v51G/6vQnyz4x517WmUV7P8PCk6x/JCVzSA2
Z3bg9SYM+//y7mxvf+z/5e4cbzOw/g0SPP7nhDT7jfD/HHd+v3+J9W+/O8fb
Lqx/T9y5fzn2/2U68vqfQKxuJfj4p94J3nhf0A3syPujKMz/WYLbhA3Veudi
/u/pyO9jgzD/H3bk840pmP8Sjzzlz2u9tRGPMP+dBacNuOs4aCvWv34evH+R
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
3WX4P3QCzx8J9M+dwOf5n6HfMIHnw1vEf+YEjs8PiP9yEzk/WkN/64m8nrcm
1oVM5PxWm9g4eyK/nzXA/N8neInlbPqmatD/eCLHYyPoLz2J9yPNoL/lJN6/
dyc2DJjE/QXD/9pJnP+7wv97JnH+Gwj/P5jE8WyF/FckuF1cO8X8l9DffHKe
Mmytk9E/G+tf38kcz2WQ/2ZO5vF8h/93CnbxvOhTxRr577/JbJ/f0P93Mq8n
n6C/yRTeTxyBftUUnj/HoH/6FF4vLkP/tikczwuofe2dKXx/MA/r3+8pbK/x
yP8Np3I+WoT8HziV811brH+xU/l8IpFYs3kqz/cUYv3Nqfx+1pf2J6YfU3m9
+UjlkgaxPJ/fEct7xnL83Kb66smx7M8mtN/QpcXyfUIS9j/XYjlefhNbvpY8
X4D132Earwde1J6q+zS2L+prJ0zj+eRC5Yb103j9XktsvjyN16tQYunnaezP
EcSKenFsDytijV8c75cs0B8dx/5FuWlNHMcPxiO5GMf7XSXpk3+M4/nalFhd
Zzr7Ox76O0/nfAE2jpvO9n6M/d/K6byfsqNy2fnpbN84YlXedM5HXbD/qxXP
658T9n8+8ZwPWmH/N0bwOs8/YVULoH95PK/PZug/F8/+L4T+nHj2919iffUZ
nC97UXsmrxnc/nZiyegZvL8Omkf6l8zgfGdHrD4teOHlp1m/XYh1b2ew/49C
v83MPOWhp3/Tr78ktnScyeMtRfVlI2fyfsaWWLV4Jsd/E2LtiZm8v2xHbHg1
k/dH1sTmKgm8fqiJpR0SeL8xklgxLIHrRxJrFibwfFER648m8PtZMrEpK4Hj
+RixpJKW9R6BfjfBm0Y99zl2CfqHanm/W2E+6Z+n5fiqvoD0H9Lyelx2Iel/
puX14M4i0l9hFucnW2JVm1m8vpci1g6exfMnlNiQNIvjsXkK6T8wi/fPCYtJ
/9NZ7I9IYkXZRH4/rEiscUnk9a0+sT44kf3VNpX0Jyby+vGRWLIvkd+/gnSk
/1Ei728qLSX9pWbzfmUP1de1mM3rTRsar7H/bJ4fI4ktCYIvR7lpV02D/t2z
Of+1h/77s3m+DoH+wtkcL4Hwf7M5vF9uQvY295nD9kwnls6Yw/uLZcSKHXN4
vdxPrLk7h/PFX2J9wRyeH2HUn6lxEtvnCPlLokpie9ehcnlcEs/nX1Su3prE
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
WmkvxuOnJFa47UX9O07EmqF7YT+X/vD/vL0c79t2kv5Dezm/R1K8SJ7vRb6o
2YdYXmEfz+d/e0h/m31s7wzyn27wPo7HXdS+MYnLs2cTWw7s4/aGUnuypyXP
DyFWld3P81u/j/S77Gd/X6JyQ/B+5N+Ge6k9c+J+Xi8jiKX79iO+90RA/6P9
iK9TgdBf6gDir5ovsb7FAfjr6BdiU/8DvJ65wv9art+7I7F89wGO1+dUX31f
cKXuBY6hSYj/wgOIr4gcxH8zA9u/Oj1v6WNAPL3uAf/PMHB7pSm+VDsMHI9b
ibV3DRjPv33EhoKS+k+JzY0Por+crkdJv+og9LSzOUb64wQv+Vroc/0KsWbr
QcSL3IVYf/sg8tWqIcSmXwfh38S31J6k4SGe3w+J5b0O8XwMoPrqqYcwvydO
P076Nx3i+ZhKbLxxiPNNLLHl+yG2pzOxTHYY9tiyktpX9TiM+XdzCrWvnXQY
8XJfSvUNGw9zPC2ncvPVwxh/7WnE0q+H0f+TiidIf/0jPN++0POabkc43rqc
JP0xR3h+Rp8i/euOYL5pt58m/ZePcLw3PUP6LUeg9+s9YnXdo+zvT8S6Lke5
/nh63jj+KObzsBxiy+qjbM+GZ0n/haO8Hr+jctWHo7BHw6c0Pm3tY2zPB6TH
oDzG8duJ9JgjjyE+ZqRRfenKY5wv8ogVxmPw/4JlND5N7jHuP/0c6a95nOPL
ntjU6Tjs02Q8sWQMl88YmU76lx0vef8xkv6zx3l/mEzlunfHcR912YHKjdVO
cH4Mp3KL5wmUP0a5LPwE4nVyi/OkX8flXTtmkP5TJ5AfW7a6QPrfcHn4NmJz
1ZPID4EqYmnHk6h/8y+xYkQJR18i/SnMAZuI9cdPIj7W1L9M+l+W8EViSZVT
4JCuV0h/+1Ns3/c3SL/6FMafH3eX9C8QvGNpKX2Ii4n0H+Hn7bbdIv0vTiEe
Dre+TfornoZ/XBdQfZXraTz/pBS1px1yGu1XKU/lhuTT/H7fith8kOuf7EH1
pc+YQyrdI/3lz3D7B/8j/fIzaG/RbmL9IOaWofS8aY7gkKjCsCZe1L7kwBmM
d+JzGq/8yRnYP7sM9Jc5y/Y6epP0tzrL5W2p3DjwLNt7FLFlVkl5zB3Sv/cs
9Cg+UfuqhyWcTO1pJefYfnpig3MJB1wj/f3OYXyu26l9aQKXr9l7nfTvOof+
q/iS/TX3zvH8NhDr/5XUn0r9m5qmo1xdjuwh6cNsrE8sj0+HfcJrk33U29O5
/U3Uns6Uzv6dReM1/kmH3u2d4P9GRtbvQuOTBRnZPoE0ftU0I+urAv1bjOzv
bKpvuFXy/D9i808uV8RQvEqdznN7Tym+FQHn2X9jqFwzhfnwHmK9/jzrb0P2
NF3n56vsRPx/L6kfQu3JHTPY3h7Eav+Mknim+rqJJfyPyo0bSvguseVKBs+n
YKov+5IBPU3K0fxS2V/g9qVUru16gcvPYv5rLmB8i35g/q+9gPsrv/eUP6SX
LrD/fIgVny4gv07KI9bYXUT7s5wp/+h9L/J+qQXlX1PURbZ3D+S/1Rd5P3iJ
8rU84yLWsxuNkP/ymWdIqX2d7SW0//Uh8p/iEsb/6zzy39hLWK/8o6m+bMUl
2KPpDaqvSr+E+atamEH633N7rpnQX+Myt4/8Zva+zPY8QvaVRlzm+Fh3kfQv
Zd6ej/x3hus/8YP/s7k915dU3yS9wvNjAbUv8bzC9nagcvmoKxj/fGcqV6de
gf4hZhqv7uQVHo8P1Te+5udvfiG2WF/l8QcSy9yvcn8jaHyq4VzuuoNYu+gq
j1dD4zUcu8rxHU9sNl9lfWsR/5WvcfvWiP921zDea1NovJowLp8VQuPVz7/G
65UXsenwNfZ/b/KP5MU19sdRKpdbXcf8T/1D5eq21zGecd/h/9DrGO+7JvD/
3OtYn8a3J7YYuH5Lf6x/mdd5v59P8aYqd4PPn2yoXNv6Bsr7ZhIbQm6gvTMR
1J959g2sx1s0iP/9XO5VBfH/+AbGe2cg4r/0TbDNR8R/y5t4/vUqYtOAmzxf
rYgls25i/ai0hsYn33OT95/VKZ7VD27y+90/mj+6opu8P8yl/ZSx+S3ef3lj
/9P3Fp73OEPlspm3eL+3B/ufnbewn7aX0XzT/neL7XGJ6hv+3oK/YtcRm5vc
5v1IPvY/vW/zfrCIyhXTb/N4oql9zbbb/D4wgcr1d27zfu0Q9n+/S9pzx/6v
0R3Or3ehP/AOv989IlbH3uH367bY/2y+A/sv7gL/37zD7yNxmP8/7vD4XtDz
sgYm3h+/pnJVTxPnA1f4f7IJ9s/tSv4zpDFfD4P/r5nwPZJHG/j/mwnxqomB
/x3u8vplofjVdL+L+HuB9vQT7sLf52WI//V3Yd+5KYj/K3cxPu/OiP/Pd3k/
OYpYXe8/3q9VIdb5/cfz6w49b4z+j+1Vkcota/7j84QKNB9lF7n+sC9UrvrI
XENJ5do693i/l0nlhs73uP1AYvO4e7DnGLQvXcW8qj2x4jw//2sX4j/vHvSf
i0f817oPf8esR/z73Of6FaF/7H2sL6PKE8uX34d95WnI/+fuwx5jg4l1Odxe
743kT2P1B9AbXx/z3+sBj68e5v/oB/CPXo/8v+QBxjczBv4//QDxcGUMtWd4
+4DPi5JofphtHvJ50xZiqcdDfn9wJ1aMfMj55TT2/4sfQp/7VWL9iYe8/8/C
+veK21slp+cl1o94/nzE+0+HR4iHFl2pXD3sEb//TSbWLSzhTGLj0Uc8f5pR
vFuyHvH8HYT3n0qPef7dJVa5Pebzz7eY/0Mf8/wqJDbMe4z+865C/6GS+pHQ
//wxvz8nYv5XeML1/xBr2jzh9/VjeP8b/ITfJ2/R+5Up6Qnet0JqUH2J4Qm/
n7lTffnTJ3y+vZJYXfYp7x9GEOtcnrJ/ApH/gp/y+UwMsSXxKfLdoljkv31P
+bzBn1j1iOsbLtD7nbZUZkm+xftfC2aP+sTm/pl8njOGWKrN5Hxzi55X7M7k
8zxrKtfcz0T7Ghsq1xdm8v6mB/Q3e8brX1nSI+n7jPV8pnL5jGfc30Po3/GM
42UW9N99xvouERsLnnE8fiK2NH7O63016Fc953xwFfrjnnO8TibWbuX6xv7I
/7ef8/v3Sej/9ZzPb/5Af8MXfN7SD+//vV5gPFWGQv/UF3zeNodYv+kFnz88
gv4bL/6vP8mPFyXrH+JflsXz8Tre/3tkIZ6eOSP+J2WxvU9RuXFjFp7vUUBs
uZrF79N/iGVf+Xl7R6z/9c2IN6dJmP/dzHz++B3zP4bLl9sQm9eZ+TzyLbH0
spnzp4SeV1jMvD5YE2vqvuR4+kb19V1ecjyMxPv/+Jd8noT5JVnzks8DUrH/
vfCSx1MJ8//DSz5vicX6X/sVt78e5x/KV7y+N8X6H/mK7T8M/l9ZUr6J7K8y
8vMeO3H+kfuK/dsM8V/zNa/fq+D/Tq95vhyC/8e8RrwuWQP/L3vNz3eA/8++
5ny2Ff5/V9LeOfi/2hs+3z6C+Pd6w/mpNuZ/+Bs+fxmL+Ne94f0N2tOdKqkf
jPh/84b7z6FyS9W3HN9zqVzW8S2vjz6I/xFv+XwuEvGf8pbPV1wR/8ffcry+
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
+g==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6199008*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6199008*^9, 3.8333952*^9}, {0, 63503.457031}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.8334365092393265`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"2c477c53-12f5-4c29-907b-2eb9025b472b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Ethereum", "Subsection",
 CellChangeTimes->{{3.833431097893951*^9, 
  3.833431107750783*^9}},ExpressionUUID->"abbc57fd-6602-4e1e-86a9-\
8c69e05a5a34"],

Cell["\<\
Ideja za Ethereum je \[OpenCurlyDoubleQuote]padla\[CloseCurlyDoubleQuote] \
leta 2013, udejanila pa se je leta 2014. Za razliko od Bitcoina, vemo kdo je \
ustvarjalec Ethereuma - gre namre\[CHacek] za Rusko-Kanadskega programerja po \
imenu Vitalik Buterin. Za mnoge poznavalce je Vitalik pravo \[CHacek]udo, \
skoraj prerok na Kripto platformi - nadarjen ra\[CHacek]unalni\[CHacek]ar je \
bil namre\[CHacek] star zgolj 20 let, ko je ustvaril Ethereum, ki je danes \
najbolj aktiven \[OpenCurlyDoubleQuote]blockchain\[CloseCurlyDoubleQuote] na \
Kripto-trgu, je decentraliziran, ter sama tehnologija za Ethereumom naj bi \
bila ena najbolj dovr\[SHacek]enih v dana\[SHacek]njem \[CHacek]asu. Po \
mnenju mnogih strokovnjakov naj bi cena Ethereuma v prihodnosti prerasla ceno \
Bitcoina (Ethereum je trenutno drugi na lestvici, govori pa se, da je v \
izdelavi \[ZHacek]e Ethereum 2.0).\
\>", "Text",
 CellChangeTimes->{{3.833431112096972*^9, 3.8334311226989317`*^9}, {
  3.833431170546014*^9, 3.8334312448178496`*^9}, {3.8334312789651775`*^9, 
  3.8334313447582026`*^9}, {3.8334314203673344`*^9, 
  3.833431762129609*^9}},ExpressionUUID->"f1b8be85-9f57-4ab2-bb77-\
299367abf54b"],

Cell[CellGroupData[{

Cell["Tabela - Etereum", "Subsubsection",
 CellChangeTimes->{{3.8334372890785427`*^9, 
  3.8334373032857723`*^9}},ExpressionUUID->"c1a64801-c9ba-4675-a134-\
c557b9007449"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BlockchainData", "[", 
   RowBox[{"BlockchainBase", "\[Rule]", "\"\<Ethereum\>\""}], "]"}], "//", 
  "Dataset"}]], "Input",
 CellChangeTimes->{{3.8334317672357745`*^9, 3.833431776967823*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"167bdbcb-822a-4707-b669-04e541327393"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Type" -> "Ethereum", "Name" -> "ETH.main", "Core" -> "Ethereum", 
       "Blocks" -> 12689773, "LatestBlockHash" -> 
       "3dcee63a29fe85e33459aa641ee75e535cca11327e432625b38dc51dc2f472e1", 
       "LowestGasPrice" -> Missing["NotAvailable"], "AverageGasPrice" -> 
       Quantity[17.538615703, "Gwei"], "HighestGasPrice" -> 
       Quantity[60.00000000000001, "Gwei"]], "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Type"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Core"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Blocks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LatestBlockHash"} -> 
        TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
         "LowestGasPrice"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"AverageGasPrice"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"HighestGasPrice"} -> 
        TypeSystem`PackageScope`AtomShape[75]], 1], "InitialType" -> 
     TypeSystem`Struct[{
       "Type", "Name", "Core", "Blocks", "LatestBlockHash", "LowestGasPrice", 
        "AverageGasPrice", "HighestGasPrice"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], TypeSystem`UnknownType, 
        TypeSystem`Atom[
         Quantity[1, "Gwei"]], 
        TypeSystem`Atom[
         Quantity[1, "Gwei"]]}], "Meta" -> 
     Association["ID" -> 184847038401027], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Type"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Core"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Blocks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LatestBlockHash"} -> 
        TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
         "LowestGasPrice"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"AverageGasPrice"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"HighestGasPrice"} -> 
        TypeSystem`PackageScope`AtomShape[75]], 1], "Type" -> 
     TypeSystem`Struct[{
       "Type", "Name", "Core", "Blocks", "LatestBlockHash", "LowestGasPrice", 
        "AverageGasPrice", "HighestGasPrice"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], TypeSystem`UnknownType, 
        TypeSystem`Atom[
         Quantity[1, "Gwei"]], 
        TypeSystem`Atom[
         Quantity[1, "Gwei"]]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     8, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Type", 
                  Style[
                  "Type", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Type"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Type"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Ethereum", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ETH.main", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Core", 
                  Style[
                  "Core", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Core"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Core"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Ethereum", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Core"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blocks", 
                  Style[
                  "Blocks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Blocks"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blocks"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12689773"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blocks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LatestBlockHash", 
                  Style[
                  "LatestBlockHash", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["LatestBlockHash"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LatestBlockHash"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "3dcee63a29fe85e33459aa641ee75e535cca11327e432625b38dc51dc2f472e\
1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LatestBlockHash"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LowestGasPrice", 
                  Style[
                  "LowestGasPrice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["LowestGasPrice"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LowestGasPrice"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LowestGasPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AverageGasPrice", 
                  Style[
                  "AverageGasPrice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["AverageGasPrice"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AverageGasPrice"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"17.538615703`", 
                   RowBox[{"\[VeryThinSpace]", 
                    FormBox["\" Gwei\"", TraditionalForm]}], "gigawei", 
                   "\"Gwei\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AverageGasPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HighestGasPrice", 
                  Style[
                  "HighestGasPrice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["HighestGasPrice"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HighestGasPrice"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"60.00000000000001`", 
                   RowBox[{"\[VeryThinSpace]", 
                    FormBox["\" Gwei\"", TraditionalForm]}], "gigawei", 
                   "\"Gwei\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HighestGasPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{619., {116., 122.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{619., {116., 122.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833431779445527*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"de09c46a-4218-4c13-8b5c-38d08154a1dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graf cene Ethereuma", "Subsubsection",
 CellChangeTimes->{{3.833437307043234*^9, 
  3.833437346786414*^9}},ExpressionUUID->"e00f3810-226d-4008-9d27-\
dd2d43725db2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<ETH\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8334373331270905`*^9, 3.833437335092026*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"cb7e2f34-2b2f-4cbb-801f-b2df8aa41ef4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAUZxkcM4t60HwKQa8Ji0GQPDp6P6S
M+tBHo1p+bR07z9AA57A0znrQbb+e/d3Zt8/FWb9bao/60GLwOn5k77tP9Q9
icljRetB4EvnUf4i6z9E4UVYmUvrQdnGQjgxigRAOc6s0mRR60GRmcrHYKsm
QN+GRICsV+tBL4mxRC2WIkBvtAjc1l3rQRUd3Qk3RSlAhCt3I5dj60EfTOpC
QKwoQEpuFp7TaetBqCb/8ADVJUCW+l8Epm/rQcYXIci53CdAy/vVGFt160Ed
u9K5WuQnQLHIfGCMe+tB7pVdKok4I0Ad382TU4HrQTUqRNSgBR1AOsFP+paH
60H4X7TaRJwlQEAY/g69jetB5bdeUoC6NUDMuFYPeZPrQQ3yjqvJfkhACCXg
QrGZ60FSRGlT22xmQMraE2J/n+tBuzqKLSUvckA9XHi0yaXrQehSKwSFKGxA
mVIJtfar60GAT67aCz5yQHuSRKG5setB+ASeOrbvdEAOnrDA+LfrQffw6YXZ
inhAJ/PGy82960G+NCaW4TGHQCm9CYWFw+tBKdnR0TjYkEDcUn1xucnrQRDY
xgsKnoVAFDKbSYPP60EZXP1DvNR/QP3c6VTJ1etBbAcoTKeVg0DQ/GQO8tvr
QQ6q+v4a/3pAKGaKs7Dh60F+q0WCpPx5QDGb4Ivr5+tB/XWQhmGfaEDAGeFP
vO3rQXxAHlsAnGlAOA0Owm/z60GwiQl31ENlQGHMa2ef+etBiAB5LPJtYEAQ
1XP4ZP/rQbyH5NUVEltAcKmsvKYF7EGRpaNl0CphQFXHj2x+C+xB94qvdiSp
ZEAkWp/KOBHsQZ7QvzfNVW1ApLjfW28X7EHg7SRBL7xzQKlgytg7HexB/6lg
9pBTakBf1OWIhCPsQUsA6on3QWVA/7wt568p7EFNu6edsAhnQCTvHzFxL+xB
VF9oQ4vtZkD67EKurjXsQbZegvKrm19AVjQQF4I77EGnSM1AtJdmQJvwCS44
QexBk3rMuyc2bECReDR4akfsQTPW+vHdx2NADUoJrjJN7EFAtK1nGAtpQDrn
Dhd3U+xBhwt5eMCCbkBQ+UAunlnsQQfOUGMiHnVA7FQdMVtf7EFHxA+/vx94
QDl8KmeUZexBOUWDtbJqd0AL7eGIY2vsQVH6ncUbFHxAjinK3a5x7EE1KtmD
uIeCQD5PMeGwduxBncOL3O0xk0BJz76V
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$275301#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6478944*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3647894400, 3833395200}, {0., 
                1228.482286628546}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2144", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAUZxkcM4t60HwKQa8Ji0GQPDp6P6S
M+tBHo1p+bR07z9AA57A0znrQbb+e/d3Zt8/FWb9bao/60GLwOn5k77tP9Q9
icljRetB4EvnUf4i6z9E4UVYmUvrQdnGQjgxigRAOc6s0mRR60GRmcrHYKsm
QN+GRICsV+tBL4mxRC2WIkBvtAjc1l3rQRUd3Qk3RSlAhCt3I5dj60EfTOpC
QKwoQEpuFp7TaetBqCb/8ADVJUCW+l8Epm/rQcYXIci53CdAy/vVGFt160Ed
u9K5WuQnQLHIfGCMe+tB7pVdKok4I0Ad382TU4HrQTUqRNSgBR1AOsFP+paH
60H4X7TaRJwlQEAY/g69jetB5bdeUoC6NUDMuFYPeZPrQQ3yjqvJfkhACCXg
QrGZ60FSRGlT22xmQMraE2J/n+tBuzqKLSUvckA9XHi0yaXrQehSKwSFKGxA
mVIJtfar60GAT67aCz5yQHuSRKG5setB+ASeOrbvdEAOnrDA+LfrQffw6YXZ
inhAJ/PGy82960G+NCaW4TGHQCm9CYWFw+tBKdnR0TjYkEDcUn1xucnrQRDY
xgsKnoVAFDKbSYPP60EZXP1DvNR/QP3c6VTJ1etBbAcoTKeVg0DQ/GQO8tvr
QQ6q+v4a/3pAKGaKs7Dh60F+q0WCpPx5QDGb4Ivr5+tB/XWQhmGfaEDAGeFP
vO3rQXxAHlsAnGlAOA0Owm/z60GwiQl31ENlQGHMa2ef+etBiAB5LPJtYEAQ
1XP4ZP/rQbyH5NUVEltAcKmsvKYF7EGRpaNl0CphQFXHj2x+C+xB94qvdiSp
ZEAkWp/KOBHsQZ7QvzfNVW1ApLjfW28X7EHg7SRBL7xzQKlgytg7HexB/6lg
9pBTakBf1OWIhCPsQUsA6on3QWVA/7wt568p7EFNu6edsAhnQCTvHzFxL+xB
VF9oQ4vtZkD67EKurjXsQbZegvKrm19AVjQQF4I77EGnSM1AtJdmQJvwCS44
QexBk3rMuyc2bECReDR4akfsQTPW+vHdx2NADUoJrjJN7EFAtK1nGAtpQDrn
Dhd3U+xBhwt5eMCCbkBQ+UAunlnsQQfOUGMiHnVA7FQdMVtf7EFHxA+/vx94
QDl8KmeUZexBOUWDtbJqd0AL7eGIY2vsQVH6ncUbFHxAjinK3a5x7EE1KtmD
uIeCQD5PMeGwduxBncOL3O0xk0BJz76V
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$275301#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6478944*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3647894400, 3833395200}, {0., 
                1228.482286628546}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2144", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1: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
UIDXzRbgeCDHoXqnyQ9iS66JMsf7wMmjVkRbHRfHM90b72O1Bx6X54H9UugB
vJ8CsYaOO77vMwfjjLeXXE974X0g6xaktw95Y16+7oHxgfDCepn8fJytJeya
ysV93qc8qNlwiOo4iYfjbZ/8OpOL83SbN/bPXy8Yq8dqeZTCxXrygTd8uzmu
zeYbF+tWdR9Yd3u5MJ2s99D+sOV1dIo3PDq4s+V3nbx+8+fi/NDl4vnWyZ9T
ysX1o5CL67LlXLyuM+4YVzM9sN1/PLC/guR+WeqF51vnBaKsL63H33vi8d7y
z2BPXD+e9gTNm65EcrEnrvOjPXH9uE8+jqwHkX92e8rj0BPXlfGeuN496Ynz
5bgHXt9ZD/jdlE9dSNa56PsmD+yP6Z6ovzs42hNurVMjDnzxxHbreGHes/YG
7pgr1CaaN65LEuT7ttYL81OaF16fF3ltxyeYW7xwPLzxxPXTKQ5+fhYHx+kH
Ns4jKRsO/97YoqfDwXlf4oLjwIqJ71dlASPiieb80wzI9T5a8PWpM0yyuFGd
x3DEfKLhhPNOZQ+YXfVpKRLtwX2YXGew33q6+pqLE4jXjBT+snJEOv5UqRPw
1EbXtqs5QfyBc1GLVu6BuAdHzC4e2AOoTZtvj/TaxX5boHXe0nyzfTc8Page
tWz8bkipK4iacXc33MncVtvWbQvnv5AJvMoWWuemSn6V2ELWlGbNvYW7cH9x
2i7k/6Uau3CfbNsuODpdS5x6Zzcs3vIqymSjPe5f2dhjv010gmuTTxI3GHtg
csbZgpwFTjCW8KNE2jFxvyGBhfB91Eomyovz4Uz4sntEdZOeE+yvmsG4sJiF
dFIGsCB4gYtYFM6Cu2mPpHdOMoFTHStens0Cx7SjkniWK5jJXtgqdgFhQiGI
t7uCR3cr0zfAFW66d7e2XnaFqmXxFOYPFxhMNdSKue8C+Y47qOdfuyC8GzGd
CVNLqmpntDMgg14iaYpkwOCBT/mBpk4ga3ct0mHCqdvHKWoxzrCiQkNbod0Z
v9fxhdy3rAHtUnCGaVEnxMu0GUAdl1rg2uwEvZwNxCwrJ/hgTm99ecYJNg/p
C386OgHz4YgY091OMHKuU+1Scr86bb4KN2o5gY/6BrN+e0cI1Z6teaPEAc7e
mKtlyXGAiUsDNVVW7IEQo9b8zpsOcKJgonRMpwNcW7ialZSzBywHHFsSWhxg
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
h/z2aI4Y/gfbCMXe
    "], CompressedData["
1:eJxdnU2u7MxxRD8DHgjehXfA+s3MJRjQyCsQPDDgkQfy/uGIpv3xpARBeAG9
V7dvNLtOsXjI/tf/+O9//89/+uOPP/7+z/qfv/7X3//nH9Lf/oL0b/+iP6y7
I2vv5/kzVj75xXxuTMRx1kWc+peIa14MlXtMDrWrONTJw6F+P+eLcZJD5d4c
qtbAUPWMwFA1nv0w1oOhasbFULXu4lB7F4f6/bpfvHNyqHiSQ0UdDpU5OFT5
x/5/PM9zUPt5xkbt55kTtZ9nDdR+fr8eY14OdWJyqHuKQ8U+HCrX5FA1UPsZ
z4PaFQu1nzECtZ/xe/O/uM7Dofa6HOrMxaHuUxzq1uVQkZND5U0OVQe1648b
tZ/5Owa/OAdrn+th7XMla587WPt0cYh3s/YZi7XPHKx91sPa5++j8GdcT7D2
NS5rX/Ow9rUWa197svZ1Bmtfp1i73gPWroFY+/p9Ir9Ym7XvZ7L2PQZr3/Nh
7fv3d7+4grXvfVn7Ppu177tY++//Q9SUxKGyWLs/hBjKRz+GOr+X/EW93xhK
RbN2/4YcSkNzqN/89MUbrP3EYe36u6xdH0jWfn/NfXE8rP2OZO13Bmu/67L2
+5smv6ijg0Pdydr1kln7jWLtv88YYl3WHs9h7TEWa485WXv8ZmvEYu0hMnAo
Dcah/F/E33H0xVysPWqwdv2RtQtsrD1/0PjivKw912btegNZe2pe4VC/wxmR
SD0ZROrJJFJPFpF66iFSTw0iVQcOkerjiLXXIlJPbSL11CFSNS8QqaeCSD2V
ROqpIlIViVT9PSLVhzNqvzqaUft9FpF6n02k3ucQqYpE6n0ukXrfH/vFJFJF
FCLVnyrUfscgUu/vAGUkUu9YROodm0i94xCp9/3tvxhEqj7NRKoikXpHEan6
uBKpdw4iVWsRIvUKqKxdrbL290344iFS77xEqucY1j6TSL2ziNS7HiL1rkGk
KhKpqoZIfSd6xE2k3nWIVE91rH0FkapIpF6RnLWvIlL1Q4jUuweRet9D8ouL
SFUkUv0pYu37EKlaIhCpWl4TqV5As3YtVVm71ois/f1kfHEQqV6OsHZN/Kxd
AGbtv3cX8RKpnutZu+Zc1q7ZjbW/H9A/oz7erF0fJNauI5i160hi7XcRqS6L
tZuxHOoSqVdTKmt/54kvFpGqSKQag6w9BpGqgYnUG4tIvXo/WXscIlWRSL3v
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
Vcc6kboO9aQwyFn7oZ7k+ZVIXZd6kiORui71JEXqSfZSidTfbX8cinpS/Gxi
DpVE6s9Z4FDUk+K3M4qhgnpSrKCeFL+PLIYK6kmORKqWV0TqCupJitSTFKkn
/SQS1p7UkxyJ1JXUk8xXInUl9SRF6kmK1JMUqScpUk9yJFJXUk9SpJ5kWZhI
XUU9yTMMkarZikhdRT1JkXqSIvUkRepJitSTLCkTqauoJzkSqfo/iFRf/kTt
+6GepEg9yYcCkeo7ew6Hop7kSKTuh3qSV49EqtbaROoe1JPi3X5FpJ7kSKT6
BqPiUNSTFKkn2eAmUjWJEKla8hOpikTqHtSTfHcKkbon9aTw3hZrn9STvBVA
pO5JPcmRSN2TepIi9SRF6kmK1JNC+CFSfbsVa1/UkxSpJ9lnJ1L3op6kSD1J
kXqSIvUkRyJVwCFS96Ke5KOGSN2bepIi9SR71USqTsOIVJ+VsfZNPclbTkTq
3tSTwjefsfZNPck6P5GqSKTuQz1JkXqSIvWkeKmASD3J1+yIVN8Dx9oP9SRF
6km+yYBI3Zd6kiL1JEXqSYrUkxyJVE2DRKo/cqz9Uk/yzQ1E6r7UkxSpJzkS
qTuoJylST7KPQaTuoJ4UviOQtQf1JN9jQaT692HtQT1JkXqSIvUkHTbUkxSp
JylST3IkUnWUEak7qSf5zg8idSf1JEXqSb+jl7Un9SRF6kniOvUkY55I1cFO
pO6inqRIPUmRepIjkaojgUh9r6UhUk9SpJ4Uvk0TtZ+HepIjkeptftR+HupJ
XpkQqTrdJVLPQz3JtxoSqYpEqi9ULA5FPclXYYnUM6gnKVJP8hFJpJ5BPcmR
SBV9iVSdSxCpvmk1OBT1JN8GRKT6Z6J2RSL1TOpJitSTFKknKVJPUqSepEg9
yZFIPZN6km9OIlJ1FkqknkU9KbzFxtoX9SRF6kmORKpv4WXti3qStxCJ1LOo
JylST1KknuRIpL5LfMSmJ53d9CTfSczad9OTzm56kq9Esfbd9KSzm550dtOT
zm56kqYYIvWcpid5WmDtp+lJ5zQ96ZymJ53T9KRzmp50TtOTzml6kiKRqlM6
ItX3VbP22/Skc5ueZDix9tv0pHObnnRu05PObXrSuU1POrfpSec2PelE05NO
ND3pRNOTTjQ96UTTk/zJZ+3R9CS9uUSqTtKIVN9lztqj6Uknmp6kN4FIPdn0
pJNNTzrZ9KRXjGAkUlUrkeqb3Vl7Nj3pZNOTfLGUtVfTkxSJ1FNNTzrV9CSd
3xOpp5qe5KvOrL2annSq6Umnmp6kI5RIPdX0JP07IvU+TU+6T9OT7tP0JN/6
Hxyq6Un3aXqSL+ldDtX0JCGDSNWvR6Tep+lJdzQ9SVM5kaqFKZGq5SSRekfT
k/QBJVIViVRNv0Sqr5cUh2p60h1NT7qz6Ul+EAJrn01PurPpSXc2PUnTBpGq
Uxoi9c6mJ737NYhNT1IkUv08Bta+mp50V9OTfD2fta+mJ93V9CRFIvWupifd
1fSku5qe5JNh1r6annR305M0axKpikTq3U1PurvpSXc3PenupifpeCVS/XQK
1r6bnnR305N8psHaT9OT/Kw01n6annRP05P8WC7Wfpqe5CdPsfbT9KR7mp7k
hxyx9tP0JD/Wh7Xfpifd2/QkP0GGtd+mJ/lZHaz9Nj3p3qYn+fEcrP02PcnP
p2Dtt+lJ72GE2PQkP3SAtUfTk3zXPWuPpidZOWHt0fQk30rN2qPpSTeanuS7
dll7Nj3JChFrz6Yn3Wx6km+JZO3Z9CTfBMjas+lJN5ue5PvNWHs2Pck3XLH2
anrSfZftiESq76Jh7dX0JN9Gwtqr6Um+cYK1V9OTfG8Aa6+mJ8XT9CRr6Kjd
Ojhqt3iN2n0cFYdqepId38mhmp5kq/VwqKYnxdP0JAuUqN3mImq3QYja7eqh
9nfzHbHpSdbCJodqepK9qMOhmp5kEyg5VNOTLLugdksnrH02PcleBWufTU/y
ziZrn01Pitn0JF+0Zu2z6Um+TMvaV9OTYjU9yVcEWftqepIvibH21fSkWE1P
8jvC2lfTk3y9gbWvpifFanqSt7ZZ+256kndvWftuelLspid5o5C176YneWuM
te+mJ8VuepJ3YVj7bnqS9x1Y+2l6UpymJ/kUl7Wfpif5HI+1n6YnvWsCxKYn
eeHO2k/Tk7xyZe236Uleq7H22/QkL0dY+216UtymJ5l8rP02PckTLmu/TU+K
2/QkTyusPZqe5A8Sa4+mJ0U0PcnvGWuPpif5RbP2aHpSRNOTfDSz9mx6kiKR
KgwSqZFNT4pselJk05Mim54U2fSkyKYnKRKpkU1Pimx6kv8qa6+mJ+n3I1Kj
mp7kh3Kx9mp6UlTTk3TOSqRGNT0pqulJWhQQqe+VVEYiNZ+mJ/nZYKhdBxmR
mk/Tk+yWJodqepIikaq1CZGaT9OT9G4TqTmanuTLVKg9R9OTcjQ9KUfTk3I0
PSlH05PUOZGao+lJOuiI1BxNT/KT0lB7zqYn5Wx6kq8BsPbZ9CS9YCI1Z9OT
cjY9KWfTk3I2PUkkI1JzNj0pV9OTcjU9KVfTk8RTItULRta+mp6kjyCRmqvp
SbmanpSr6Um5mp6Uq+lJuZuepDUQkap1K5H6nuAhNj0pd9OT/Pg61r6bnpS7
6UnWn1n7bnqS1stEqiKRmqfpSQIMkZqn6UlePbP20/SkPE1PytP0pDxNT8rT
9CSt4onUvE1P0rxIpOZtepIf5sfab9OT8jY9yUsT1n6bnpS36Ul5m56Ut+lJ
eZuelNH0pIymJ2U0PSmj6UkZTU/KaHpSRtOTPO+z9mh6UkbTkzKanuRHG7L2
bHpSZtOTFInUzKYnZTY9SadWROqrxSA2PSmz6Ul+wiJrz6YnZTU9yYY+a6+m
J2U1PUlneERqVtOTFIlUtUqk2jlg7dX0pKymJ2n+JVLraXqSIpGqtSaRWk/T
k/SSiNR6mp7k500Gh2p6Ur1XORCJ1HqanlSj6Uk63yVSazQ9SeQmUms0PUmR
SNVbRKTWaHpSjaYn1Wh6Uo2mJ/kFovaaTU+q2fQkrWuIVD99k7XPpifVbHqS
1nxEas2mJykSqZqridR3t+6Lq+lJtZqe5IeAsvbV9KRaTU/yTSSsfTU9qVbT
k2o1PalW05O0rCNSFYlUb4Ww9t30pNpNT6rd9CTNEkRq7aYn1W56Uu2mJ9Vu
epJmKyLVj0Rl7afpSXWanuSPGGs/TU+q0/SkOk1PqtP0JC1yidQ6TU+q0/Qk
RSK1TtOTBDYytG7zkbxqZ8+3+Uh1m49Ut/lIfiIse77NR6rbfKS6zUeqaD5S
RfORKpqP9M4aiM1Hqmg+kh9My56j+UgVzUfyjU3sOZqPVNF8pMrmI1U2H0mn
GmRoZfOR/FNYezYfqbL5SJXNR9JimgytbD5SZfORqpqPpEiG6gSIDPVjell7
NR+pqvlI1nFYezUfSZEMrWo+UlXzkaroI/nlgqH6A30kRfpIivSRHMFQRfpI
+gN9pPRuZXEo+kg+/wNDFekjOYKhacAODDXoI/mMHQxVpI+kSB9JkT7Su/7n
UPSRfFYKhqafnVwcij6Sn0YJhqbvvWPtkz6SY7H2SR9JkT6Sz4YPa5/0kdIb
2ax90kdyLNY+6SNpgUgfSZE+kvd2Nmtf9JF8Uj5Y+6KP5JisfdFHUqSP5Ed1
bta+6CPpdJ8+kiJ9JMdi7Zs+krcKLmvf9JEU6SP5EaGTtW/6SI7F2jd9pPQW
DGs/9JG8RbFZ+6GPlH6uNms/9JEck7Uf+kiK9JE8aW7Wfugj5bsE/OKlj+RY
rP3SR1Kkj6RIH8kXYRdrv/SRFOkjORZrv/SRFOkjef/msPagj6RIH8nPbR2s
PegjOSZrD/pIivSRfBFrs/agj6RIHyn9sHPWHvSRDIFk7UkfSZE+kiJ9JEX6
SIr0kRyLtSd9JEX6SIr0kfwU283aiz6SIn0kP0jrYe1FH0mRPpIifSRvqm3W
XvSR0qcprL3oIzkWay/6SDke+kiK9JHyvXCOSB9JkT6SI5CqSB9JkT6SH/FL
pIpOROp46CNp9UgfSZE+kteWZKgvQy7+WypGilSMHElJ8YaUHIOKkXcrSckx
qRilH7HPJicVIz+0mJT0VRw2OakYKVIxUqRi5K0AUlKfXlJyLCpGjqSkViqk
5FhUjPwoZVJSqwBSciwqRunfrjgUFSM/noCUHIuKUfoLB1j7pmLkRziTkpr3
ScmxqRg5kpL6m6Tke4qOSMVIkYpR+nsPWPumYuRISvq+edZ+qBgpUjHyVySS
kuNQMfJONimpSEr6dIi1HypGilSM/HxrUlKlkpLjUjFSpGLkSEqOS8XI++uk
5LhUjDwdk5LjUjHKcakYOZKS41IxyhFUjBSpGHlfn5QcQcVIkYqRIyk5goqR
fQxScgQVI0UqRr/nHrL2pGLkywukpCIp6e/EYO1JxchPGScltUAmJUdSMVKk
YuRISr4/FZGKkS96kJL+ag7WXlSM/LBzUtKPdmDtRcVIkYqRIhUjRSpGvthC
So6iYpT+mahdfyIl50PFyI9gJyXFV1JSZwukpCZvUnI+VIwcScn5UDHyQoWU
nA8VIz/6nZT0JXnUPgcVI0dScg4qRopUjBSpGPlKFCmp80xScg4qRn4CPSmp
yBNPnUsRmnNSMUpf72Ttk4qRzzqJVB03RKq/toW1TypG1nCJVC3iiVSd0hGp
c1ExUqRilO9+KyORqpdMpPrbY1j7omLk5/ETqXNRMVKkYuRIpM5FxcjQI1J1
+kekqjki1XtbrH1TMXIkUuemYuSnJBCpc1MxUqRiZGOMSJ2HipEiFSNHInUe
KkaKVIz8ZQVE6jxUjHw9iEidh4qRI5E6DxUjXywlUuelYqRIxchfkkCkzkvF
yJFInZeK0e8htqz9UjHyRVoidV4qRjkvFaOcQcXIkUidQcXI1/qJ1BlUjBSp
GP0fQhCpGDkSqTOoGClSMVKkYuRvkCBSZ1IxUqRi5EikzqRi5O8YI1JnUjFK
fz5Ze1IxcqtE6kwqRo5E6iwqRr4zjUidRcXIV86J1FlUjNJf98Tai4qRIhWj
3y/P2ouKkSIVI2GOipEiFSNHInU9VIwUqRiZmETqeqgYKVIx8rfjEKnroWLk
SKSuh4qRHxxGpK5BxSj95Veo3RdqUPsaVIwcidQ1qBh5u5lIXYOKUb4XzxCp
GPmzS6T6O7hY+6RipEjFyF9yQqSuScVIkYqRv7ycSF2TipEjkbomFaPf9zqw
9kXFyF+uQqSuRcVIkYqR4+8T+79Ip6W5
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8334373619324617`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"80fc4777-9ba0-43ea-a3f9-e3439f2a9b0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"9199eee7-1472-4ed3-9547-06d5384083a8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Hs9FFjVJYf0xIhjlHwhc8qevuq42COV3Az4cXO3VriX2h2YtcN0dV/liVyzn
ZQAP39OKVxSFzwufAf96t0Qt+Ijl0oZK1r8ByIr/gDddKshO6oPtqWcpWX/X
IxvkwGefXnOcl4EsOKFk/dcBWVIEHDphkMjnPo6XvB54avfc7NtVyKo+B3Xi
yv6zHS9moz5opwOfr4gtm7IS9YEfBfznmZWjz1gsF6UBZw3Ply/V+aH8jw6y
8TmJ+qr8Dcydrrn5DPVNY30I/PuRB9TBw7A+zxV4+tz3goFfsb4wAnjo6pXq
rzNI/1OBG/UqUSedwPmhKASWDGkj3dkf66t/AI972Mhi7eRlKH+Pwzrxqeye
vOhvWC5wARYUDigLX4y/L1kFPJGfIc+diPNBfgj45rze0hGnsVx1H1h1z5AS
MApZ+w348I4fcnVHZL7lEfBXk/ZJLxcvQfknHWG/F4UsCwFeqjtW/99mZGXK
EaY/PfB9NHeAPWVNox2vYDnvC3DONE/1pGyS3zxVJ25iGu9YFoHl0gnAZpf2
piTOwd9XBKUyexOF768+AJy2NTqlpi/N/7xUZh9f0/yvAa7yjVaaNcfxlXQ9
yvTRjcbfCbhn89mi8kc0/oFH2XhvRX3T7jvK+kOOzL95lNmzKGTRx6NsPkxZ
gfKbHmP6uQRZORr4coMUi6YHsb5m6TE6H74th/Q/Afji18fRHbshC3OOsfYr
Sf91wE8ej9dOfUr6b5IG/tLk1BRZGLLaEdg356bF+gRkw5I0pu/FyILdacx+
dcb5JbkOfOKcu3THSXw/eVUak/cZsqrdcdBPy60peW5YXzsS+FrvcO3h68j8
RcdZf5Yii3YCH/I5kD3xOtoD2bXjzH5cQ1a+Ae584kH9ib5obzRt0nXiQuXB
6NxjyLzh6azcgCxcAPw5/oRFyQiyf9vTmb0sxPYUl//xJWT1a+BOKQ2lmUEk
f6sTOvGauGXagh0oj2DYCWZv3pD83idY/8Qjy7ecYO+7AZ9XXQDeP2qENtyX
xr/sX3lLGv8WJ3VitYgvWLuYxn8I8Jh7V6OXDkOWzTvJ7JEr2f+NwHNWyKXG
WTjfNWdPsvXFBe0J7xWw46lDjuc1aE+EzU4x+xmK5dJBp9jvz6bxn3uKrdcn
yf6tP8XmyzWyf6eBTz8MUo7vg/oseHGK2ZN1pP+NM9h69BrrywcALzd3kV49
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
wNx51gcakv888IVfM+WBGSR/KXDxm91yUzpPJG3uAutd207ycb8p32ED/ONq
q/ol1J7aA7hzhrHcjvI1hlhg7j7R80mU7znjwvzFdDrvUwLMfQ+jbCTlu5pM
1eP524NdKd8zcCqLd8PpvJfbVNr/27+H1rt1U5k9nkTfe8gA5u5D2ZXRevds
KouPy7Bc2VCix/sLDY/RevefhNa/zPVYzpsNXFRVxEvdRvn+NcARvhPlXXoh
S09IWL7dgfLdRcD4PZRUynfXA5998Tv7/R0679bHlfan+iZRvn+GK1tvP5K9
jwKearHGMfIbfe8kzZXlT07j+6keAbv0bCQyeYWs/Q3swH2AdQwyv9c0sL9/
PVOuZFG+0xV40/ltjq5TsFwWMY3tfwmQlanAtRnh6pGNSP7CaaQvSxfQevdz
GvnbebQ+Ca2m68WKkoEpJ1Mo3+cCzN1naeNK8q+aTvtdW9eR/IeAP22z5F1e
Rd+7uA/88MFfkb05sqAOmLvfJr1A37uwnAHz36Ew5WIpfe9i0gyWT+hH5/1C
gLnzqSNj6XsXKcDxTdpHd3CmfO9d4Kd15YKDFST/F+CX7a5ot56k8TefqRfD
z2l9/qP1fsJMls8+ROt90EyKd8eGkPxJM9l+qJDGP38mjaffa9rvqQE+7NEl
W1ZE8nedpRfPUx5Rx0hJfqdZbP/GgsY/EPjPj4vS4x9J/v3A3J8/s6Xvk0hu
Ar8P2aKeU0vr/UfgTwof+c2mtN9hOluP9/22PaDxHw2M51OG0Pgvm832v0zp
vGPCbJafCqTxz5nN8gOFNP662Wy/aR2Nv8kc8rc3KUn/RcA+h0+WtZpP/p4f
8IOde7ya9iN/bzew9GSgNGgF5fuvA3Pnlavo/ru6Cpi7vz3ZnfL97dz0YnlU
Wba9Ke5HCBzcKD+67i7tdywC5u4Dta6g/Y6dwNz5TZ9qOu98Dfjbpcbasr30
vZs3brReD2qP95f4fHeIh2F1z6bvV4iGu9P8v2yF5bIF7rTf0WAe3XfaDszd
rwvqTPedLgNrLssEC05jOa/CncXDl+l7F63nkjz3U+h7F8Pm0n7Eh+V038t7
Lu2HD75O9722zKV8d888+t7PBeCL3zvw5suwXKAFDpvtIC29h+fHJS08KD/r
OQvPn8uHAKcnbsk+ZYKsmudB/tYeMzrvv9GD1gP5M7rvfc6D9lsuhNN5/1ce
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

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6478944*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6478944*^9, 3.8333952*^9}, {0, 4168.701172}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.833437376738638*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"87ec02a7-f459-4cca-8170-5c283d005581"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Dogecoin", "Subsection",
 CellChangeTimes->{{3.833431807419488*^9, 3.8334318219894333`*^9}, {
  3.8334323889318895`*^9, 3.83343238950811*^9}, {3.8334337088356333`*^9, 
  3.8334337095056295`*^9}},ExpressionUUID->"8e6b6835-b911-404f-bd51-\
823380aa8356"],

Cell["\<\
Tale pa je malo druga\[CHacek]en. \[OpenCurlyDoubleQuote]Dogecoin\
\[CloseCurlyDoubleQuote] je namre\[CHacek] kriptovaluta, ki je nastala leta \
2013 pod prsti Billy-ja Markus-a, ter Jackson-a Palmer-ja. Kar je zanimivo \
pri Dogecoinu je to, da je njegov nastanek prakti\[CHacek]na \[SHacek]ala. \
Ideja za Dogecoin izvira iz internetne \[SHacek]ale, kjer je na sliki psi\
\[CHacek]ek pasme Shiba Inu s prekri\[ZHacek]animi ta\[CHacek]kami. Ta \
\[OpenCurlyDoubleQuote]meme\[CloseCurlyDoubleQuote] po imenu Doge (izpeljanka \
iz angle\[SHacek]ke besede Dog) je \[SHacek]e danes precej v uporabi, zaradi \
\[CHacek]esar tudi pripisujejo vzpon te Kriptovalute -  Dogecoin je namre\
\[CHacek] iz decembra leta 2020 do za\[CHacek]etka maja 2021 (torej v slabih \
5. mesecih) narasel iz 0,004 eur na 0,72 eur. Sicer se ne sli\[SHacek]i ni\
\[CHacek] posebnega, glede na to, da cena posameznega \[ZHacek]etona ni \
dosegla niti 1 eur, a \[CHacek]e bi pred decembrom 2020 v Dogecoin vlo\
\[ZHacek]ili 10 eur, bi vam to prineslo kar 1800 eur - torej 1790 eur \
\[CHacek]istega zaslu\[ZHacek]ka! Kakorkoli, ker je bil Dogecoin narejen kot \
\[SHacek]ala, je tudi tehnologija za njim prakti\[CHacek]no neuporabna. Poleg \
tega se lahko Dogecoinov ustvari neskon\[CHacek]no mnogo, kar pomeni, da ni \
za\[SHacek]\[CHacek]iten pred inflacijo (pravzaprav je fizi\[CHacek]ni denar \
bolj za\[SHacek]\[CHacek]iten pred inflacijo kot Dogecoin sam).\
\>", "Text",
 CellChangeTimes->{{3.8334318315537286`*^9, 3.8334318837797294`*^9}, {
  3.833431919834956*^9, 3.8334322057720194`*^9}, {3.833432258367374*^9, 
  3.8334322716639495`*^9}, {3.8334323366775875`*^9, 3.8334323766996574`*^9}, {
  3.833432421156677*^9, 
  3.8334327461297293`*^9}},ExpressionUUID->"a275f60e-2d3e-4acb-87c7-\
e90500fbe882"],

Cell[CellGroupData[{

Cell["Tabela - Dogecoin", "Subsubsection",
 CellChangeTimes->{{3.833437412129099*^9, 
  3.8334374241015296`*^9}},ExpressionUUID->"3b11613a-aa8f-46ce-9675-\
ea2fe071dae7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BlockchainData", "[", 
   RowBox[{"BlockchainBase", "\[Rule]", "\"\<Dogecoin\>\""}], "]"}], "//", 
  "Dataset", " "}]], "Input",
 CellChangeTimes->{{3.833432760658083*^9, 3.8334327930089245`*^9}, {
  3.8334335414070024`*^9, 3.8334335464627504`*^9}, {3.833433639586629*^9, 
  3.8334336400613728`*^9}, {3.8334338913477936`*^9, 3.8334338929428697`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"aea53ee2-8ee7-4e95-b079-1abe1a4ae86d"],

Cell[BoxData[
 TemplateBox[{
  "BlockchainData", "bbase", 
   "\"Invalid BlockchainBase specification \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Dogecoin\\\\\\\"\\\"}]\\).\"", 2, 38, 21, 
   22403049215223109100, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8334327683280606`*^9, 3.8334327934584107`*^9}, 
   3.8334335474690714`*^9, 3.8334336414591837`*^9, 3.8334337119757433`*^9, 
   3.8334338948197484`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"6509ede3-7aa8-4da3-8061-ec5abd5f8698"],

Cell[BoxData[
 TemplateBox[{
  "Dataset`ExtractRawData", "dataextr", "\"Data extraction failed.\"", 2, 38, 
   22, 22403049215223109100, "Local", "Dataset`ExtractRawData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.8334327683280606`*^9, 3.8334327934584107`*^9}, 
   3.8334335474690714`*^9, 3.8334336414591837`*^9, 3.8334337119757433`*^9, 
   3.8334338948277597`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"6893621e-07b7-4153-afdb-369c973bd160"],

Cell[BoxData[
 RowBox[{"Dataset", "[", "$Failed", "]"}]], "Output",
 CellChangeTimes->{{3.8334327683479424`*^9, 3.833432793474368*^9}, 
   3.8334335474838333`*^9, 3.8334336414731145`*^9, 3.833433711990703*^9, 
   3.8334338948347406`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"a28b52e1-d60c-4ca3-8d23-688e7d5f8471"]
}, Open  ]],

Cell["Iz neznanega razloga tukaj funkcija ne deluje. ", "Text",
 CellChangeTimes->{{3.8334338986890287`*^9, 3.833433923171999*^9}, 
   3.833435868860263*^9, {3.833437395468441*^9, 
   3.8334374000211167`*^9}},ExpressionUUID->"5531d644-c56b-441b-af96-\
c6246bea9370"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graf cene Dogecoina", "Subsubsection",
 CellChangeTimes->{{3.8334374293745565`*^9, 
  3.8334374409105268`*^9}},ExpressionUUID->"d7d66406-d6ba-4da6-a02f-\
8fab96ede583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<DOGE\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8334374543021493`*^9, 3.833437455843053*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"0ef14e89-df66-4908-91bb-a99212876ea0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAKMtzsGn46kHbFbehUJAxPz7CDxIN
/+pBYU7IqLWKMD/RjQRlPwbrQcKMhkqAZis/PT+GofcM60GVkvhvCHIiP2N7
gx+OE+tBwMrT5QAZIz8HjNmOsxrrQeqaL0vXuxs/g4K8514h60FEbjiC4lEi
P31N+DGZKOtB6Di4LHcCKT8xo6+9sS/rQQrTLBdiYiE/vt7zMlA260HU7DX2
UCcgP8nukJl9PetBGw8VBOMqID+s5LrpMETrQWQ/i6VIviI/SmVge8JK60HU
3UlbWRMyP2W6Xv7iUetBncdQq3EGMD9Z9elqiVjrQbdfPlkxXC0/ygTOyL5f
60FqZk4TLg8vP/aeLWjSZutBiewn3dGHMD/7Hhrxa23rQesRSg6vYC0/fXNf
a5R060EkD0QWaeItP9itMc9Ce+tBK6QSWcfVLD+wvFwkgILrQUZTLrOMoy0/
Q1YDu5uJ60HhDWlU4GQrP67VNjs9kOtBS2r0rF93MT+XKcOsbZfrQad65Wh0
n1Q/WWPcBySe60GJ1Y8TV/ppP9UncaS4pOtBbvfRqm0PXT/PwF4y3KvrQayc
XKVRGlc/oT/ZqYWy60HEAdtO7/ZQP/GSrBK+uetBOgjAWOWCYj+XjxRXfL/r
QaVjwzV9ZIA/eeHjSA==
                   "]], 
                  LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7wa+p7jD60GlY8M1fWSAP94011Bx
x+tBawfLqFSweT8+zQvWnM7rQXAEjRujxGY/d0vNRE7V60HwAR1bNslxP2pU
CvXd2+tBKpZz9BxwYz/bMaCW/OLrQWtXU38to2M/JfXCIaHp60GLkmUrAjx3
P+yMPp7U8OtBEpgm9QfEbj+MCkcEjvfrQWiAxcMf7WA/5hLLqyX+60EKh7c8
uNJgP77vp0RMBexBRW2QMkxJYD9ushHH+AvsQYsSkZB6Mmc/nEnUOjQT7EER
NpWQurdqP4RrEvBNGuxBeUv4q2lIaz9Fc92O7SDsQaXMG/x8+WU/hE8BHxwo
7EHlVwDtWkxjP5sRspjQLuxByPnYVMcEZj9tXt5TYzXsQRQmjGZl+2A/vH9j
AIU87EFAZDLOsPlkP+SGdZYsQ+xB6fNRRlwAWj+KYuAdY0rsQeL6iigccWQ/
6sjG5ndR7EGaRp/ISEBkPyMVOpkSWOxBRK008ooIaz/ZNQY9PF/sQWaAqPoC
j2g/aDxfyutl7EE2f4AeJLVlP3QXEUkqbexBaqySomDzaj+Ydw9XQnLsQaVj
wzV9ZIA/ybbNLw==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$277036#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3833395200}, {0., 
                0.008004167750572064}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAKMtzsGn46kHbFbehUJAxPz7CDxIN
/+pBYU7IqLWKMD/RjQRlPwbrQcKMhkqAZis/PT+GofcM60GVkvhvCHIiP2N7
gx+OE+tBwMrT5QAZIz8HjNmOsxrrQeqaL0vXuxs/g4K8514h60FEbjiC4lEi
P31N+DGZKOtB6Di4LHcCKT8xo6+9sS/rQQrTLBdiYiE/vt7zMlA260HU7DX2
UCcgP8nukJl9PetBGw8VBOMqID+s5LrpMETrQWQ/i6VIviI/SmVge8JK60HU
3UlbWRMyP2W6Xv7iUetBncdQq3EGMD9Z9elqiVjrQbdfPlkxXC0/ygTOyL5f
60FqZk4TLg8vP/aeLWjSZutBiewn3dGHMD/7Hhrxa23rQesRSg6vYC0/fXNf
a5R060EkD0QWaeItP9itMc9Ce+tBK6QSWcfVLD+wvFwkgILrQUZTLrOMoy0/
Q1YDu5uJ60HhDWlU4GQrP67VNjs9kOtBS2r0rF93MT+XKcOsbZfrQad65Wh0
n1Q/WWPcBySe60GJ1Y8TV/ppP9UncaS4pOtBbvfRqm0PXT/PwF4y3KvrQayc
XKVRGlc/oT/ZqYWy60HEAdtO7/ZQP/GSrBK+uetBOgjAWOWCYj+XjxRXfL/r
QaVjwzV9ZIA/eeHjSA==
                   "]], 
                  LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7wa+p7jD60GlY8M1fWSAP94011Bx
x+tBawfLqFSweT8+zQvWnM7rQXAEjRujxGY/d0vNRE7V60HwAR1bNslxP2pU
CvXd2+tBKpZz9BxwYz/bMaCW/OLrQWtXU38to2M/JfXCIaHp60GLkmUrAjx3
P+yMPp7U8OtBEpgm9QfEbj+MCkcEjvfrQWiAxcMf7WA/5hLLqyX+60EKh7c8
uNJgP77vp0RMBexBRW2QMkxJYD9ushHH+AvsQYsSkZB6Mmc/nEnUOjQT7EER
NpWQurdqP4RrEvBNGuxBeUv4q2lIaz9Fc92O7SDsQaXMG/x8+WU/hE8BHxwo
7EHlVwDtWkxjP5sRspjQLuxByPnYVMcEZj9tXt5TYzXsQRQmjGZl+2A/vH9j
AIU87EFAZDLOsPlkP+SGdZYsQ+xB6fNRRlwAWj+KYuAdY0rsQeL6iigccWQ/
6sjG5ndR7EGaRp/ISEBkPyMVOpkSWOxBRK008ooIaz/ZNQY9PF/sQWaAqPoC
j2g/aDxfyutl7EE2f4AeJLVlP3QXEUkqbexBaqySomDzaj+Ydw9XQnLsQaVj
wzV9ZIA/ybbNLw==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$277036#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3833395200}, {0., 
                0.008004167750572064}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJyFXAdQFM/TRcxZRBAVlYwISBLMPgMGVJSMSrrjAtyRM4hkFXPAgAlFxYCA
gqCiYk6YlSAYEBEDmHMO3x23vVd1v/rXZ5U1NbuzszOzPa/f655D2zfESaCs
pKTUSvI/p6OSUmHk2NHTV1tg0SXV8VvTrdDp/tP3doaW+JI6K+KjjhWQd33d
3XpL9n54SOJ527SheD0zZlvsTRv8TBSXRa4djuQUrXGLVo5h62fWqg/JKxyB
6IBNXS5/GgGsiP/Uz2AkbPe+qJvtMBxvPQpUMxutkZq/183HyxpcS1fzwblW
cFH27TnkqXw8m3pE2FVHW+H229W+ybZWaBz+XnzMygqxG7R0s89Z4NuqhU09
hluib+9uC/itrBC95GVBSoElW9L8/OdIW5rjd+6HCntfc8Tvctt4qsYc1dfn
dpr6ywyrT9lVZvsPwf3nlz4v0B+CFW8OZ3+7ZI7Zmjd/i7uZo9kn42qvCHNM
rgj+bDHQHN0+OzxY5Ci/Tu0HfqkxNik1Q/EkaUMz/A6atbr27RDodbdVFz0x
hYHmvGXp30zwSMmq/uwsE2Q+e2X5e68x1tcePlmXYYKgYWeH2W83xfTC4Vt/
VJuw10Ntv+UHlJiw1x9++i3aNdIUPzl9+h2/Z8bOa2WRqneqsxkyriVNPZ1g
ypZHfcbOsfA0xSCjQqU9XUxwLDDy5qwwE5TF7Z8YvMgYDV1FLo/5xux9mpf2
2MLG0+PM2ffQOlGd1ofqNH8qRf1d7XtEmaHm3uokYQ8zdn0DBi87N2SpfL3/
zVvY9lvrIez6KI5r1tWcRTZK8rKx7/Yrf+MGM3ZmhBdDO5eMyhkElUbrgy/z
DWAlPjVtbLQhEjJGBepYGaJT2dpZq4KM2OfNHJw4rWYY4Zlh9dj+q+Tlti4r
M9xfDILbh8nP12AQW4+XDm+AvLxYkKrRdN+QfU+XK1cuFKQOQnafC+2jfxvC
wmtx9UDuIMbO9TFyDWf/psN6uF6lFzuxrz6uXH6rrN/WgB0v1T06F9++KTLA
3nFCvzuj9PHBv3Hx4e96WHCs7lpCuB6EM8729avUZtZtACp+XarZNkcHSyrt
jhzfqoNlj5OM7xVps9epPODX4bJJvA4+RfX5W9lVD7n2Wx++c5D3q/o+QK/j
OX22lO1L+bhlOKDD7ENd9n2y/afD3h+zbcPA0qu6bDvF9tROtl912XEpjlNT
z/ZHqrp8Xnws2z31lLx/akf9yfBKl21H9f/1PupXcf0Un6fnqC7DJXm/1F6x
X8V5UXtaL+pX8XnFfqkdXa/u8GfGyWDt/5QDLeYF7zDWxs+tJ7zM7LUxvlS5
05fP2gzuaf3nvuL1QymRRaLdWgyOaaFGzercgzR5ndpTSdfpORlOaDF4OhCT
N1wvKssbwJYyXOvP4KC8DHc01Vl6pR+zL/sx+74fg4+aDB7JS2pPZavFJ+ap
9enPljJ81GT7oX5NJ2q+emLTF213GgqcJvZj/FIfBj/6sO2oLsOLPuh+99+I
65m9MfvvfI9CF3kp83/qbF2GCxpsSc/JcECDHR/Ni+Yvw0f5etG+luHsAPa+
zI9psyXZEeEB2QvZH+EM4ZXL0x5hEYONmPEasvhys2HuG66ZHmt/hDe0zzQ6
1Xab/FqXxQ3CA7pOOEH9+egPPNF5nR7bD41j+ILB1vHZ+iweJm8Paxg31YD5
DkbY8s+9/4gKo//gvmKd/CDhLc2H8LbDQa/7obMHs89t+qi9r+/Jwaxfc6q5
/8tFbTCL/3Gxt1KedfhvSf6C1u189oxdVy4OYkvyF6cWPS5dvmUw+17y5zJ7
G8z2Q+MjfJfZh9w/5ViZfzxkYMDYlQG7PvT9aJ7k56ikdaBx0XV6jvwR1S8f
L13R7r0BbGI+n/ZcJvc/Ow1+zl+nYvgff0QlfXdFv+Sl0TzpTeJ//RS1Jz+T
N7fCsZtQl+F5uqwdE/4o4iLhF/kBRRwi3KM64Rr1p4hXhFOEa4RTMt6khYkX
hyepdpLjI9WpP6r/L9ykfqk/qhMu0nXF9lRS/4rP/QdXW/invE73ZXzrv/ep
TvdlfFSOy3SdShlv/W9JOER1ak/Xqfz/+lN8P9UJ9wgXCf+opHa0PoRXhFNk
L3SdeAfZI/lt8uPUjuyNcJT4E62bon0olnSf7IHskvpRtCMqyZ7pvmKd7JD6
U3yvov9VtE8qFdtTfzRfRR5H+1ORD9E60X0qaX9TSX6CnlP0S4q8kErF/U91
xX7pe5Pforoi3yN7oO9A/REuEf6SP/pfuEx4SfZD4yH/R+8nfCO8JL9IdcJb
8jsy/mLM4Pow2MzZNWDnnTFMOxtmnENZ3Uq6XDYfC8aOLPDCydP1q5cFHL8Y
Z3W/ZYm2Z2Lbdf1jxazXUFYH033S9aSvSTfPavpi+OGYFU7lWMyd4iqvUzt6
jvQ2laTPO9w4EG/cU66/t/TPPfVpmSXDf+XtswbXW/XcYQG37hvTZ/wwR/Yw
tVzzI+aMHcv1Oelr0uekM0lXk54lvUh6kvQx6UrbJRtGb9tgxpakQxX7O+zU
4WnPKUPYkvQ18Q7ql3gEfT/S0VS3PxmsovFKrqOpTnq/9foP76yGmLDzleGg
XA/TvCgOQPNTfD/1R+8l3iHjt//lPaSv6X3/S4fTeyluIOOt8vFQSeOkcuou
ZcMHZ+Ql9Uf3Kf6h2A+VND5qR++n+VOdvguNi/qn9aG6tnK3HdNuDGHjL4rf
l95H71d8r+J4qV/FeIri/GjeZGdkX4p2pvgd6D49RyWNn+IoFH+ifS/Ddwtc
vFZ5bOc6cxYfaN/KeNlQNm73UGVmZ+/P1ng0YEHy/I7WDJ+zZvinDY4tvRjS
ydgaj42Pf9k8YCjjLyzYfXymyO+WQGzJ4Lk8zkZxQsINGR5aMThpxeCkHJdk
/tcSJtyg5Vnv5fhE/ZoF72pV1tbyP7gn81sWOHcqy3ZBkhz/urzoK/QfLcdF
mf+U1+m+jD/I43qEL4rrTvEvwiFqrxjPUvy+FH+j70r2SnEn2o+EAxTfI7ug
cSuOh/olu6Y6lYp4Rn7DanH319/N5CXtd2pH8TzaD7R/FfcJ1cne6TrtB+qX
xkf9Ku5DxTrhMsULFfcRjUcRL+i9VKf3k/9Q3DdUp3HRfOh9irhL/SvikuJ6
0HwUcZT2N7Wn+2QP/wtvFOdP9xXxlcZL/RFOUkk6mepkZ4rtqR2V5FfIr1Gd
nqOS8FbRP9Fz1B/hNLUje6V1UVxfmh/1979wn/qjdaD50XOK76d2dP1/tafx
032q075V9L90n0ra1+SXFfc7Xae64rwU+6V2iutK41PMD9D60bqR3f8vv0/t
Fe2SSsXrtD/oOeqfvqOiXVCp6G8jvXmZ+x4NZvkK8SzFeP9gm+dRF7Tl60Xt
ie9Qe7pO7alOeQLiQ4r8iJ5XvE/vp/v0PuJzVKeSvrPi+BT7pbgU1f/X/Gke
VKf42P83T8V+KQ5FcSq6TutP16lO46Y6rYNiHO5/zZPq9L3J75C/oTwR4SbZ
F9mvon8gvqOYXyI/STyHeAHxasoj0nXiIbJ4lTXLg7hn/yS3bzcOoyK6d6z/
NYrZf6MZux3N7KMxTNxwJHtfunsGfB/OrO9IJh44gvkuo+DT/mYfx/ujGHsZ
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
    "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWxIXSvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
H8mzdvZ8m49Ut/lIdZuP5CfCsufbfKS6zUeq23ykiuYjVTQfqaL5SO9ZA7H5
SBXNR/KDadlzNB+povlIvrGJPUfzkSqaj1TZfKTK5iNpqUGGVjYfyX8La8/m
I1U2H6my+UiaTJOhlc1Hqmw+0p+fWUYkQ7UAIkP9mF7WXs1Hqmo+knUc1l7N
R1IkQ6uaj/Tn156/SB/JLxcM1T/QR1Kkj6RIH8kRDFWkj6R/oI+U3q0sDkUf
yes/MFSRPpIjGJoG7MBQgz6SV+xgqCJ9JEX6SIr0kfLPb18jgqFelYKh6Wcn
F4eij+SnUYKh6XvvWPukj+RYrH3SR8o/P8H9RfpIivSR0hvZrH3SR3Is1j7p
I2mCSB9JkT6S93Y2a1/0kbwoH6x90UdyTNa+6CMp0kfyozo3a1/0kbTcp4+k
SB8p//wg+RfpI3mr4LL2TR9JkT6SHxE6Wfumj+RYrH3TR0pvwbD2Qx/JWxSb
tR/6SOnnarP2Qx/JMVn7oY+kSB/JJ83N2g99pPzz8+x/46WP5Fis/dJHUqSP
pEgfyRdhF2u/9JEU6SM5Fmu/9JEU6SN5/+aw9qCPpEgfyc9tHaw96CM5JmsP
+kiK9JHyz4/Vf5E+kiJ9pPTDzll70EcyBJK1J30kRfpIivSRFOkjKdJHcizW
nvSRFOkjKdJH8lNsN2sv+kiK9JH8IK2HtRd9JEX6SIr0kbyptll70UdKL1NY
e9FHcizWXvSRcjz0kRTpI+V74RyRPpIifSRHIFWRPpIifSQ/4pdIFZ2I1PHQ
R9LskT6SIn0kzy3JUF+GXPyzVIwUqRg5kpLiDSk5BhUj71aSkmNSMUo/Yp9N
TipGfmgxKemrOGxyUjFSpGKkSMXIWwGkpL69pORYVIwcSUnNVEjJsagY+VHK
pKRmAaTkWFSM0u+uOBQVIz+egJQci4pR+gcHWPumYuRHOJOSOu+TkmNTMXIk
JfVfkpLvEh2RipEiFaP07x6w9k3FyJGU9H3zrP1QMVKkYuSfSCQlx6Fi5J1s
UlKRlPRyiLUfKkaKVIz8fGtSUqWSkuNSMVKkYuRISo5Lxcj766TkuFSMfDom
JcelYpTjUjFyJCXHpWKUI6gYKVIx8r4+KTmCipEiFSNHUnIEFSP7GKTkCCpG
ilSMfs89ZO1JxciXF0hJRVLSv4nB2pOKkZ8yTkpqgkxKjqRipEjFyJGUfP9W
RCpGvuhBSvqnOVh7UTHyw85JST/agbUXFSNFKkaKVIwUqRj5YgspOYqKUfrv
RO36J1JyPlSM/Ah2UlJ8JSW1WiAldfImJedDxciRlJwPFSNPVEjJ+VAx8qPf
SUlfkkftc1AxciQl56BipEjFSJGKka9EkZJaZ5KSc1Ax8hPoSUlFLjy1liI0
56RilL7eydonFSOvOolUHTdEqn+2hbVPKkbWcIlUTeKJVC3piNS5qBgpUjHK
d7+VkUjVSyZS/esxrH1RMfLz+InUuagYKVIxciRS56JiZOgRqXNTMVKkYvR7
FDhr31SMHInUuakY+SkJROrcVIwUqRjZGCNS56FipEjFyJFInYeKkSIVI/9Y
AZE6DxUjXw8iUuehYuRIpM5DxcgXS4nUeakYKVIx8o8kEKnzUjFyJFLnpWL0
e4gta79UjHyRlkidl4pRzkvFKGdQMXIkUmdQMfK1fiJ1BhUjRSpGfxCCSMXI
kUidQcVIkYqRIhUj/4IEkTqTipEiFSNHInUmFSP/xhiROpOKUfr7ydqTipFb
JVJnUjFyJFJnUTHynWlE6iwqRr5yTqTOomKU/rkn1l5UjBSpGP3ePGsvKkaK
VIyEOSpGilSMHInU9VAxUqRiZGISqeuhYqRIxci/jkOkroeKkSORuh4qRn5w
GJG6BhWj9I9foXZfqEHta1AxciRS16Bi5O1mInUNKkb5XjxDpGLk7y6R6t/g
Yu2TipEiFSP/yAmRuiYVI0UqRv7xciJ1TSpGjkTqmlSMfr/rwNoXFSP/uAqR
uhYVI0UqRo6/b+x/At/KmSY=
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8334374776208763`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"75b8e18a-b6ba-451f-9f08-572a14028cba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"59f34ee6-387e-4b30-b826-3e4729da82ad"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
rVl7UaLh2ysOtWbHVz/n++uqtmE2tmvD4x/B02Xz27DfUx3g1j5tw66voZK3
6f/xT4rf25ulS5XebH/lHG9hfAvTNXv5/vrHfH9L+bYsXdKqLdtfEQGm8VFs
r6gz2rL2jW433974gFtctp3p//FWtEzKrRrMrZ3RjrWHDDt5uuheO3Z8aan2
bHtlM25NaHu2vX4at2Vbe3Z8yW1uhagDj79JBx5/EE83pnZg7T3xlg6svSi7
0YG3//5wa907suMZBnRk949oakfe/9/YkbWnlIaOrHzR/OTb6xt14uMf/Tqx
8lEyuRPrbyvWd2L9cfXlTux4uu+dWPlmdO7M2qPivp3Z+JMssTO731Tazux5
017ozJ//L9wiJx9mqZ8P21+Z4MP7v7k+rLzUn/Vh52P5yI8ncezC+7++3GpV
F1Y+61Z0YfsbT/F08QeeLqsjY+WhqpuMnZ92nIzHn8MtOiHj/V+zjJd/NeVs
e41MzspPfQy3ZTHfXnJMzo6veCNn56e278ryV9e5K+tfGEd35fVfdldWf8oK
+faql11Zf0Ur7sbuJ0OHbmx/0ShuaVY3Vn8rD3Jrirqx/oS+Snf2e5a23JLh
3fn437zu7HlR7+fWGbmNFXvw+Nv04PX/UJ6umt2Dna82vwfv/zzqwcf/yvuy
/pa0pS9//sN9+fjfLF82nqTX+fLxn/u+7HmQlOnJzk/RoidrL6kH9eTt3/Se
rH9k3NGTtZfFd/n2spK9WHtZ1bQXa19qQ3qx8seg7sWuj2hbL97/u9WLx/+v
F2u/aTz8WPtSH+jH+ouWFJ4u2ezH2reK636sv6P+7SeMv2B/QufWW2ivt8X4
FWDvQesbrLuG88/i5N7C8XC+Wraht3A9cT5bdbW3yXa+VVsMtpkvNzTsI+QP
zs+K+vURyiOa/00CvwoID/4WgVauAw/46plb7Srur7kELqNPKlvlD84H67/1
Ee4v/H2LpK/Jdj5Y0qcv218xsa/Jdr5evaavyXb+Wne+r8l2vtn4Gdz/9Vf3
jwdp/ruBP/TP8rwG9wxGy3r5s3TVeH92PO0qf/Z7hjP+Jtv5bdFHbmm9fibb
+XNlD3D5yzuTPavT/HdcPxaffjl4Zf0tRz/Ppfnvk/2E8V+K/30/dnxF7f4m
eW6TJ62qr8Xrq+4KDqm2LKNvMc1/jwVr2zpske5HG5f2F8pjtPh4fzYfKzOB
beavVQ4Kk+38ubaLgs1nGqIVJtv5atFiBZuflR5VsPlF5WsFm5/UVB/A5o/1
nQaw+UpLJLj77KWdVi+l+c+F3IrDA9h8qPrFAHZ+umoB7PyM7cH7Aso/r96T
5j9HcssWBLD5a1VBAJ//fBbAztdQOZCNR4jaBrLnTzoskM1HK+fydM0+sP+R
WLvaJur/P+HHs1QIYumS1kFsfl8xBFxqyccPrZrT/HdmEMtf3Z4goT1I878P
g9j1F5cLZvkl8wpm6wFUYcEs/7Qzg3n8u4J5/PeD2flJS4eweJXNQ9h4h2Zg
iDB+S/FPD2HjPZbtIez4kjshbP5aUSKUxaf2DGX3jy44lMVrTOPp4q2hfP3D
zVC23kD1N1QYb0VrGw9k2xsCuEUpA/n9v4lbeQ3ca31J9wd6tOYXt951EL//
+w9i+0umDDKx9R95g9jvq69w635wG10G8/l//8HseLJJg3n8awfz/L/I0w1f
B7PnRSQJY9dL2juMxz8hjN0/mtU8XX8O7Fyy6trelyn+T2Emtv6lfjh7XhU9
udXx4Sw+3cpwHv/pcBav2BLO4pHVjWDpqu4RbH9tbAQ7X8OyCLa/6CRPl77j
VtYawo6vkQ9h+a0fM4SVZ5YlQ1j5JdFzK94O4fHXGMqeB53PUL7+I2oo21+8
aCj7PdkRbtWroez6a+2UbD2KoaPSxNY/RSpZfS/VKIX2O9X/h8CnL944uG4x
rf95rmTtB33VYay+tbQbJoyXYXtAMgJss95OMR/80K5fpSFfcH2b+gD4cYMZ
6qkVaP3b02HC+Bytf6s0XBj/xPaO2Bt8cM7puIqemC5Tgo2eh76uaEDtnznD
hf4Fnp9273BWHxseg/W7R18dFUP1f4URQvuc6v9WI1j9rowYYbJdT6jJGMHa
G/rdI4T2IcX/YITQnkRLyo4U2pNohXQkay+pB48U+r94fN0McNNh4+blWtDG
nSNZ+0l8byQ7X1mpUdCejF1forAMWtVsFGvvaUNHsfwyTBsl9Leo/bcdfOJo
bvcZaZT/t0fx9p8o0iSv/KpuZFQntKZJJGsv6oMihf4n2pLK0yVb+P6KG5HC
+AOt//sTyet/99Gs/WIcMJrd3+Kp3LKNo/n6L8No1h7S/hzN2z+NotjzIOof
xY4nnRzFnjflem7N5Si+/u17FC//naNZ+SrpG83WOykSo/n6N200aw/oLkSz
9XvGL9G8/eMUw663zC+GP/8J3NrcGHa+hrMxrLwWfeLpUscxzErfMez6aVRj
2PXQrxjD+huWU+BWmdXMP1qgJR+4FXXGsvpd3W0sO55u3Fi2Ps+YM5bXfyfG
svpXZh7Lro+q5ji2vVY2jqUbYsax8l20hG8vPTaO1Q/KN+N4+9c+ll0/fedY
dr6W0Txdkh3LymNFIU9Xv+TpOnEcay8bO8Sx9YXiUXG8/s+KY/ef6mAcuz7a
ojje/qmi4u2fdioWr3Q4T1fOU/H496tY/0NvVLHzt1SM5+sf28Tz+IfGs+ul
nh3P8keXH8/iMz6KZ/klLj+et/9ajuftn/DxPP9njWfHM+h4uujBePb70jIJ
LH+ULRJ4/IMSeP2fnsDqb8uOBHZ8yV2+v6LkBFY+qJtOYOenC5nA4jGqebp4
G7fs1gSe///4/lqPiex+MARyi1In8vbP5ons/JTXJ7L2pOY3t94tkc0nWxSJ
LF2SnMjKM8WGRB7/Vb69rpgfz9hwErO43yTWX5ElTWL9NdU6nq69NIn9nuEb
t8g5ibVvpX2SeP93Ik/XrEliv6c/n8Tj/5zE2tOSBpPZ8RS9JrPyVT1+Mm//
ruI2npnM8//jZF7+1ZvC13/3mMLzP24Kj3/5FHZ+olNT2PlJ30/h7d/aySz/
NF2Tef9/bDKPf2kyj/94Ml//beLbqx2msuPrukxlxzdGT+X5v3gqu/6yo3x/
1Wuerq2ewupbQydu0egU3v9dmML7/4e5NS9SWH2tr5bK+suW9qm8/zsylW2v
WMC3VxfwdN2zVJZfxspp7HqK26bx+39YGr//56ax42n38XTDkzS+/qOiml0/
aWtu5RA1216Tqeb93z1qvv7/oZr3/8pNY+WjwmsaX/8eNo2vf585jR3fuGsa
ux7i+9N4+Vd6Ou//NZ/OttcO5OmG6dN5/bdjOvs96Z3p7PyVJdLZ86jxTOf3
f3A6e34sadySrXx/xc103v//C54wZETO5sc4fqJrPIONrxgDZvD3H1K4ZZtm
sPal6hq4iffLiaecafzr1wx2PxhcZ7LjixQz2fiOdMpMdnxlHt9ec2UmO77+
B0+3uMxi7xNI/Gex8SHFpFlse/Vanq67OIv9vvErTxdLMtj+st4ZPP4JGXz8
b3UGi89wLoONz4k+83Rp/UxmZc9M9jxr4jP5+NdKvr3ldCZf/2Th2yvqzmbr
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
qh/efyAMrR4K7hLQfVZwIc1/zwZ3fNJ/fk4sphvz+f7ix+Dnq3e+HziW6r/y
30zydvY3Zg78Q+PfLcERmxYuvfCAxr/DwQ97xvofaoY2zPomzK/Q/Ofub8L7
bmjpg2/CfAxaWea7MP+D1rT4LqynovnPQeBOkDs1+1D86WA3HODC8XzJTrC1
dVT3K43/3wUfyN/VqVd/3F5d8odJvuqURDc+iuJv+oOtnzCGgG+MbZBx/DfV
f9N+sPF42TbwxuXvJwYMRatuWbe3Vgf3cH/tP/A3+dIy9mlog0exSb7i6sEH
X69T/geBndZdq3/qCrV/U4tZfazcDG57umjd4O6YrrleLMwHUf3/G7yorf7S
JAva4vbTJF+Z6HV5wi6q/weA33d7PP7rCKr/k38K81dU/2/4yds/V8ELr5Xw
u3uA2j/FP4XvPVD7p9Ev1t6Q9QOHi+pu6POP2j9Jv4T5Prr/14E9f+0s//cA
3f+XfgnzYWjRd3DNPgunumrQUuffwvwi5X8fsHU04raK8n/ibzbfol/zW+gP
U/6f/y2Un3T/f/nN7g9Fgz8muY95Zsn96ZT/vf6w/XXjwRk1SjVaIUMbV/1h
8+3is2CPTlGJj8Jo/ucj+MY6n/P1ven+r/cXnodDvSfduYf3m7YH+F7yxx7J
hWhDHPiZxPlCrb1o0Yq/wno1uv9PgVMqODgOEVP878F/q+lC3q3A7TW1/wnr
SXF+S98VfC5sZ+rYbLRl7D+2fkOS808oz2n9y3Fw8ui9wX4jaf7f9I+th9E5
iMz/r5el9W9dwDbrPcQxYFrvivNtssVg6j/T+o+jYOqP0/qP12BaT0rxVy9h
tl1vIuoM/nj4zdL6z9DS0eAt2nVvQzuglQvBNP+P1hwGjxpgnVGk+F+AA8tN
7rysBsVfraSZzf91AIfc+Nr9zkyKfySY6kea/1sAxumgAZT/BeC1uTeaGt7T
+pdnYJv5PnGVUmY5dpdyMV3WFkx/PwOtGga2yT/tXHDBYPfmZz0p/n3gtkHz
PrddS/lvBJfb9+T+7Gxa/1GxtNl2vYayNZjWM1P+DwHPsQ5HBaP1meA27y/H
LYtCW/aAfRb9+dxaSfn/CEzz/VT+lStjlj8OsvZYKH4v8Aj3wtKbfGj+Mww8
4FE4ZDHFPxNsu/5JB5421RogxX+/DPs9VemyZjl9Lpju/+ZgGh+n+AeCpz87
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
BA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6199008*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6199008*^9, 3.8333952*^9}, {0, 0.684777}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.833437493779728*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"9d9b836a-410c-4cb1-9546-c2feae8b7e0b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Primerjava Bitcoina, Ethereuma ter Dogecoina", "Subsubsection",
 CellChangeTimes->{{3.833437948972124*^9, 
  3.833437978404684*^9}},ExpressionUUID->"0af1b9a5-ecf0-4039-b7dc-\
ae1bf8f3b155"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"\"\<BTC\>\"", ",", "\"\<ETH\>\"", ",", " ", "\"\<DOGE\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8334380186514854`*^9, 3.833438030303952*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"c0107354-d14c-48a8-8c51-de1987aa0d96"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAKMtzsGn46kHS0Yt7UpV8QD7CDxIN
/+pBVoA2na8kdkDRjQRlPwbrQTFrzR1gqnVAPT+GofcM60GluMve/ohqQGN7
gx+OE+tBCeTciRIncEAHjNmOsxrrQRVHPjL3BmxAg4K8514h60GHWb1rw/9t
QH1N+DGZKOtBta3e04m+cEAxo6+9sS/rQbAhBfJGRmtAvt7zMlA260HBXMwP
HJdtQMnukJl9PetByoFnGl7FdECs5LrpMETrQXYG2MgAdXtASmVge8JK60HJ
5A/TEap3QGW6Xv7iUetBa7s3PrjeeUBZ9elqiVjrQWw1Fl4y8XtAygTOyL5f
60HAHGR24/qBQPaeLWjSZutBmi4tZ/AJhUD7Hhrxa23rQTG6G95s0IFAfXNf
a5R060HgmMBPU06DQNitMc9Ce+tBIzyt4vZ7h0CwvFwkgILrQZSLZzsj4o9A
Q1YDu5uJ60FCczaJ/GWPQK7VNjs9kOtBNSmhsIH2jkCXKcOsbZfrQUgkAXZ8
ZJtAWWPcBySe60FAUJ8OOx+kQNUncaS4pOtB1t3iZxqQpUDPwF4y3KvrQXUu
IEfuI7BAoT/ZqYWy60G4CKFWRoK3QPGSrBK+uetB1WxZ2R83xkD7cPu81MDr
QXGh2RpBO8pA3jTXUHHH60G7rrtfNhXDQD7NC9aczutBvAp/HUWmukB3S81E
TtXrQbDtUyA+UsBAalQK9d3b60EeFf4YfVa3QNsxoJb84utBpHRko09YuEAl
9cIhoenrQWMKTz7tV7lA7Iw+ntTw60H+sikbm+i4QIwKRwSO9+tBnACjMVbB
qUDmEsurJf7rQYL61Fi3H6xAvu+nREwF7EFP9v2vdImuQG6yEcf4C+xBb5cr
1bp1tECcSdQ6NBPsQc2+wZAhQsBAhGsS8E0a7EHgYF2Qtv3GQEVz3Y7tIOxB
iWUw4vvLw0CETwEfHCjsQS2mKGNBCsBAmxGymNAu7EHttwJH0hfBQG1e3lNj
NexBC/0DeKmsvEC8f2MAhTzsQZBiD+HGi8JA5IZ1lixD7EFrwOARca2zQIpi
4B1jSuxB1cig2Av0wEDqyMbmd1HsQX+EUIqNXsJAIxU6mRJY7EH5v0tva0fC
QNk1Bj08X+xBAE0KQ1toxUBoPF/K62XsQSzkssXhSsZAdBcRSSpt7EErS2UF
tuDQQCTEEa7rb+xBBOXnSUrC2UBoJL8a
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$279725#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6199008*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3619900800, 3833395200}, {0., 
                   26377.160760854385`}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAKMtzsGn46kHS0Yt7UpV8QD7CDxIN
/+pBVoA2na8kdkDRjQRlPwbrQTFrzR1gqnVAPT+GofcM60GluMve/ohqQGN7
gx+OE+tBCeTciRIncEAHjNmOsxrrQRVHPjL3BmxAg4K8514h60GHWb1rw/9t
QH1N+DGZKOtBta3e04m+cEAxo6+9sS/rQbAhBfJGRmtAvt7zMlA260HBXMwP
HJdtQMnukJl9PetByoFnGl7FdECs5LrpMETrQXYG2MgAdXtASmVge8JK60HJ
5A/TEap3QGW6Xv7iUetBa7s3PrjeeUBZ9elqiVjrQWw1Fl4y8XtAygTOyL5f
60HAHGR24/qBQPaeLWjSZutBmi4tZ/AJhUD7Hhrxa23rQTG6G95s0IFAfXNf
a5R060HgmMBPU06DQNitMc9Ce+tBIzyt4vZ7h0CwvFwkgILrQZSLZzsj4o9A
Q1YDu5uJ60FCczaJ/GWPQK7VNjs9kOtBNSmhsIH2jkCXKcOsbZfrQUgkAXZ8
ZJtAWWPcBySe60FAUJ8OOx+kQNUncaS4pOtB1t3iZxqQpUDPwF4y3KvrQXUu
IEfuI7BAoT/ZqYWy60G4CKFWRoK3QPGSrBK+uetB1WxZ2R83xkD7cPu81MDr
QXGh2RpBO8pA3jTXUHHH60G7rrtfNhXDQD7NC9aczutBvAp/HUWmukB3S81E
TtXrQbDtUyA+UsBAalQK9d3b60EeFf4YfVa3QNsxoJb84utBpHRko09YuEAl
9cIhoenrQWMKTz7tV7lA7Iw+ntTw60H+sikbm+i4QIwKRwSO9+tBnACjMVbB
qUDmEsurJf7rQYL61Fi3H6xAvu+nREwF7EFP9v2vdImuQG6yEcf4C+xBb5cr
1bp1tECcSdQ6NBPsQc2+wZAhQsBAhGsS8E0a7EHgYF2Qtv3GQEVz3Y7tIOxB
iWUw4vvLw0CETwEfHCjsQS2mKGNBCsBAmxGymNAu7EHttwJH0hfBQG1e3lNj
NexBC/0DeKmsvEC8f2MAhTzsQZBiD+HGi8JA5IZ1lixD7EFrwOARca2zQIpi
4B1jSuxB1cig2Av0wEDqyMbmd1HsQX+EUIqNXsJAIxU6mRJY7EH5v0tva0fC
QNk1Bj08X+xBAE0KQ1toxUBoPF/K62XsQSzkssXhSsZAdBcRSSpt7EErS2UF
tuDQQCTEEa7rb+xBBOXnSUrC2UBoJL8a
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$279725#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6199008*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3619900800, 3833395200}, {0., 
                   26377.160760854385`}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                  TagBox["\"\"", "SummaryItem"], 
                  RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {CompressedData["
1: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
FfsfQAQ+lQ==
       "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWxIXSvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
H8mzdvZ8m49Ut/lIdZuP5CfCsufbfKS6zUeq23ykiuYjVTQfqaL5SO9ZA7H5
SBXNR/KDadlzNB+povlIvrGJPUfzkSqaj1TZfKTK5iNpqUGGVjYfyX8La8/m
I1U2H6my+UiaTJOhlc1Hqmw+0p+fWUYkQ7UAIkP9mF7WXs1Hqmo+knUc1l7N
R1IkQ6uaj/Tn156/SB/JLxcM1T/QR1Kkj6RIH8kRDFWkj6R/oI+U3q0sDkUf
yes/MFSRPpIjGJoG7MBQgz6SV+xgqCJ9JEX6SIr0kfLPb18jgqFelYKh6Wcn
F4eij+SnUYKh6XvvWPukj+RYrH3SR8o/P8H9RfpIivSR0hvZrH3SR3Is1j7p
I2mCSB9JkT6S93Y2a1/0kbwoH6x90UdyTNa+6CMp0kfyozo3a1/0kbTcp4+k
SB8p//wg+RfpI3mr4LL2TR9JkT6SHxE6Wfumj+RYrH3TR0pvwbD2Qx/JWxSb
tR/6SOnnarP2Qx/JMVn7oY+kSB/JJ83N2g99pPzz8+x/46WP5Fis/dJHUqSP
pEgfyRdhF2u/9JEU6SM5Fmu/9JEU6SN5/+aw9qCPpEgfyc9tHaw96CM5JmsP
+kiK9JHyz4/Vf5E+kiJ9pPTDzll70EcyBJK1J30kRfpIivSRFOkjKdJHcizW
nvSRFOkjKdJH8lNsN2sv+kiK9JH8IK2HtRd9JEX6SIr0kbyptll70UdKL1NY
e9FHcizWXvSRcjz0kRTpI+V74RyRPpIifSRHIFWRPpIifSQ/4pdIFZ2I1PHQ
R9LskT6SIn0kzy3JUF+GXPyzVIwUqRg5kpLiDSk5BhUj71aSkmNSMUo/Yp9N
TipGfmgxKemrOGxyUjFSpGKkSMXIWwGkpL69pORYVIwcSUnNVEjJsagY+VHK
pKRmAaTkWFSM0u+uOBQVIz+egJQci4pR+gcHWPumYuRHOJOSOu+TkmNTMXIk
JfVfkpLvEh2RipEiFaP07x6w9k3FyJGU9H3zrP1QMVKkYuSfSCQlx6Fi5J1s
UlKRlPRyiLUfKkaKVIz8fGtSUqWSkuNSMVKkYuRISo5Lxcj766TkuFSMfDom
JcelYpTjUjFyJCXHpWKUI6gYKVIx8r4+KTmCipEiFSNHUnIEFSP7GKTkCCpG
ilSMfs89ZO1JxciXF0hJRVLSv4nB2pOKkZ8yTkpqgkxKjqRipEjFyJGUfP9W
RCpGvuhBSvqnOVh7UTHyw85JST/agbUXFSNFKkaKVIwUqRj5YgspOYqKUfrv
RO36J1JyPlSM/Ah2UlJ8JSW1WiAldfImJedDxciRlJwPFSNPVEjJ+VAx8qPf
SUlfkkftc1AxciQl56BipEjFSJGKka9EkZJaZ5KSc1Ax8hPoSUlFLjy1liI0
56RilL7eydonFSOvOolUHTdEqn+2hbVPKkbWcIlUTeKJVC3piNS5qBgpUjHK
d7+VkUjVSyZS/esxrH1RMfLz+InUuagYKVIxciRS56JiZOgRqXNTMVKkYvR7
FDhr31SMHInUuakY+SkJROrcVIwUqRjZGCNS56FipEjFyJFInYeKkSIVI/9Y
AZE6DxUjXw8iUuehYuRIpM5DxcgXS4nUeakYKVIx8o8kEKnzUjFyJFLnpWL0
e4gta79UjHyRlkidl4pRzkvFKGdQMXIkUmdQMfK1fiJ1BhUjRSpGfxCCSMXI
kUidQcVIkYqRIhUj/4IEkTqTipEiFSNHInUmFSP/xhiROpOKUfr7ydqTipFb
JVJnUjFyJFJnUTHynWlE6iwqRr5yTqTOomKU/rkn1l5UjBSpGP3ePGsvKkaK
VIyEOSpGilSMHInU9VAxUqRiZGISqeuhYqRIxci/jkOkroeKkSORuh4qRn5w
GJG6BhWj9I9foXZfqEHta1AxciRS16Bi5O1mInUNKkb5XjxDpGLk7y6R6t/g
Yu2TipEiFSP/yAmRuiYVI0UqRv7xciJ1TSpGjkTqmlSMfr/rwNoXFSP/uAqR
uhYVI0UqRo6/b+x/At/KmSY=
       "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
        ValueDimensions -> 1}}, True, 12.1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAUZxkcM4t60HwKQa8Ji0GQPDp6P6S
M+tBHo1p+bR07z9AA57A0znrQbb+e/d3Zt8/FWb9bao/60GLwOn5k77tP9Q9
icljRetB4EvnUf4i6z9E4UVYmUvrQdnGQjgxigRAOc6s0mRR60GRmcrHYKsm
QN+GRICsV+tBL4mxRC2WIkBvtAjc1l3rQRUd3Qk3RSlAhCt3I5dj60EfTOpC
QKwoQEpuFp7TaetBqCb/8ADVJUCW+l8Epm/rQcYXIci53CdAy/vVGFt160Ed
u9K5WuQnQLHIfGCMe+tB7pVdKok4I0Ad382TU4HrQTUqRNSgBR1AOsFP+paH
60H4X7TaRJwlQEAY/g69jetB5bdeUoC6NUDMuFYPeZPrQQ3yjqvJfkhACCXg
QrGZ60FSRGlT22xmQMraE2J/n+tBuzqKLSUvckA9XHi0yaXrQehSKwSFKGxA
mVIJtfar60GAT67aCz5yQHuSRKG5setB+ASeOrbvdEAOnrDA+LfrQffw6YXZ
inhAJ/PGy82960G+NCaW4TGHQCm9CYWFw+tBKdnR0TjYkEDcUn1xucnrQRDY
xgsKnoVAFDKbSYPP60EZXP1DvNR/QP3c6VTJ1etBbAcoTKeVg0DQ/GQO8tvr
QQ6q+v4a/3pAKGaKs7Dh60F+q0WCpPx5QDGb4Ivr5+tB/XWQhmGfaEDAGeFP
vO3rQXxAHlsAnGlAOA0Owm/z60GwiQl31ENlQGHMa2ef+etBiAB5LPJtYEAQ
1XP4ZP/rQbyH5NUVEltAcKmsvKYF7EGRpaNl0CphQFXHj2x+C+xB94qvdiSp
ZEAkWp/KOBHsQZ7QvzfNVW1ApLjfW28X7EHg7SRBL7xzQKlgytg7HexB/6lg
9pBTakBf1OWIhCPsQUsA6on3QWVA/7wt568p7EFNu6edsAhnQCTvHzFxL+xB
VF9oQ4vtZkD67EKurjXsQbZegvKrm19AVjQQF4I77EGnSM1AtJdmQJvwCS44
QexBk3rMuyc2bECReDR4akfsQTPW+vHdx2NADUoJrjJN7EFAtK1nGAtpQDrn
Dhd3U+xBhwt5eMCCbkBQ+UAunlnsQQfOUGMiHnVA7FQdMVtf7EFHxA+/vx94
QDl8KmeUZexBOUWDtbJqd0AL7eGIY2vsQVH6ncUbFHxAjinK3a5x7EE1KtmD
uIeCQD5PMeGwduxBncOL3O0xk0BJz76V
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$279877#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6478944*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3647894400, 3833395200}, {0., 
                   1228.482286628546}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2144", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAUZxkcM4t60HwKQa8Ji0GQPDp6P6S
M+tBHo1p+bR07z9AA57A0znrQbb+e/d3Zt8/FWb9bao/60GLwOn5k77tP9Q9
icljRetB4EvnUf4i6z9E4UVYmUvrQdnGQjgxigRAOc6s0mRR60GRmcrHYKsm
QN+GRICsV+tBL4mxRC2WIkBvtAjc1l3rQRUd3Qk3RSlAhCt3I5dj60EfTOpC
QKwoQEpuFp7TaetBqCb/8ADVJUCW+l8Epm/rQcYXIci53CdAy/vVGFt160Ed
u9K5WuQnQLHIfGCMe+tB7pVdKok4I0Ad382TU4HrQTUqRNSgBR1AOsFP+paH
60H4X7TaRJwlQEAY/g69jetB5bdeUoC6NUDMuFYPeZPrQQ3yjqvJfkhACCXg
QrGZ60FSRGlT22xmQMraE2J/n+tBuzqKLSUvckA9XHi0yaXrQehSKwSFKGxA
mVIJtfar60GAT67aCz5yQHuSRKG5setB+ASeOrbvdEAOnrDA+LfrQffw6YXZ
inhAJ/PGy82960G+NCaW4TGHQCm9CYWFw+tBKdnR0TjYkEDcUn1xucnrQRDY
xgsKnoVAFDKbSYPP60EZXP1DvNR/QP3c6VTJ1etBbAcoTKeVg0DQ/GQO8tvr
QQ6q+v4a/3pAKGaKs7Dh60F+q0WCpPx5QDGb4Ivr5+tB/XWQhmGfaEDAGeFP
vO3rQXxAHlsAnGlAOA0Owm/z60GwiQl31ENlQGHMa2ef+etBiAB5LPJtYEAQ
1XP4ZP/rQbyH5NUVEltAcKmsvKYF7EGRpaNl0CphQFXHj2x+C+xB94qvdiSp
ZEAkWp/KOBHsQZ7QvzfNVW1ApLjfW28X7EHg7SRBL7xzQKlgytg7HexB/6lg
9pBTakBf1OWIhCPsQUsA6on3QWVA/7wt568p7EFNu6edsAhnQCTvHzFxL+xB
VF9oQ4vtZkD67EKurjXsQbZegvKrm19AVjQQF4I77EGnSM1AtJdmQJvwCS44
QexBk3rMuyc2bECReDR4akfsQTPW+vHdx2NADUoJrjJN7EFAtK1nGAtpQDrn
Dhd3U+xBhwt5eMCCbkBQ+UAunlnsQQfOUGMiHnVA7FQdMVtf7EFHxA+/vx94
QDl8KmeUZexBOUWDtbJqd0AL7eGIY2vsQVH6ncUbFHxAjinK3a5x7EE1KtmD
uIeCQD5PMeGwduxBncOL3O0xk0BJz76V
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$279877#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6478944*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3647894400, 3833395200}, {0., 
                   1228.482286628546}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2144", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                  TagBox["\"\"", "SummaryItem"], 
                  RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {CompressedData["
1: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
UIDXzRbgeCDHoXqnyQ9iS66JMsf7wMmjVkRbHRfHM90b72O1Bx6X54H9UugB
vJ8CsYaOO77vMwfjjLeXXE974X0g6xaktw95Y16+7oHxgfDCepn8fJytJeya
ysV93qc8qNlwiOo4iYfjbZ/8OpOL83SbN/bPXy8Yq8dqeZTCxXrygTd8uzmu
zeYbF+tWdR9Yd3u5MJ2s99D+sOV1dIo3PDq4s+V3nbx+8+fi/NDl4vnWyZ9T
ysX1o5CL67LlXLyuM+4YVzM9sN1/PLC/guR+WeqF51vnBaKsL63H33vi8d7y
z2BPXD+e9gTNm65EcrEnrvOjPXH9uE8+jqwHkX92e8rj0BPXlfGeuN496Ynz
5bgHXt9ZD/jdlE9dSNa56PsmD+yP6Z6ovzs42hNurVMjDnzxxHbreGHes/YG
7pgr1CaaN65LEuT7ttYL81OaF16fF3ltxyeYW7xwPLzxxPXTKQ5+fhYHx+kH
Ns4jKRsO/97YoqfDwXlf4oLjwIqJ71dlASPiieb80wzI9T5a8PWpM0yyuFGd
x3DEfKLhhPNOZQ+YXfVpKRLtwX2YXGew33q6+pqLE4jXjBT+snJEOv5UqRPw
1EbXtqs5QfyBc1GLVu6BuAdHzC4e2AOoTZtvj/TaxX5boHXe0nyzfTc8Page
tWz8bkipK4iacXc33MncVtvWbQvnv5AJvMoWWuemSn6V2ELWlGbNvYW7cH9x
2i7k/6Uau3CfbNsuODpdS5x6Zzcs3vIqymSjPe5f2dhjv010gmuTTxI3GHtg
csbZgpwFTjCW8KNE2jFxvyGBhfB91Eomyovz4Uz4sntEdZOeE+yvmsG4sJiF
dFIGsCB4gYtYFM6Cu2mPpHdOMoFTHStens0Cx7SjkniWK5jJXtgqdgFhQiGI
t7uCR3cr0zfAFW66d7e2XnaFqmXxFOYPFxhMNdSKue8C+Y47qOdfuyC8GzGd
CVNLqmpntDMgg14iaYpkwOCBT/mBpk4ga3ct0mHCqdvHKWoxzrCiQkNbod0Z
v9fxhdy3rAHtUnCGaVEnxMu0GUAdl1rg2uwEvZwNxCwrJ/hgTm99ecYJNg/p
C386OgHz4YgY091OMHKuU+1Scr86bb4KN2o5gY/6BrN+e0cI1Z6teaPEAc7e
mKtlyXGAiUsDNVVW7IEQo9b8zpsOcKJgonRMpwNcW7ialZSzBywHHFsSWhxg
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
h/z2aI4Y/gfbCMXe
       "], CompressedData["
1:eJxdnU2u7MxxRD8DHgjehXfA+s3MJRjQyCsQPDDgkQfy/uGIpv3xpARBeAG9
V7dvNLtOsXjI/tf/+O9//89/+uOPP/7+z/qfv/7X3//nH9Lf/oL0b/+iP6y7
I2vv5/kzVj75xXxuTMRx1kWc+peIa14MlXtMDrWrONTJw6F+P+eLcZJD5d4c
qtbAUPWMwFA1nv0w1oOhasbFULXu4lB7F4f6/bpfvHNyqHiSQ0UdDpU5OFT5
x/5/PM9zUPt5xkbt55kTtZ9nDdR+fr8eY14OdWJyqHuKQ8U+HCrX5FA1UPsZ
z4PaFQu1nzECtZ/xe/O/uM7Dofa6HOrMxaHuUxzq1uVQkZND5U0OVQe1648b
tZ/5Owa/OAdrn+th7XMla587WPt0cYh3s/YZi7XPHKx91sPa5++j8GdcT7D2
NS5rX/Ow9rUWa197svZ1Bmtfp1i73gPWroFY+/p9Ir9Ym7XvZ7L2PQZr3/Nh
7fv3d7+4grXvfVn7Ppu177tY++//Q9SUxKGyWLs/hBjKRz+GOr+X/EW93xhK
RbN2/4YcSkNzqN/89MUbrP3EYe36u6xdH0jWfn/NfXE8rP2OZO13Bmu/67L2
+5smv6ijg0Pdydr1kln7jWLtv88YYl3WHs9h7TEWa485WXv8ZmvEYu0hMnAo
Dcah/F/E33H0xVysPWqwdv2RtQtsrD1/0PjivKw912btegNZe2pe4VC/wxmR
SD0ZROrJJFJPFpF66iFSTw0iVQcOkerjiLXXIlJPbSL11CFSNS8QqaeCSD2V
ROqpIlIViVT9PSLVhzNqvzqaUft9FpF6n02k3ucQqYpE6n0ukXrfH/vFJFJF
FCLVnyrUfscgUu/vAGUkUu9YROodm0i94xCp9/3tvxhEqj7NRKoikXpHEan6
uBKpdw4iVWsRIvUKqKxdrbL290344iFS77xEqucY1j6TSL2ziNS7HiL1rkGk
KhKpqoZIfSd6xE2k3nWIVE91rH0FkapIpF6RnLWvIlL1Q4jUuweRet9D8ouL
SFUkUv0pYu37EKlaIhCpWl4TqV5As3YtVVm71ois/f1kfHEQqV6OsHZN/Kxd
AGbtv3cX8RKpnutZu+Zc1q7ZjbW/H9A/oz7erF0fJNauI5i160hi7XcRqS6L
tZuxHOoSqVdTKmt/54kvFpGqSKQag6w9BpGqgYnUG4tIvXo/WXscIlWRSL3v
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
Vcc6kboO9aQwyFn7oZ7k+ZVIXZd6kiORui71JEXqSfZSidTfbX8cinpS/Gxi
DpVE6s9Z4FDUk+K3M4qhgnpSrKCeFL+PLIYK6kmORKqWV0TqCupJitSTFKkn
/SQS1p7UkxyJ1JXUk8xXInUl9SRF6kmK1JMUqScpUk9yJFJXUk9SpJ5kWZhI
XUU9yTMMkarZikhdRT1JkXqSIvUkRepJitSTLCkTqauoJzkSqfo/iFRf/kTt
+6GepEg9yYcCkeo7ew6Hop7kSKTuh3qSV49EqtbaROoe1JPi3X5FpJ7kSKT6
BqPiUNSTFKkn2eAmUjWJEKla8hOpikTqHtSTfHcKkbon9aTw3hZrn9STvBVA
pO5JPcmRSN2TepIi9SRF6kmK1JNC+CFSfbsVa1/UkxSpJ9lnJ1L3op6kSD1J
kXqSIvUkRyJVwCFS96Ke5KOGSN2bepIi9SR71USqTsOIVJ+VsfZNPclbTkTq
3tSTwjefsfZNPck6P5GqSKTuQz1JkXqSIvWkeKmASD3J1+yIVN8Dx9oP9SRF
6km+yYBI3Zd6kiL1JEXqSYrUkxyJVE2DRKo/cqz9Uk/yzQ1E6r7UkxSpJzkS
qTuoJylST7KPQaTuoJ4UviOQtQf1JN9jQaT692HtQT1JkXqSIvUkHTbUkxSp
JylST3IkUnWUEak7qSf5zg8idSf1JEXqSb+jl7Un9SRF6kniOvUkY55I1cFO
pO6inqRIPUmRepIjkaojgUh9r6UhUk9SpJ4Uvk0TtZ+HepIjkeptftR+HupJ
XpkQqTrdJVLPQz3JtxoSqYpEqi9ULA5FPclXYYnUM6gnKVJP8hFJpJ5BPcmR
SBV9iVSdSxCpvmk1OBT1JN8GRKT6Z6J2RSL1TOpJitSTFKknKVJPUqSepEg9
yZFIPZN6km9OIlJ1FkqknkU9KbzFxtoX9SRF6kmORKpv4WXti3qStxCJ1LOo
JylST1KknuRIpL5LfMSmJ53d9CTfSczad9OTzm56kq9Esfbd9KSzm550dtOT
zm56kqYYIvWcpid5WmDtp+lJ5zQ96ZymJ53T9KRzmp50TtOTzml6kiKRqlM6
ItX3VbP22/Skc5ueZDix9tv0pHObnnRu05PObXrSuU1POrfpSec2PelE05NO
ND3pRNOTTjQ96UTTk/zJZ+3R9CS9uUSqTtKIVN9lztqj6Uknmp6kN4FIPdn0
pJNNTzrZ9KRXjGAkUlUrkeqb3Vl7Nj3pZNOTfLGUtVfTkxSJ1FNNTzrV9CSd
3xOpp5qe5KvOrL2annSq6Umnmp6kI5RIPdX0JP07IvU+TU+6T9OT7tP0JN/6
Hxyq6Un3aXqSL+ldDtX0JCGDSNWvR6Tep+lJdzQ9SVM5kaqFKZGq5SSRekfT
k/QBJVIViVRNv0Sqr5cUh2p60h1NT7qz6Ul+EAJrn01PurPpSXc2PUnTBpGq
Uxoi9c6mJ737NYhNT1IkUv08Bta+mp50V9OTfD2fta+mJ93V9CRFIvWupifd
1fSku5qe5JNh1r6annR305M0axKpikTq3U1PurvpSXc3PenupifpeCVS/XQK
1r6bnnR305N8psHaT9OT/Kw01n6annRP05P8WC7Wfpqe5CdPsfbT9KR7mp7k
hxyx9tP0JD/Wh7Xfpifd2/QkP0GGtd+mJ/lZHaz9Nj3p3qYn+fEcrP02PcnP
p2Dtt+lJ72GE2PQkP3SAtUfTk3zXPWuPpidZOWHt0fQk30rN2qPpSTeanuS7
dll7Nj3JChFrz6Yn3Wx6km+JZO3Z9CTfBMjas+lJN5ue5PvNWHs2Pck3XLH2
anrSfZftiESq76Jh7dX0JN9Gwtqr6Um+cYK1V9OTfG8Aa6+mJ8XT9CRr6Kjd
Ojhqt3iN2n0cFYdqepId38mhmp5kq/VwqKYnxdP0JAuUqN3mImq3QYja7eqh
9nfzHbHpSdbCJodqepK9qMOhmp5kEyg5VNOTLLugdksnrH02PcleBWufTU/y
ziZrn01Pitn0JF+0Zu2z6Um+TMvaV9OTYjU9yVcEWftqepIvibH21fSkWE1P
8jvC2lfTk3y9gbWvpifFanqSt7ZZ+256kndvWftuelLspid5o5C176YneWuM
te+mJ8VuepJ3YVj7bnqS9x1Y+2l6UpymJ/kUl7Wfpif5HI+1n6YnvWsCxKYn
eeHO2k/Tk7xyZe236Uleq7H22/QkL0dY+216UtymJ5l8rP02PckTLmu/TU+K
2/QkTyusPZqe5A8Sa4+mJ0U0PcnvGWuPpif5RbP2aHpSRNOTfDSz9mx6kiKR
KgwSqZFNT4pselJk05Mim54U2fSkyKYnKRKpkU1Pimx6kv8qa6+mJ+n3I1Kj
mp7kh3Kx9mp6UlTTk3TOSqRGNT0pqulJWhQQqe+VVEYiNZ+mJ/nZYKhdBxmR
mk/Tk+yWJodqepIikaq1CZGaT9OT9G4TqTmanuTLVKg9R9OTcjQ9KUfTk3I0
PSlH05PUOZGao+lJOuiI1BxNT/KT0lB7zqYn5Wx6kq8BsPbZ9CS9YCI1Z9OT
cjY9KWfTk3I2PUkkI1JzNj0pV9OTcjU9KVfTk8RTItULRta+mp6kjyCRmqvp
SbmanpSr6Um5mp6Uq+lJuZuepDUQkap1K5H6nuAhNj0pd9OT/Pg61r6bnpS7
6UnWn1n7bnqS1stEqiKRmqfpSQIMkZqn6UlePbP20/SkPE1PytP0pDxNT8rT
9CSt4onUvE1P0rxIpOZtepIf5sfab9OT8jY9yUsT1n6bnpS36Ul5m56Ut+lJ
eZuelNH0pIymJ2U0PSmj6UkZTU/KaHpSRtOTPO+z9mh6UkbTkzKanuRHG7L2
bHpSZtOTFInUzKYnZTY9SadWROqrxSA2PSmz6Ul+wiJrz6YnZTU9yYY+a6+m
J2U1PUlneERqVtOTFIlUtUqk2jlg7dX0pKymJ2n+JVLraXqSIpGqtSaRWk/T
k/SSiNR6mp7k500Gh2p6Ur1XORCJ1HqanlSj6Uk63yVSazQ9SeQmUms0PUmR
SNVbRKTWaHpSjaYn1Wh6Uo2mJ/kFovaaTU+q2fQkrWuIVD99k7XPpifVbHqS
1nxEas2mJykSqZqridR3t+6Lq+lJtZqe5IeAsvbV9KRaTU/yTSSsfTU9qVbT
k2o1PalW05O0rCNSFYlUb4Ww9t30pNpNT6rd9CTNEkRq7aYn1W56Uu2mJ9Vu
epJmKyLVj0Rl7afpSXWanuSPGGs/TU+q0/SkOk1PqtP0JC1yidQ6TU+q0/Qk
RSK1TtOTBDYytG7zkbxqZ8+3+Uh1m49Ut/lIfiIse77NR6rbfKS6zUeqaD5S
RfORKpqP9M4aiM1Hqmg+kh9My56j+UgVzUfyjU3sOZqPVNF8pMrmI1U2H0mn
GmRoZfOR/FNYezYfqbL5SJXNR9JimgytbD5SZfORqpqPpEiG6gSIDPVjell7
NR+pqvlI1nFYezUfSZEMrWo+UlXzkaroI/nlgqH6A30kRfpIivSRHMFQRfpI
+gN9pPRuZXEo+kg+/wNDFekjOYKhacAODDXoI/mMHQxVpI+kSB9JkT7Su/7n
UPSRfFYKhqafnVwcij6Sn0YJhqbvvWPtkz6SY7H2SR9JkT6Sz4YPa5/0kdIb
2ax90kdyLNY+6SNpgUgfSZE+kvd2Nmtf9JF8Uj5Y+6KP5JisfdFHUqSP5Ed1
bta+6CPpdJ8+kiJ9JMdi7Zs+krcKLmvf9JEU6SP5EaGTtW/6SI7F2jd9pPQW
DGs/9JG8RbFZ+6GPlH6uNms/9JEck7Uf+kiK9JE8aW7Wfugj5bsE/OKlj+RY
rP3SR1Kkj6RIH8kXYRdrv/SRFOkjORZrv/SRFOkjef/msPagj6RIH8nPbR2s
PegjOSZrD/pIivSRfBFrs/agj6RIHyn9sHPWHvSRDIFk7UkfSZE+kiJ9JEX6
SIr0kRyLtSd9JEX6SIr0kfwU283aiz6SIn0kP0jrYe1FH0mRPpIifSRvqm3W
XvSR0qcprL3oIzkWay/6SDke+kiK9JHyvXCOSB9JkT6SI5CqSB9JkT6SH/FL
pIpOROp46CNp9UgfSZE+kteWZKgvQy7+WypGilSMHElJ8YaUHIOKkXcrSckx
qRilH7HPJicVIz+0mJT0VRw2OakYKVIxUqRi5K0AUlKfXlJyLCpGjqSkViqk
5FhUjPwoZVJSqwBSciwqRunfrjgUFSM/noCUHIuKUfoLB1j7pmLkRziTkpr3
ScmxqRg5kpL6m6Tke4qOSMVIkYpR+nsPWPumYuRISvq+edZ+qBgpUjHyVySS
kuNQMfJONimpSEr6dIi1HypGilSM/HxrUlKlkpLjUjFSpGLkSEqOS8XI++uk
5LhUjDwdk5LjUjHKcakYOZKS41IxyhFUjBSpGHlfn5QcQcVIkYqRIyk5goqR
fQxScgQVI0UqRr/nHrL2pGLkywukpCIp6e/EYO1JxchPGScltUAmJUdSMVKk
YuRISr4/FZGKkS96kJL+ag7WXlSM/LBzUtKPdmDtRcVIkYqRIhUjRSpGvthC
So6iYpT+mahdfyIl50PFyI9gJyXFV1JSZwukpCZvUnI+VIwcScn5UDHyQoWU
nA8VIz/6nZT0JXnUPgcVI0dScg4qRopUjBSpGPlKFCmp80xScg4qRn4CPSmp
yBNPnUsRmnNSMUpf72Ttk4qRzzqJVB03RKq/toW1TypG1nCJVC3iiVSd0hGp
c1ExUqRilO9+KyORqpdMpPrbY1j7omLk5/ETqXNRMVKkYuRIpM5FxcjQI1J1
+kekqjki1XtbrH1TMXIkUuemYuSnJBCpc1MxUqRiZGOMSJ2HipEiFSNHInUe
KkaKVIz8ZQVE6jxUjHw9iEidh4qRI5E6DxUjXywlUuelYqRIxchfkkCkzkvF
yJFInZeK0e8htqz9UjHyRVoidV4qRjkvFaOcQcXIkUidQcXI1/qJ1BlUjBSp
GP0fQhCpGDkSqTOoGClSMVKkYuRvkCBSZ1IxUqRi5EikzqRi5O8YI1JnUjFK
fz5Ze1IxcqtE6kwqRo5E6iwqRr4zjUidRcXIV86J1FlUjNJf98Tai4qRIhWj
3y/P2ouKkSIVI2GOipEiFSNHInU9VIwUqRiZmETqeqgYKVIx8rfjEKnroWLk
SKSuh4qRHxxGpK5BxSj95Veo3RdqUPsaVIwcidQ1qBh5u5lIXYOKUb4XzxCp
GPmzS6T6O7hY+6RipEjFyF9yQqSuScVIkYqRv7ycSF2TipEjkbomFaPf9zqw
9kXFyF+uQqSuRcVIkYqR4+8T+79Ip6W5
       "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
        ValueDimensions -> 1}}, True, 12.1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"DOGE\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAKMtzsGn46kHbFbehUJAxPz7CDxIN
/+pBYU7IqLWKMD/RjQRlPwbrQcKMhkqAZis/PT+GofcM60GVkvhvCHIiP2N7
gx+OE+tBwMrT5QAZIz8HjNmOsxrrQeqaL0vXuxs/g4K8514h60FEbjiC4lEi
P31N+DGZKOtB6Di4LHcCKT8xo6+9sS/rQQrTLBdiYiE/vt7zMlA260HU7DX2
UCcgP8nukJl9PetBGw8VBOMqID+s5LrpMETrQWQ/i6VIviI/SmVge8JK60HU
3UlbWRMyP2W6Xv7iUetBncdQq3EGMD9Z9elqiVjrQbdfPlkxXC0/ygTOyL5f
60FqZk4TLg8vP/aeLWjSZutBiewn3dGHMD/7Hhrxa23rQesRSg6vYC0/fXNf
a5R060EkD0QWaeItP9itMc9Ce+tBK6QSWcfVLD+wvFwkgILrQUZTLrOMoy0/
Q1YDu5uJ60HhDWlU4GQrP67VNjs9kOtBS2r0rF93MT+XKcOsbZfrQad65Wh0
n1Q/WWPcBySe60GJ1Y8TV/ppP9UncaS4pOtBbvfRqm0PXT/PwF4y3KvrQayc
XKVRGlc/oT/ZqYWy60HEAdtO7/ZQP/GSrBK+uetBOgjAWOWCYj+XjxRXfL/r
QaVjwzV9ZIA/eeHjSA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7wa+p7jD60GlY8M1fWSAP94011Bx
x+tBawfLqFSweT8+zQvWnM7rQXAEjRujxGY/d0vNRE7V60HwAR1bNslxP2pU
CvXd2+tBKpZz9BxwYz/bMaCW/OLrQWtXU38to2M/JfXCIaHp60GLkmUrAjx3
P+yMPp7U8OtBEpgm9QfEbj+MCkcEjvfrQWiAxcMf7WA/5hLLqyX+60EKh7c8
uNJgP77vp0RMBexBRW2QMkxJYD9ushHH+AvsQYsSkZB6Mmc/nEnUOjQT7EER
NpWQurdqP4RrEvBNGuxBeUv4q2lIaz9Fc92O7SDsQaXMG/x8+WU/hE8BHxwo
7EHlVwDtWkxjP5sRspjQLuxByPnYVMcEZj9tXt5TYzXsQRQmjGZl+2A/vH9j
AIU87EFAZDLOsPlkP+SGdZYsQ+xB6fNRRlwAWj+KYuAdY0rsQeL6iigccWQ/
6sjG5ndR7EGaRp/ISEBkPyMVOpkSWOxBRK008ooIaz/ZNQY9PF/sQWaAqPoC
j2g/aDxfyutl7EE2f4AeJLVlP3QXEUkqbexBaqySomDzaj+Ydw9XQnLsQaVj
wzV9ZIA/ybbNLw==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$280029#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6199008*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3619900800, 3833395200}, {0., 
                   0.008004167750572064}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAKMtzsGn46kHbFbehUJAxPz7CDxIN
/+pBYU7IqLWKMD/RjQRlPwbrQcKMhkqAZis/PT+GofcM60GVkvhvCHIiP2N7
gx+OE+tBwMrT5QAZIz8HjNmOsxrrQeqaL0vXuxs/g4K8514h60FEbjiC4lEi
P31N+DGZKOtB6Di4LHcCKT8xo6+9sS/rQQrTLBdiYiE/vt7zMlA260HU7DX2
UCcgP8nukJl9PetBGw8VBOMqID+s5LrpMETrQWQ/i6VIviI/SmVge8JK60HU
3UlbWRMyP2W6Xv7iUetBncdQq3EGMD9Z9elqiVjrQbdfPlkxXC0/ygTOyL5f
60FqZk4TLg8vP/aeLWjSZutBiewn3dGHMD/7Hhrxa23rQesRSg6vYC0/fXNf
a5R060EkD0QWaeItP9itMc9Ce+tBK6QSWcfVLD+wvFwkgILrQUZTLrOMoy0/
Q1YDu5uJ60HhDWlU4GQrP67VNjs9kOtBS2r0rF93MT+XKcOsbZfrQad65Wh0
n1Q/WWPcBySe60GJ1Y8TV/ppP9UncaS4pOtBbvfRqm0PXT/PwF4y3KvrQayc
XKVRGlc/oT/ZqYWy60HEAdtO7/ZQP/GSrBK+uetBOgjAWOWCYj+XjxRXfL/r
QaVjwzV9ZIA/eeHjSA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7wa+p7jD60GlY8M1fWSAP94011Bx
x+tBawfLqFSweT8+zQvWnM7rQXAEjRujxGY/d0vNRE7V60HwAR1bNslxP2pU
CvXd2+tBKpZz9BxwYz/bMaCW/OLrQWtXU38to2M/JfXCIaHp60GLkmUrAjx3
P+yMPp7U8OtBEpgm9QfEbj+MCkcEjvfrQWiAxcMf7WA/5hLLqyX+60EKh7c8
uNJgP77vp0RMBexBRW2QMkxJYD9ushHH+AvsQYsSkZB6Mmc/nEnUOjQT7EER
NpWQurdqP4RrEvBNGuxBeUv4q2lIaz9Fc92O7SDsQaXMG/x8+WU/hE8BHxwo
7EHlVwDtWkxjP5sRspjQLuxByPnYVMcEZj9tXt5TYzXsQRQmjGZl+2A/vH9j
AIU87EFAZDLOsPlkP+SGdZYsQ+xB6fNRRlwAWj+KYuAdY0rsQeL6iigccWQ/
6sjG5ndR7EGaRp/ISEBkPyMVOpkSWOxBRK008ooIaz/ZNQY9PF/sQWaAqPoC
j2g/aDxfyutl7EE2f4AeJLVlP3QXEUkqbexBaqySomDzaj+Ydw9XQnLsQaVj
wzV9ZIA/ybbNLw==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$280029#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6199008*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3619900800, 3833395200}, {0., 
                   0.008004167750572064}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                  TagBox["\"\"", "SummaryItem"], 
                  RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {CompressedData["
1:eJyFXAdQFM/TRcxZRBAVlYwISBLMPgMGVJSMSrrjAtyRM4hkFXPAgAlFxYCA
gqCiYk6YlSAYEBEDmHMO3x23vVd1v/rXZ5U1NbuzszOzPa/f655D2zfESaCs
pKTUSvI/p6OSUmHk2NHTV1tg0SXV8VvTrdDp/tP3doaW+JI6K+KjjhWQd33d
3XpL9n54SOJ527SheD0zZlvsTRv8TBSXRa4djuQUrXGLVo5h62fWqg/JKxyB
6IBNXS5/GgGsiP/Uz2AkbPe+qJvtMBxvPQpUMxutkZq/183HyxpcS1fzwblW
cFH27TnkqXw8m3pE2FVHW+H229W+ybZWaBz+XnzMygqxG7R0s89Z4NuqhU09
hluib+9uC/itrBC95GVBSoElW9L8/OdIW5rjd+6HCntfc8Tvctt4qsYc1dfn
dpr6ywyrT9lVZvsPwf3nlz4v0B+CFW8OZ3+7ZI7Zmjd/i7uZo9kn42qvCHNM
rgj+bDHQHN0+OzxY5Ci/Tu0HfqkxNik1Q/EkaUMz/A6atbr27RDodbdVFz0x
hYHmvGXp30zwSMmq/uwsE2Q+e2X5e68x1tcePlmXYYKgYWeH2W83xfTC4Vt/
VJuw10Ntv+UHlJiw1x9++i3aNdIUPzl9+h2/Z8bOa2WRqneqsxkyriVNPZ1g
ypZHfcbOsfA0xSCjQqU9XUxwLDDy5qwwE5TF7Z8YvMgYDV1FLo/5xux9mpf2
2MLG0+PM2ffQOlGd1ofqNH8qRf1d7XtEmaHm3uokYQ8zdn0DBi87N2SpfL3/
zVvY9lvrIez6KI5r1tWcRTZK8rKx7/Yrf+MGM3ZmhBdDO5eMyhkElUbrgy/z
DWAlPjVtbLQhEjJGBepYGaJT2dpZq4KM2OfNHJw4rWYY4Zlh9dj+q+Tlti4r
M9xfDILbh8nP12AQW4+XDm+AvLxYkKrRdN+QfU+XK1cuFKQOQnafC+2jfxvC
wmtx9UDuIMbO9TFyDWf/psN6uF6lFzuxrz6uXH6rrN/WgB0v1T06F9++KTLA
3nFCvzuj9PHBv3Hx4e96WHCs7lpCuB6EM8729avUZtZtACp+XarZNkcHSyrt
jhzfqoNlj5OM7xVps9epPODX4bJJvA4+RfX5W9lVD7n2Wx++c5D3q/o+QK/j
OX22lO1L+bhlOKDD7ENd9n2y/afD3h+zbcPA0qu6bDvF9tROtl912XEpjlNT
z/ZHqrp8Xnws2z31lLx/akf9yfBKl21H9f/1PupXcf0Un6fnqC7DJXm/1F6x
X8V5UXtaL+pX8XnFfqkdXa/u8GfGyWDt/5QDLeYF7zDWxs+tJ7zM7LUxvlS5
05fP2gzuaf3nvuL1QymRRaLdWgyOaaFGzercgzR5ndpTSdfpORlOaDF4OhCT
N1wvKssbwJYyXOvP4KC8DHc01Vl6pR+zL/sx+74fg4+aDB7JS2pPZavFJ+ap
9enPljJ81GT7oX5NJ2q+emLTF213GgqcJvZj/FIfBj/6sO2oLsOLPuh+99+I
65m9MfvvfI9CF3kp83/qbF2GCxpsSc/JcECDHR/Ni+Yvw0f5etG+luHsAPa+
zI9psyXZEeEB2QvZH+EM4ZXL0x5hEYONmPEasvhys2HuG66ZHmt/hDe0zzQ6
1Xab/FqXxQ3CA7pOOEH9+egPPNF5nR7bD41j+ILB1vHZ+iweJm8Paxg31YD5
DkbY8s+9/4gKo//gvmKd/CDhLc2H8LbDQa/7obMHs89t+qi9r+/Jwaxfc6q5
/8tFbTCL/3Gxt1KedfhvSf6C1u189oxdVy4OYkvyF6cWPS5dvmUw+17y5zJ7
G8z2Q+MjfJfZh9w/5ViZfzxkYMDYlQG7PvT9aJ7k56ikdaBx0XV6jvwR1S8f
L13R7r0BbGI+n/ZcJvc/Ow1+zl+nYvgff0QlfXdFv+Sl0TzpTeJ//RS1Jz+T
N7fCsZtQl+F5uqwdE/4o4iLhF/kBRRwi3KM64Rr1p4hXhFOEa4RTMt6khYkX
hyepdpLjI9WpP6r/L9ykfqk/qhMu0nXF9lRS/4rP/QdXW/invE73ZXzrv/ep
TvdlfFSOy3SdShlv/W9JOER1ak/Xqfz/+lN8P9UJ9wgXCf+opHa0PoRXhFNk
L3SdeAfZI/lt8uPUjuyNcJT4E62bon0olnSf7IHskvpRtCMqyZ7pvmKd7JD6
U3yvov9VtE8qFdtTfzRfRR5H+1ORD9E60X0qaX9TSX6CnlP0S4q8kErF/U91
xX7pe5Pforoi3yN7oO9A/REuEf6SP/pfuEx4SfZD4yH/R+8nfCO8JL9IdcJb
8jsy/mLM4Pow2MzZNWDnnTFMOxtmnENZ3Uq6XDYfC8aOLPDCydP1q5cFHL8Y
Z3W/ZYm2Z2Lbdf1jxazXUFYH033S9aSvSTfPavpi+OGYFU7lWMyd4iqvUzt6
jvQ2laTPO9w4EG/cU66/t/TPPfVpmSXDf+XtswbXW/XcYQG37hvTZ/wwR/Yw
tVzzI+aMHcv1Oelr0uekM0lXk54lvUh6kvQx6UrbJRtGb9tgxpakQxX7O+zU
4WnPKUPYkvQ18Q7ql3gEfT/S0VS3PxmsovFKrqOpTnq/9foP76yGmLDzleGg
XA/TvCgOQPNTfD/1R+8l3iHjt//lPaSv6X3/S4fTeyluIOOt8vFQSeOkcuou
ZcMHZ+Ql9Uf3Kf6h2A+VND5qR++n+VOdvguNi/qn9aG6tnK3HdNuDGHjL4rf
l95H71d8r+J4qV/FeIri/GjeZGdkX4p2pvgd6D49RyWNn+IoFH+ifS/Ddwtc
vFZ5bOc6cxYfaN/KeNlQNm73UGVmZ+/P1ng0YEHy/I7WDJ+zZvinDY4tvRjS
ydgaj42Pf9k8YCjjLyzYfXymyO+WQGzJ4Lk8zkZxQsINGR5aMThpxeCkHJdk
/tcSJtyg5Vnv5fhE/ZoF72pV1tbyP7gn81sWOHcqy3ZBkhz/urzoK/QfLcdF
mf+U1+m+jD/I43qEL4rrTvEvwiFqrxjPUvy+FH+j70r2SnEn2o+EAxTfI7ug
cSuOh/olu6Y6lYp4Rn7DanH319/N5CXtd2pH8TzaD7R/FfcJ1cne6TrtB+qX
xkf9Ku5DxTrhMsULFfcRjUcRL+i9VKf3k/9Q3DdUp3HRfOh9irhL/SvikuJ6
0HwUcZT2N7Wn+2QP/wtvFOdP9xXxlcZL/RFOUkk6mepkZ4rtqR2V5FfIr1Gd
nqOS8FbRP9Fz1B/hNLUje6V1UVxfmh/1979wn/qjdaD50XOK76d2dP1/tafx
032q075V9L90n0ra1+SXFfc7Xae64rwU+6V2iutK41PMD9D60bqR3f8vv0/t
Fe2SSsXrtD/oOeqfvqOiXVCp6G8jvXmZ+x4NZvkK8SzFeP9gm+dRF7Tl60Xt
ie9Qe7pO7alOeQLiQ4r8iJ5XvE/vp/v0PuJzVKeSvrPi+BT7pbgU1f/X/Gke
VKf42P83T8V+KQ5FcSq6TutP16lO46Y6rYNiHO5/zZPq9L3J75C/oTwR4SbZ
F9mvon8gvqOYXyI/STyHeAHxasoj0nXiIbJ4lTXLg7hn/yS3bzcOoyK6d6z/
NYrZf6MZux3N7KMxTNxwJHtfunsGfB/OrO9IJh44gvkuo+DT/mYfx/ujGHsZ
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
       "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWxIXSvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
H8mzdvZ8m49Ut/lIdZuP5CfCsufbfKS6zUeq23ykiuYjVTQfqaL5SO9ZA7H5
SBXNR/KDadlzNB+povlIvrGJPUfzkSqaj1TZfKTK5iNpqUGGVjYfyX8La8/m
I1U2H6my+UiaTJOhlc1Hqmw+0p+fWUYkQ7UAIkP9mF7WXs1Hqmo+knUc1l7N
R1IkQ6uaj/Tn156/SB/JLxcM1T/QR1Kkj6RIH8kRDFWkj6R/oI+U3q0sDkUf
yes/MFSRPpIjGJoG7MBQgz6SV+xgqCJ9JEX6SIr0kfLPb18jgqFelYKh6Wcn
F4eij+SnUYKh6XvvWPukj+RYrH3SR8o/P8H9RfpIivSR0hvZrH3SR3Is1j7p
I2mCSB9JkT6S93Y2a1/0kbwoH6x90UdyTNa+6CMp0kfyozo3a1/0kbTcp4+k
SB8p//wg+RfpI3mr4LL2TR9JkT6SHxE6Wfumj+RYrH3TR0pvwbD2Qx/JWxSb
tR/6SOnnarP2Qx/JMVn7oY+kSB/JJ83N2g99pPzz8+x/46WP5Fis/dJHUqSP
pEgfyRdhF2u/9JEU6SM5Fmu/9JEU6SN5/+aw9qCPpEgfyc9tHaw96CM5JmsP
+kiK9JHyz4/Vf5E+kiJ9pPTDzll70EcyBJK1J30kRfpIivSRFOkjKdJHcizW
nvSRFOkjKdJH8lNsN2sv+kiK9JH8IK2HtRd9JEX6SIr0kbyptll70UdKL1NY
e9FHcizWXvSRcjz0kRTpI+V74RyRPpIifSRHIFWRPpIifSQ/4pdIFZ2I1PHQ
R9LskT6SIn0kzy3JUF+GXPyzVIwUqRg5kpLiDSk5BhUj71aSkmNSMUo/Yp9N
TipGfmgxKemrOGxyUjFSpGKkSMXIWwGkpL69pORYVIwcSUnNVEjJsagY+VHK
pKRmAaTkWFSM0u+uOBQVIz+egJQci4pR+gcHWPumYuRHOJOSOu+TkmNTMXIk
JfVfkpLvEh2RipEiFaP07x6w9k3FyJGU9H3zrP1QMVKkYuSfSCQlx6Fi5J1s
UlKRlPRyiLUfKkaKVIz8fGtSUqWSkuNSMVKkYuRISo5Lxcj766TkuFSMfDom
JcelYpTjUjFyJCXHpWKUI6gYKVIx8r4+KTmCipEiFSNHUnIEFSP7GKTkCCpG
ilSMfs89ZO1JxciXF0hJRVLSv4nB2pOKkZ8yTkpqgkxKjqRipEjFyJGUfP9W
RCpGvuhBSvqnOVh7UTHyw85JST/agbUXFSNFKkaKVIwUqRj5YgspOYqKUfrv
RO36J1JyPlSM/Ah2UlJ8JSW1WiAldfImJedDxciRlJwPFSNPVEjJ+VAx8qPf
SUlfkkftc1AxciQl56BipEjFSJGKka9EkZJaZ5KSc1Ax8hPoSUlFLjy1liI0
56RilL7eydonFSOvOolUHTdEqn+2hbVPKkbWcIlUTeKJVC3piNS5qBgpUjHK
d7+VkUjVSyZS/esxrH1RMfLz+InUuagYKVIxciRS56JiZOgRqXNTMVKkYvR7
FDhr31SMHInUuakY+SkJROrcVIwUqRjZGCNS56FipEjFyJFInYeKkSIVI/9Y
AZE6DxUjXw8iUuehYuRIpM5DxcgXS4nUeakYKVIx8o8kEKnzUjFyJFLnpWL0
e4gta79UjHyRlkidl4pRzkvFKGdQMXIkUmdQMfK1fiJ1BhUjRSpGfxCCSMXI
kUidQcVIkYqRIhUj/4IEkTqTipEiFSNHInUmFSP/xhiROpOKUfr7ydqTipFb
JVJnUjFyJFJnUTHynWlE6iwqRr5yTqTOomKU/rkn1l5UjBSpGP3ePGsvKkaK
VIyEOSpGilSMHInU9VAxUqRiZGISqeuhYqRIxci/jkOkroeKkSORuh4qRn5w
GJG6BhWj9I9foXZfqEHta1AxciRS16Bi5O1mInUNKkb5XjxDpGLk7y6R6t/g
Yu2TipEiFSP/yAmRuiYVI0UqRv7xciJ1TSpGjkTqmlSMfr/rwNoXFSP/uAqR
uhYVI0UqRo6/b+x/At/KmSY=
       "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
        ValueDimensions -> 1}}, True, 12.1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.833438058278713*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"45fafab7-3d49-4d9c-bd31-07503f9701e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.833438062938698*^9, 3.8334380629469786`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"d16f8e07-4eb4-4a2c-9556-84e2a6ddc535"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qVeGPhWYr36ALbMUr2rcwB3nkv5vXwX24xul/t+rQHu9kvqXraLH2Hd7sHvz
dal/1Ssyfq5I/e9VkfWtA+qpLbEi88dw6f/3VKR9DRj3/qm46aWj8cM+Sv3P
XIn9zn2wKbgSx/tK/99dcePUMob546X/n1aJ56lgsHtnJZ5Xikn9v1WJ/jdS
6n+GyuxHG0n9r1yZ83UC27tUZr03SP2PV3wq7G7a6MxYr2ZHZdojJ1h/ozLP
/23A5h+V2Q/0EP0VqrD+RoGdHavwvC79jXdSFb7/q+jfWoX9w0XRf03x7ENX
0tauFP1fq1DfdtFftirjPUn0h1dlP3Nd9MdV5fmU/c+mquzfBov+K1XZn0wQ
/Z8UF5p/IO19uNg/KJj7tUjs3y6Y59uZYv/xwfSvp1L/1wfzfLxF+p9LinFf
OFX6nw/BvL+Q85Y3sJrHWL5gkNvVHaxrU43rrSD+P7Ya9QeK/6+rxnrWD+cj
x3nFi/3mmx91kfz3rhrrteRrbUk94zm/5P+WesbrZcl/oxRP7tk8PjpR8t9q
Pf03HPO7zig+GvzNPSlV6r9XccLmo9blIVL/ildnPBWV/NesOu8LXkn+G6G4
9uQY54fDkv9WVGe8r5D8d6o6z88nJf+9ru6rt2BTkRrMZ6z/xhqs9wOl/g+t
wXx7QfQvrcH1mEW/U3HKijahD76I/pc1fOdDqX8FazL/Sn6yN67JfHtG6l90
TcbjVal/Sb7nM0n+O16T/jFI6t8zxd9vlwnt5xL9+WpxPTdEf4NarN+yXu9A
xa5VgfEvNoh+Wy2ez6S/MB2tRXsGSv5/XIv3e29Ff57azN9PRX89xZfWrjQf
7gfW9q/N569L/Ztfm/VV3m85VJv9tAnz2x/U5noHiP6cdbh/bUR/nTqsJ0Xl
/Geuw/PYY9E/R/GYvNnTvy6V/m9/HeqZKvX/rzqsD3ul/vvV5X6z/tesy35G
znOm3or9f9/mbH1e9M9U/O/V61ZjLun/9yqe7/1Xl/kU2H23LutNpPT/Wetx
v1tL/6+vR3+bLPWvp+IRH0cn+68T+0+vx/P9A6l/u+vR37ZL/fuzHt+vl/4/
U33W/3iwuariQ287xDeS84KtW332R8Ml/qcqrh7Zx9ropcR/Sn2ex3pK/P9R
n/cbMRL/mhCP8eOFDtboWxL/lRQnd70W2HOT1L/OIexfdJL/poSwPraU/Lc9
hP3MKsl/10OYf45K/vuuGN8rbkj+K9+A9o9AfnZ1UIz77Oxy/zVJ8YyUTLrd
a+X+a0sD6rHivsvsUozvJRswbvvSgP1oV7n/K9OQ9T0J94ne9g2ZL+rge4Bu
QkPaT76nmDY29J2PcR9s/a0h8+8guf/82JDnZbnfd5dqxPV2kfvPsEbMp6fB
hphGjP/ccv9tV4zvR6OwXvvFRryvCJL7z38Ue0a3MeTKJff/gY3Z316BHn3r
xtSbUfSPacz8v1Pu/9Y25n3r36L/XGPWP7mf9P6teHyr6oZ+/cA6/1DaVyf3
/y1CWT9HyP2nRfHxWs2tSa3k/nNVKO/r9HL/edrHGrn/fBvK+6UEuf8sZlDn
kXnxyX/nkPvfpgbuv1m+fww38HzQVe7/lxt4Xq0l99+nDOz/l8r99ysD70u3
yvePwkb672j5/mEwcj02sHOIkflmn9h/iWJ8PwuX+/80I+tbmNz/vzBS72Gx
f4Em9I/P8A9HIx8Xw/cG96Am9JePGNcu9o2H4vug4VgT1vdq+J5nedqE9x3+
YLu2qcfYJkcV64tTYFdIU9/912ToH9iU+zcC8+kXKr6Vnt8aOhVsPtKU9/+f
wbZHTdkvPQE7czdjPdyB+b11mzGfDgHr+jXj863BpnnN2N9tAVsPNuP3lZGY
z+Fuxv4sTr5/5mhOfyoo3z9rN+d9x3CwIbI588EAsGV2c+bHvKI/tTm/T2zH
uOt+c56/XoA1fi0YL2XxvL5GC+5vEbA5ogX7Ibd8/5mhGN+/8mHc6WjBfusn
xr13WjCfXAPrsrT0GBuuv5V82g49pmotOd4JbO3RkvXsM+ZzJLTkfv8Eu3e1
5P1UVjyvvd2S58UGGDdkbMX8mEXsX6UV89NjvN/etRXj5Yz4v7UV/a8e/E+T
0or98WPx/5uKq1Q5HOiogXHzz1bc/1Py/adia66/KeZ3dlKM77Wb5Pvn5Nbs
d57J959tramnrvj/763Z31TD89ZvrdkPTpTvn+Xa0P7TJP+Z2rCf3gPWTlSM
76/Mf5vb8PvAIfn+ebUN/X+TfP/6rBjfG3PJ96/Sbbk/Jon/9m3pT5J/9bFt
Gb+B8v1rQ1vmux54v+1yW+5XBfn+929b5rdZ8v1LF0Z/my3624bR/7vJ969x
YfRXq3z/Sg7j/t6R/H/BN35Uvn+9D2O/m1n0B7RjvEyW77+t2tEeY+T7/+h2
jMeMYPuadsxn4+X7/9l2XE8W8f+/2/H+YKB8/y/RnufDMPn+2bw997sj/Ms2
sj39eZj4/8r2/H0vif9f29Of5Xup7k17nhcWgk1Fw5l/Z4GtTcJZnzKK/w8L
5/nTT/x/WTjvi4qCtSfDuX55n8ETzvdXF/8vZOJ5Kl78P9TEfNNT4n+wifV6
D/ZDs8TE71PZwfoTJp6XJ8rfPzw3MV8+kb9/yN+B/pgOdjbsQHu8Fv+P6sB6
k1/0L+rAeO0l+n/pwPOk9APWJ77xB5L/83Zk/skm+b9+R+5fbsl/AzoyH2kl
/y3oyPhvLfnvcEfaZ4XY/2FH9gdbxf65OjE+7on+up1YH26I/r6deD4vJfaf
24n9gE7y34FOtE9Wif/0TqznotebvTP3M1D01+rMfmqn6O/Tmef3BLH/LMWT
zOfijX5gx77O7OdlP933OrP+5RT92bow38r8hupdaP92or9XF8ZPe7F/Yhfq
7yb239OF9yNW8f87Xdgfxoj/Z+7K+B0q+oO7Mr80F/3duzJ/1hH907rSn3qI
/p1dWX8Gif5bXWnfJNGfoZvHOD25nvXERNFfuRu/n04X/V26sT++K/aP7+b7
/iv6d3Rjvjgo+m90Yz26IPp/KM4zuLO7TD2pfxW6sx4vk/rfsTv748KoJ5rJ
3Xl+uCv1b2t3rqeM1P9r3dlfb5P6/7U7z/d/SP0v28PnL+gnvOE92C9dlPof
18Pnr1L/NvVg/IyS+nelB78vZ5H6/0nxf+vSNJb6H9ST+ULm07bryfsmWZ9h
fE/O55H4X9+T9UTqp/1ST95vHcHzrg89aT/Ro9H1YrwI69v0ov3Oif6xivH3
TsGif10vztdW9J/vRf8dBva+68Xva9K/6EpGsF8UNrWMoN6Von9UBP2vn+hf
HcF+MUL0n4ngeWuw1H9vBPvtoZL/ivemPaT/sjTrzfyRKvpH9GZ9Gyf2X9Gb
/i/9oObX3ozHdLH/697092Kiv0gf+lNX0W/sQ3svh72dQ/twf2xW6F+quEv4
08D7o8A6Zx/ml91g08s+1L8abC0YqfJX3ly6iHNgR2PFyT3y289eBbujI2nf
C1OhPymSep+ADcd9/BFseaY4c4lbaW3DpkF/PjPnywx2NTDze1hVsCZK8ayj
eQ05PuD3epviebfLW0/lxLj5qJnzfwDbHisOK1bP3jxrIvTn6av263CIJmOm
GdBfT3G9GRp37DCM6/r35d/LpIJN8xVfSryYFvNuJvQf6sv5BoEdD/ryfevB
7pz92I//BdbWUXy617P0K9nBBrPivfcbGerenA79c/rxPGIX/fv7cb74BOj/
6z/O9yBywEU8r8nen/XoPFhfsz/ryQ48b+7dn/c1cRi3zexPvfXAzr2KV1Sr
5gz4iee9dxUvfPwucF8O0Z91gMoveZsY+gSJfv0Axud3sLWn4iJrTqaHL8V8
jukDaL/eGHfvHsDz5weMa/8cwPirhHFDpoE8v2YW/VUHsn+7AbZ3G8j+qBvY
NVVxtMsV+qCN6N85kPvfSPT/oThk8aX46NNgsyaK+XqM6K+k2DMyuzPZJvo7
R9F/joK9UxSnOIq5g7aAddujeB5tIPqvR7Gf9xP936MYH+JPjvKDGJ+/4ffu
DoPYT4h9tJMU/366gfN9Z7BhyyD2y5NEv0vxu5WvklvuEP1fBtH/LaK/TDT1
9hH94dH0j9Gif0I0fx8r+jdG0x9miv7fFBey/RtqlnHnx2i+P1HsX2qw8vfS
wZqq7+B/ujDFeaIKmA+XQHyZYgbzPnYf2GofTPvnx/OOi4N5HvuEcfc/ivtu
eR1Zvw/GtYFDeF+SCDa0HsL+MRZsGTOE9pPn7WsV37p37efvVrDrnOLY5t60
D9FgzbshjNcIsN5/qMf47XEFw37JH+YWQ9nvX8d6bJah7A+OgJ2rhrJeSr7w
nla8/+m5yKMvMK57q/julxehc9+J/mLD6C/fRX9TxZrvJ+KTJB85hg9jfqgE
di9XPK5+WV3WrqL/1DDm2wai/5XislkKO8eWEv2FhzO/5hH9BsXty2Yy1C4p
+ocM5/uu4v2apcMZb28l/6Up3nOluu6uF2x+MZzvz4Xf2wqMoD99Ff2NFGsy
Ga3DHoK9g0Zwvm+if/EI5oO9+L3p2Aiev7PAX6xPR9A//hH92pH83lEA4+6Q
kTxf1QJrByo+P+Fn4MzFYMNCxTddWc2PYsCWIyM5/ySw/dFI5l/J367cFo9x
4Oks9r8zYFxTz8J8mR2s72ehPxSS/DdP8djyt+MbfRb9By30h49gp1vxqXB/
Q/pbsX+OUeq80fLMz+958Htd7VGML5nfFDmK+Sqj6J+tuOGmorrq20V/6ij2
dxvE/vdHsX/4Q+zvN5r90U2xfw3Ff74JsK8+K/aPGM340Yj+GaN5n/+36HeM
Zjw8Ef+/O5r++Vr8P8sY5sfcor/aGNbzamBbjzHMb0XAzoQxPJ+VkvjfpXiR
93ja+nyi//YY+mMZ0Z9xLPuRCqK/ylj2763Ajq5j+b7uYn/rWOb/FmL/lLHM
f93E/jfH0p/9JP/9VFw7rrZh9gPRX3Gcxxi5KsjZ+qnUv07j6M+ZJP9NGcf1
fBD7b1Mc3OB0aK7ckv9+H8f9+Sz6v41jPXkr+svFsJ/YL/pNMYyfg6J/Ygzr
xVnRvzmG/jwH81uvxvD7wSypf59juF8jJP+XHs98NE/yf/vxzHc1pP7Fjuf9
xDSwZcN4xvt8sP3yeJ7POqE/cf07nvXmDcY1pWIZz8/A+rax9J8reN48Lpb2
LId+w5Ycy+8JidL/XIilv3wGe9/7fv9V6n/ABNaDhpjP1GoC91eet46ewHgK
xrhjzQTW71Vg99kJrFcRYO3fE2jP/mBDiTjuhx/Y0jyO/ZJX9I+Mo31l3LUy
jv4j69GcjmO/a4Q+/Zs4xmt5sLnoRNp7kuhvMpH5Qtg5bCL3+7b0f8smsp8q
hnHdyYnc3ziwyTOR+aiZ9H+FJrH+BUn/FzqJ+aCq9H+DFa9u8CUyz1fRv2QS
67Nb9J+YRPv/EP3PJ9He38D2/JOZL9thPlfDyZx/C1gzaDL76/BZ0L9oMvNd
MbD5F8Vzz95J/xwMtj2ZTPsfEP15p3iM++58S7v4AOytP4XrzYDndQOmsJ8p
DDYtmEL/Lwe2Hp7C/rI22PFwCvuj3GB3rnjWDzNYWzee/cYAsKFvPJ8fCrbM
jWe8mMD2A/E8n80Eu9Lj6c8HwZocVurdL/prKV4/8H7owTOiv4+V/W622dA/
y0r/yj8H+vdZWY8zz4X+e1bWg6vzoD/bVOanwmBT9ams7xnA1l5TGT8RYEfi
VPpjxfnQv2cq++f4BdB/ZyrtMRRsyDyN58PsYEvwNNa3kmB792m0V42F0D9t
GuvHG7Bm1zSev8Jt0H9rGvubHIuhP0MC+5UUPG+rnMB6Ux3rdXZJYHwMAHvj
FZ8dXsu6fILo35HA/FdH9N9IYLz2Fv0/Eugv7cX+FaazXy6H/XZ3nM79TANr
J09nf5EENmydznq5G2y5Np354hvY/nU64yMS73OVTeT+7Ie9NKZE7ndRjOvj
EhnPnzBu3pTI+LyCcduVRL7viej/lOjrz0V/0AzW9yf4va7dDP59UxXRP17x
i/6NdY6don/9DNrjhNj/0gz2Q5fB7g8zWB9/AWt1M7lfv4INbWayP+4k9h87
k/nzudh/3Uz+/ck6sf95xT+879M3FoG9Ne9n0j/aiv1LzqI/5AabW87ieD2w
bdQszrcU7Fw9i/loDdh7Zhb7gQJ4n847i+fNJ1iPqfhsztcf49ZmsxnP9cGO
EbPZX3zA8+4Vs/m+ARjX/jqb54eJYMNrxbuPPY4/Jeu1FJnjMZ6onllzqzvY
bpxD/5wAdg1VfCzoU3pcpOhfNof+ni76nYovzsppqDl8EfS/nMP5x4FtBed6
jC1eFTA8CEF8OBvPpb26gr3Rc7l/6Xhel6S4zvh/0i7XwrjpuO/3I8HWZ//P
jnzz6A/Fk6C/wTzG3zywNmoezy8esME2j/u5Bmw5Oo/6LoPtj+cxPz0Cu/LM
9xibXPn6s0IAWFN/Pt/3CevV95/P+RdJ/M+fz/WNFv2H5nO+SNH/QHGz+9l0
iYUwnzfnAu53KFhXZwHnN4NNZsW1op8nW2aArXMUd2xawtpooejfv4D20ON9
7r8WsP8aIfkv+0KurwbsZai5kM/Hiv17L6S+afi9fabiy8uLmBcOEPvvXUj7
hIj97y1k/xaGfKvPauPfU0XhfWa9jfeltcG2njben3cT/59u4/5HiP/vtnG/
QsG6P230j+xgU6ZFXF8a2Fp1EffnIdjRbRH3r57on7qI+yP+pN3pe/4A2PCH
4qMFXqUFJIEtmsV8Xxz2015psS/ewK7Oi+mPYj9N/GL6i+y/fvti2nOe2P/6
YvrfDbDtu+/5k2L/8kl8f3Px/w5J1NcYrJuUxP3qKP6/JYnxNFH835XEfLRV
7P8lifrfgN1llnC+F2Bt+BL6Xy3x/wlLGK9Fxf83LmH8Nxb//83H90T/xyXc
j1ni/0FL6U9nwPqwpb56vgT6Y5bSv5aBbXYfLwI7Ly7l+raCvf8spb/lXQr9
gcuYv+osg/7Wy5gvU8HWMcvoj62WQ//aZdSfdQX0n1tGe7UDa98to94UsMF/
OfW9A1taLOf7Xq+Cfstyxtvw1dC/ajnt+wqsObOc63m4BvrfLud+ePF7c7EV
tE9NjNua+rgp2Dl8Bf2tIubzLl/B9RYD606toL5jeN70agX3f9pa6C+8kuvP
kwz9hpXy/nGt7dA/ZCXne4xx7VIff8G4Ic33e90G6H+h+EH5PPaWRTZCf4FV
1JMB465Gq/h8rfXQH72K/nwX8+sXr5L+YOUtzG8+pjjw9t+R9ZLxvO3pKqn3
3h8Yd2pXi79cu4dxb8hq+d546irepxu4WuYrNgrrMS1cLfZL3QK2HlG8fX1u
57pksOORj79vgv7ca6TeR/XZAv311tA/u2+G/n5rpH9p5AFb5q3h7/PieftB
xelFM1qHZtsK/e411OMP1uRcK+ttcg7v09dey3gPwXzmyLUy//ElWJ9t9lr6
uxHsTF0r7wvYBfbe53yn0jCfzm+dyq/PvscveS76a6yj/zbAuDXCN94U73PM
8I1nBLsd67i/QWDtXR+PEv1ZksUelr6Yz1ItmeMhYHuPZNm/pxF4vyvBx16w
Zncy319S9N9Opn//gXFzRjvjsa/or2KnPbOI/q52+oPsj9dq5374if4UO/2x
E9h00y7+9kXY+tP3vKzfUXE97Sv76e60nu8vjHHtFMXd+rwLfbAT44Zt6/n7
2eL/v6/37SfY/s33++Pi/+U2MH6GgjUdNnB8NPxXP3ED80UDxIN58wbmh/Lr
oP/qBu5vNJ53ft5Ae5fEfN7SGyXe753CuK79RtozE/zRFLuR+eeW6N+wkf77
j9j/8kaur7PY/9+N4q+HE8X+pTYxnnX4vaHtJtrzFPbDMm6TnIcWpov9kzfJ
+7K8w+9dF3zPh4E1/2xifpoD1gds5n7EYL3mVpu53oYYt43eLPmjW1Wwc81m
5qsXYO/ZzWLvc8n4ve7vzdyvwduhv8QW2q8E2NrcxwN3QP9IHx8Cu1duoX/5
g7Wnt1DfELDhzRbuX+JO6C+6lfHeYzf0N9nK9f++B/qHbZXzTaknDuhfvlX0
vukC1p/k+Pqie6Hfo7hytc/JDg/GbYW2yXl/nQHsDFV8/eSX0NS+YO/gbfTf
t3ifbsk25temYNOJbVxPZjxvfe7jumBH/u2++g92N9zOfFwA69EO2s58qAEb
Fm2X9T4IAFt+2S75aZuw/cl22v8R2JV3h8dYtXEWZ9hNsCZE8b+HMrv7R+6D
/gE7xJ8z+qdC/4Id8vszD/G87bDikbkyOD88BTsf7pD75/B5oj9Xivx99UzZ
P13dFNmvgA9gU98Urvcj2Do3Rfo553TRfyBF5ss7TfSnp8j+e4uDtTl2ynqa
G8GGWjvl+atBYEufnbJ/wV3E/rN20t83b4P+fTuZ34fCXzT3d0q+KNgRrM+2
i/H8PQX6q+/ifp+C/Wy9dtEft2N+ZyLHnyaAvXt2cb4+mE93x/f73mBT5t2M
b/su6A/eTXufwbij+27Jv6V3Yj73tN2sl9Fg7a7d4t8p0aL/1m7xr6PtRX+G
PeJ/+ZqC7ZX3iL0OvAO7uuxhPasp9rfy+Q71wfode+iv9/G8+YbiHK2+BkYk
iv//2CP+Ff1c/L+Cg/ufH7/3dnSIPz1qI/af7OB8GeFfpq0O+uMmsPWaQ9bz
fRfY8dX3/B2wu+xeed/zFgeg37RX9NTOexD64xQvev8j9OI5sGXTXvEXfTDY
fmWv5KvlvcGuT3vFvtOeYD5N6X2M7z/A+nb7GI9heN48fp/E95iJh6B//T7G
40Kw89I+5ptYsPfDPu5nJbBOlyr7sXEZ5je1SZX4uxyD+a1jU8VfbmjxvGNd
Kv1pCcbd51Nl/UUmgLXvU+X9f2Y/DP0l9zPe3uH3lpb76W/NjkD/qP2Mz5FH
oX/1fok365ZfoP/sfvp7+WPQ790vet9fB5uLH6C934JtzQ7w+RH4vXPEAYnn
vs/B3hUHuJ+lj0P/rwdYj59h3PT6gOxH6TtYn7XIQe7nTehxGA/SfxtDj3vo
QfGPycl4XrvsIPOFB2xwHhT7z0nC+iwvD/L9aSegv+Ah+pc/2NX4kOxPuRFg
zWCOTx6QBv1Jh3znHyf0Hz/E/nAmxm3PDsn3qLMBGHfmO8z8GIVxb4PDMn5b
xnVRh8Vfx1U+Cf02jreofwr6jx6W/Fil6q/Q/5jjUZvB7jxHJD+0N4G19Y/I
85e//Wqolj4roLfiybaBJx/WP2P4H045n6M=
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQPW3C/kbtw68dayekHnxkedQBKNTgBuSLz2dKUNt7
GMTfUADkb7r1Z3/PNzD/wSwg/0Tlf3nXlwdBfIGjQD6QZkiwB/Md3gP5is//
1pe8BvMLJI+8dvRTZXZo1DoA4i9wBvJd7rIruGrvBvEv5B6B6Gfw2gfiM8wA
8nXtWA/4HN0L4hscAvLvSzA1nFYB6094A+XXCoDNnyB2FGL+52tg+QMORyHu
/3FwP4j/IQvI32fIwuCZD1avMBXIf5nwd776abD6gP1A/vJJjAsCug+B/f8S
ap7xbYj/hY9Bzf9z2GHRls+yRscQ4QUAWpuFBQ==
         "]], 
        LineBox[{{3.727852128333395*^9, 10867.771526999999`}, {3.7279008*^9, 
         10551.799805}, {3.727941334456987*^9, 10867.771526999999`}}], 
        LineBox[{{3.7281385155329294`*^9, 10867.771526999999`}, {3.72816*^9, 
         10690.400391}, {3.7282464*^9, 10005.}, {3.7283328*^9, 
         10301.099609}, {3.7284192*^9, 9813.070313}, {3.7285056*^9, 
         9664.730469}, {3.728592*^9, 10366.700195}, {3.7286784*^9, 
         10725.599609}, {3.7287648*^9, 10397.900391}, {3.7288381988335733`*^9,
          10867.771526999999`}}], 
        LineBox[CompressedData["
1:eJxVmWd8k+UaxkOBLjpSOlBZYQgIgpEiYi00BRfgwSAgFIEGK8i0AUE5CDas
sgSCoj0Ix4aDHEBWLNNSIGWP0qbQSVe6R0Kb7tJ5nve+7n44fvH3537Wda/n
ydsBX4R/ushBJpPldJHJpP9HleaGOT6wBm/UL4oveOeOSvyTvIfgaa92VdW6
E6veEnz9zW6yB9/eklgbyvZNITclNuwU3CvaQXM3kNh8XrBM+m96vMSyXMHH
f+piUF8ku9L5oTU4ZGV76L5msmtGC4551npjRT2xfp7gck1bdOkQk8SmSMGR
p7oqvh5LbDfy+NcnEyuyHuI8+bbrEqu7P8J50z3JrnvjEewzsoiNIY+wXtwS
2s+yRfD6ma15R7XE8rNsD3QjVmU8wnmTZhNrHRLAnpW0nuH1BMwvjCI2f5aA
/c47E8s2Cd5f2x7kepDOpzwlOG5gU976njdIf6rgp/HNQefbrpL+DsHv5Tgp
tlXEkv7XHsMf28eT3T7jMeYHxJFd8YPgkRO6mxJOkV19QrDrRy39+yiukf4n
j9kfd2i8sfUx4rXuELFlSCLOP932N+mfnojxvTrIrvo+kc8TTutrjyVi/9jV
ZDckCf73FEfdzRhi84vO9cbReNngJOSDKhn6pwkOd+tiqk8n1qwTHHbxRcT4
0eQP/X+S4P+97yH+CYLzXnLQnVpPdntDEp8vl+YrBphhX15IdvVUM/w11B/x
X2uG/ys+oPgZo5kfhiL+DwSPi5RZAt5E/OvMyFftKsS/XzLOb7JT/mo/Skb+
5WI9w+pkxDtegfw/nAz/Ru5B/t9LxvnGT0T+Vydj/12LiDW9n2D8B27E+vef
cH0l0XxT+BP2lwvZ7QefwD+VTlSPits8fmEN2dWVzN7BZNe99BTrL84iu3Hi
U15/GrFlxVP4cynWl0cxR40lVsXz/KaTyH/rU+i/vgH575uCeK86jPwPSuHx
LtC/TPD9f3b0X+RIrDyQAv8qo2m85noK/LFsDrG+jNeb/jvF09QzFXo39EX9
B6by+Xqj/r9KRXwMBmL1/lSc74dViP/VVOTDvaW0nrE4Fesnb6P6sHimYb3Z
R4nlAYIbLnezDBpHrPoyjfvL1TjSvzcN+sbdJzZcSUP+tuVRvpsLeL0oJc2X
uadz/VTSeOXb6ciHER+QXbMwHfX/zVpi/e5OziI2XUzn+hlG+W7PS+f6nUt2
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
VdVtqDe5nfbX9m63BpdOr44Y+hrZDe+3Y3yQA7E5vJ31DCCW/daOet/Rn1h5
W3DdiaYb1sHQX9mO/K7sQP6/1IH4lfQhNk3sgL/ftVM92FcIDvjFTTY/kOyK
qA7k2y9didXxgpvuymVFQcQ6awfi0x/1afSV2YIvlDtbHOXI/yDmaY7E8mWC
JT2XfYhVBwR/7NfYf+cp2l97XbDUT6r3EhvKBEv+2HcM+nt2sVE9LjkL/eMF
S/mtSYH+rwRL/TVbB/37BUt6PXYj/lcFS/1ksAbxLxYsxedmMLHd08FGeqIn
I/4BgqV6+vlzxP9LB8w/fR7x3ytYivfKKOT/FQecR5mG/C/g8X8EUX7K3bvi
fIFFyP+3BUv9w30q2bULBUvvk8hR1A8Mu5mf3ab8MV/k+V/Oovkyi2DpfXO5
D7HStRv885IfsWaMYCnff+qL+l/QDesNH0ps2tEN66UoUf8xgrcebuwI8SBW
5AiW7t++YbS/2qm7De8DLdl1bwqWvjcVRED/52xv2gv92wRL77FJ64nlRsFS
vhsaoP+ZYCmf/fNQ/90cbXQfr9mM/jfKEeupdxGb5zhCb/g26N8iWMrXayeg
/4xg6T57Ug396YKl/vLNEfKvvosT9KxFPzGNECzVS9dNxPZZgqX+sTCRWKET
LNVHbSWx+k/BUv86vp5YlyJY6j9V4bj/2p2QP8e3E1uGOdvofffZCsR/hjPn
H+vf6Iz9XhuI+B8XLP0eGYD9DMnOqJ+xD9H/WgRL91moA+WHbIiLDe8hV2Kl
WrDUn75ywf2/3gXxHjWBWP+HYLqPPel9YUoULPXr7iuJ7U0uyIeEAGLFIFcb
3Q9nTxOr/+EK/yXfItZ954r5xdMukP4jgqX7+85JYssj5vqZxPIGnr8ngVil
6GGj3/8b7tN62imCpft1Vz7eP2t6wH+/lhGbf+fxV96g+bIHPRC/3o/Irqzt
gfzY9w3ZNX3dbNQf7VuI9R8Klvr7FzHEplVuyC/zZWL7ITf4qyCTWHGX7Ttu
Eqvtguk+7kXvNd0r7vDnvNvExvfcEb+cOcSWr90xf+tc6D8oWHp/hERD/y13
5OuUA8Ta5+7I10HHiA29PGz0fpgbQWwO9oB/Ykugf4UH5se8QvspfxUsvQc/
2kSsMXnAf1N20HtUX+HB9X+P2OTjifhcPEpsn+CJek5cTaxY6ol61N0hVv/s
ifOvXYDvf9c8Ud/b++H9X8rrZVbg/e8lh7/uDKbf4/JAOeojNBC//xfLoa8i
kr7vaPVy6FkWgO8/sXLk8y+O+P5dJIe/yxJovMzTC/lUfA6//99hfusr/P4P
88L6GQ74/r3HC/t/Mhzfvy97oZ5m9MbfP/K9UE9yGf7+4dYT+2U8wPevsT35
/P40XqfpiXzbvQbfv3b1RPwO2Wk/ywXmwtH4+0cez29xwt8/XLzh3+vl+P7l
7436iwvC9//53ji/6gb0b/dGPB1i8fevGG/Ea703vv9ne8P/Efj7mMbRh+ux
N51fr/TBed/VE5vm+iCfHPfi+/dWH/i7djnpUZzzgX4F/p6mzvRBvXk703hd
V1+cf6YK+kf6Ir8uNZLdMtsX62Ul4/vfZl/o+dYb3/9O++L8Fc3Qn+aLelFO
wt9/ZH7wx4T9xObhfvDfyDE3Sf8sP/g3Pw76I/xQ3zf7kF1zkucfOESsf+qH
/PjQTH+/MbWxPaPkNukf2gvnPed/R7X7SdPUEYI7/377P6PGYNw=
         "]], 
        LineBox[{{3.7708377712626762`*^9, 10867.771526999999`}, {3.7708416*^9,
          10817.155273}, {3.770928*^9, 10583.134766}, {3.7710144*^9, 
         10801.677734}, {3.771019324580986*^9, 10867.771526999999`}}], 
        LineBox[{{3.7720046884690056`*^9, 10867.771526999999`}, {3.7720512*^9,
          10256.058594}, {3.772133906436362*^9, 10867.771526999999`}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQrbVG9cEJqTeOtRNSDz6yPOoAFHL4BOS3rWZWuNR0
CMQvkJF+47jp1p/9z96B+QvcgPx8HsYDtlePgPgXCqD82IlgPsNsIL8q5M/9
iexg8wyOAvn3JZgaejeD5RPeA/kvE/7O7zUG8ydIyrxxnPj5n31S2GEQ/4Az
kK/4/G/9N00w/0OuDMT819FgvsIMIN+ijeGBmjuYH3BIBuK+axD3NryRgbg/
bwWYv0FM9o3j8kmMCyZNB/MfOMhC7Nt2GMwXyAbyxeczJVzYBDbPYaosxH1X
/cHuK9gPlRfrBvMXvATy9xmyMNxVOupgw7Bm6zdZRPgBAIL/it0=
         "]], 
        LineBox[{{3.774646071915893*^9, 10867.771526999999`}, {3.7747296*^9, 
         10051.704102}, {3.774816*^9, 10311.545898}, {3.7749024*^9, 
         10374.338867}, {3.7749888*^9, 10231.744141}, {3.7750752*^9, 
         10345.810547}, {3.7751542845581656`*^9, 10867.771526999999`}}], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[{{3.808033982978294*^9, 10867.771526999999`}, {3.80808*^9, 
         10245.296875}, {3.8081664*^9, 10511.813477}, {3.8082528*^9, 
         10169.567383}, {3.8083392*^9, 10280.351563}, {3.8084256*^9, 
         10369.563477}, {3.808512*^9, 10131.516602}, {3.8085984*^9, 
         10242.347656}, {3.8086848*^9, 10363.138672}, {3.8087712*^9, 
         10400.915039}, {3.8088576*^9, 10442.170898}, {3.808944*^9, 
         10323.755859}, {3.8090304*^9, 10680.837891}, {3.8091168*^9, 
         10796.951172}, {3.809151184589271*^9, 10867.771526999999`}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQHSTdVa+Z9MaxdkLqwUeWRx2AQgW+QL6fKrODYv4R
EH9BOZBv0cbwwGoqmH9hIZC/fBLjgnc/DoP4DGeA/Imf/9kf+wOWN/gG5J+o
/C+v+hzMT1BIfuMIUmfBCDZ/glcyRL8ZN5h/oATIrwr5c3/lB7D6D/OSIeZl
GYDlFU4mQ8w7LwjmB3yGyq/aD1bfIJvyxnGfIQvD1DVg/gb3FIj6/YvA/AeF
KRD3m90D8wXmAPltq5kVGKTA5jkcg+q/ug8sX/AByL8vwdQw8fYRh32li/4I
pCLCBwCUU3+R
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
Hs9FFjVJYf0xIhjlHwhc8qevuq42COV3Az4cXO3VriX2h2YtcN0dV/liVyzn
ZQAP39OKVxSFzwufAf96t0Qt+Ijl0oZK1r8ByIr/gDddKshO6oPtqWcpWX/X
IxvkwGefXnOcl4EsOKFk/dcBWVIEHDphkMjnPo6XvB54avfc7NtVyKo+B3Xi
yv6zHS9moz5opwOfr4gtm7IS9YEfBfznmZWjz1gsF6UBZw3Ply/V+aH8jw6y
8TmJ+qr8Dcydrrn5DPVNY30I/PuRB9TBw7A+zxV4+tz3goFfsb4wAnjo6pXq
rzNI/1OBG/UqUSedwPmhKASWDGkj3dkf66t/AI972Mhi7eRlKH+Pwzrxqeye
vOhvWC5wARYUDigLX4y/L1kFPJGfIc+diPNBfgj45rze0hGnsVx1H1h1z5AS
MApZ+w348I4fcnVHZL7lEfBXk/ZJLxcvQfknHWG/F4UsCwFeqjtW/99mZGXK
EaY/PfB9NHeAPWVNox2vYDnvC3DONE/1pGyS3zxVJ25iGu9YFoHl0gnAZpf2
piTOwd9XBKUyexOF768+AJy2NTqlpi/N/7xUZh9f0/yvAa7yjVaaNcfxlXQ9
yvTRjcbfCbhn89mi8kc0/oFH2XhvRX3T7jvK+kOOzL95lNmzKGTRx6NsPkxZ
gfKbHmP6uQRZORr4coMUi6YHsb5m6TE6H74th/Q/Afji18fRHbshC3OOsfYr
Sf91wE8ej9dOfUr6b5IG/tLk1BRZGLLaEdg356bF+gRkw5I0pu/FyILdacx+
dcb5JbkOfOKcu3THSXw/eVUak/cZsqrdcdBPy60peW5YXzsS+FrvcO3h68j8
RcdZf5Yii3YCH/I5kD3xOtoD2bXjzH5cQ1a+Ae584kH9ib5obzRt0nXiQuXB
6NxjyLzh6azcgCxcAPw5/oRFyQiyf9vTmb0sxPYUl//xJWT1a+BOKQ2lmUEk
f6sTOvGauGXagh0oj2DYCWZv3pD83idY/8Qjy7ecYO+7AZ9XXQDeP2qENtyX
xr/sX3lLGv8WJ3VitYgvWLuYxn8I8Jh7V6OXDkOWzTvJ7JEr2f+NwHNWyKXG
WTjfNWdPsvXFBe0J7xWw46lDjuc1aE+EzU4x+xmK5dJBp9jvz6bxn3uKrdcn
yf6tP8XmyzWyf6eBTz8MUo7vg/oseHGK2ZN1pP+NM9h69BrrywcALzd3kV49
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
wNx51gcakv888IVfM+WBGSR/KXDxm91yUzpPJG3uAutd207ycb8p32ED/ONq
q/ol1J7aA7hzhrHcjvI1hlhg7j7R80mU7znjwvzFdDrvUwLMfQ+jbCTlu5pM
1eP524NdKd8zcCqLd8PpvJfbVNr/27+H1rt1U5k9nkTfe8gA5u5D2ZXRevds
KouPy7Bc2VCix/sLDY/RevefhNa/zPVYzpsNXFRVxEvdRvn+NcARvhPlXXoh
S09IWL7dgfLdRcD4PZRUynfXA5998Tv7/R0679bHlfan+iZRvn+GK1tvP5K9
jwKearHGMfIbfe8kzZXlT07j+6keAbv0bCQyeYWs/Q3swH2AdQwyv9c0sL9/
PVOuZFG+0xV40/ltjq5TsFwWMY3tfwmQlanAtRnh6pGNSP7CaaQvSxfQevdz
GvnbebQ+Ca2m68WKkoEpJ1Mo3+cCzN1naeNK8q+aTvtdW9eR/IeAP22z5F1e
Rd+7uA/88MFfkb05sqAOmLvfJr1A37uwnAHz36Ew5WIpfe9i0gyWT+hH5/1C
gLnzqSNj6XsXKcDxTdpHd3CmfO9d4Kd15YKDFST/F+CX7a5ot56k8TefqRfD
z2l9/qP1fsJMls8+ROt90EyKd8eGkPxJM9l+qJDGP38mjaffa9rvqQE+7NEl
W1ZE8nedpRfPUx5Rx0hJfqdZbP/GgsY/EPjPj4vS4x9J/v3A3J8/s6Xvk0hu
Ar8P2aKeU0vr/UfgTwof+c2mtN9hOluP9/22PaDxHw2M51OG0Pgvm832v0zp
vGPCbJafCqTxz5nN8gOFNP662Wy/aR2Nv8kc8rc3KUn/RcA+h0+WtZpP/p4f
8IOde7ya9iN/bzew9GSgNGgF5fuvA3Pnlavo/ru6Cpi7vz3ZnfL97dz0YnlU
Wba9Ke5HCBzcKD+67i7tdywC5u4Dta6g/Y6dwNz5TZ9qOu98Dfjbpcbasr30
vZs3brReD2qP95f4fHeIh2F1z6bvV4iGu9P8v2yF5bIF7rTf0WAe3XfaDszd
rwvqTPedLgNrLssEC05jOa/CncXDl+l7F63nkjz3U+h7F8Pm0n7Eh+V038t7
Lu2HD75O9722zKV8d888+t7PBeCL3zvw5suwXKAFDpvtIC29h+fHJS08KD/r
OQvPn8uHAKcnbsk+ZYKsmudB/tYeMzrvv9GD1gP5M7rvfc6D9lsuhNN5/1ce
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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rVl7UaLh2ysOtWbHVz/n++uqtmE2tmvD4x/B02Xz27DfUx3g1j5tw66voZK3
6f/xT4rf25ulS5XebH/lHG9hfAvTNXv5/vrHfH9L+bYsXdKqLdtfEQGm8VFs
r6gz2rL2jW433974gFtctp3p//FWtEzKrRrMrZ3RjrWHDDt5uuheO3Z8aan2
bHtlM25NaHu2vX4at2Vbe3Z8yW1uhagDj79JBx5/EE83pnZg7T3xlg6svSi7
0YG3//5wa907suMZBnRk949oakfe/9/YkbWnlIaOrHzR/OTb6xt14uMf/Tqx
8lEyuRPrbyvWd2L9cfXlTux4uu+dWPlmdO7M2qPivp3Z+JMssTO731Tazux5
017ozJ//L9wiJx9mqZ8P21+Z4MP7v7k+rLzUn/Vh52P5yI8ncezC+7++3GpV
F1Y+61Z0YfsbT/F08QeeLqsjY+WhqpuMnZ92nIzHn8MtOiHj/V+zjJd/NeVs
e41MzspPfQy3ZTHfXnJMzo6veCNn56e278ryV9e5K+tfGEd35fVfdldWf8oK
+faql11Zf0Ur7sbuJ0OHbmx/0ShuaVY3Vn8rD3Jrirqx/oS+Snf2e5a23JLh
3fn437zu7HlR7+fWGbmNFXvw+Nv04PX/UJ6umt2Dna82vwfv/zzqwcf/yvuy
/pa0pS9//sN9+fjfLF82nqTX+fLxn/u+7HmQlOnJzk/RoidrL6kH9eTt3/Se
rH9k3NGTtZfFd/n2spK9WHtZ1bQXa19qQ3qx8seg7sWuj2hbL97/u9WLx/+v
F2u/aTz8WPtSH+jH+ouWFJ4u2ezH2reK636sv6P+7SeMv2B/QufWW2ivt8X4
FWDvQesbrLuG88/i5N7C8XC+Wraht3A9cT5bdbW3yXa+VVsMtpkvNzTsI+QP
zs+K+vURyiOa/00CvwoID/4WgVauAw/46plb7Srur7kELqNPKlvlD84H67/1
Ee4v/H2LpK/Jdj5Y0qcv218xsa/Jdr5evaavyXb+Wne+r8l2vtn4Gdz/9Vf3
jwdp/ruBP/TP8rwG9wxGy3r5s3TVeH92PO0qf/Z7hjP+Jtv5bdFHbmm9fibb
+XNlD3D5yzuTPavT/HdcPxaffjl4Zf0tRz/Ppfnvk/2E8V+K/30/dnxF7f4m
eW6TJ62qr8Xrq+4KDqm2LKNvMc1/jwVr2zpske5HG5f2F8pjtPh4fzYfKzOB
beavVQ4Kk+38ubaLgs1nGqIVJtv5atFiBZuflR5VsPlF5WsFm5/UVB/A5o/1
nQaw+UpLJLj77KWdVi+l+c+F3IrDA9h8qPrFAHZ+umoB7PyM7cH7Aso/r96T
5j9HcssWBLD5a1VBAJ//fBbAztdQOZCNR4jaBrLnTzoskM1HK+fydM0+sP+R
WLvaJur/P+HHs1QIYumS1kFsfl8xBFxqyccPrZrT/HdmEMtf3Z4goT1I878P
g9j1F5cLZvkl8wpm6wFUYcEs/7Qzg3n8u4J5/PeD2flJS4eweJXNQ9h4h2Zg
iDB+S/FPD2HjPZbtIez4kjshbP5aUSKUxaf2DGX3jy44lMVrTOPp4q2hfP3D
zVC23kD1N1QYb0VrGw9k2xsCuEUpA/n9v4lbeQ3ca31J9wd6tOYXt951EL//
+w9i+0umDDKx9R95g9jvq69w635wG10G8/l//8HseLJJg3n8awfz/L/I0w1f
B7PnRSQJY9dL2juMxz8hjN0/mtU8XX8O7Fyy6trelyn+T2Emtv6lfjh7XhU9
udXx4Sw+3cpwHv/pcBav2BLO4pHVjWDpqu4RbH9tbAQ7X8OyCLa/6CRPl77j
VtYawo6vkQ9h+a0fM4SVZ5YlQ1j5JdFzK94O4fHXGMqeB53PUL7+I2oo21+8
aCj7PdkRbtWroez6a+2UbD2KoaPSxNY/RSpZfS/VKIX2O9X/h8CnL944uG4x
rf95rmTtB33VYay+tbQbJoyXYXtAMgJss95OMR/80K5fpSFfcH2b+gD4cYMZ
6qkVaP3b02HC+Bytf6s0XBj/xPaO2Bt8cM7puIqemC5Tgo2eh76uaEDtnznD
hf4Fnp9273BWHxseg/W7R18dFUP1f4URQvuc6v9WI1j9rowYYbJdT6jJGMHa
G/rdI4T2IcX/YITQnkRLyo4U2pNohXQkay+pB48U+r94fN0McNNh4+blWtDG
nSNZ+0l8byQ7X1mpUdCejF1forAMWtVsFGvvaUNHsfwyTBsl9Leo/bcdfOJo
bvcZaZT/t0fx9p8o0iSv/KpuZFQntKZJJGsv6oMihf4n2pLK0yVb+P6KG5HC
+AOt//sTyet/99Gs/WIcMJrd3+Kp3LKNo/n6L8No1h7S/hzN2z+NotjzIOof
xY4nnRzFnjflem7N5Si+/u17FC//naNZ+SrpG83WOykSo/n6N200aw/oLkSz
9XvGL9G8/eMUw663zC+GP/8J3NrcGHa+hrMxrLwWfeLpUscxzErfMez6aVRj
2PXQrxjD+huWU+BWmdXMP1qgJR+4FXXGsvpd3W0sO55u3Fi2Ps+YM5bXfyfG
svpXZh7Lro+q5ji2vVY2jqUbYsax8l20hG8vPTaO1Q/KN+N4+9c+ll0/fedY
dr6W0Txdkh3LymNFIU9Xv+TpOnEcay8bO8Sx9YXiUXG8/s+KY/ef6mAcuz7a
ojje/qmi4u2fdioWr3Q4T1fOU/H496tY/0NvVLHzt1SM5+sf28Tz+IfGs+ul
nh3P8keXH8/iMz6KZ/klLj+et/9ajuftn/DxPP9njWfHM+h4uujBePb70jIJ
LH+ULRJ4/IMSeP2fnsDqb8uOBHZ8yV2+v6LkBFY+qJtOYOenC5nA4jGqebp4
G7fs1gSe///4/lqPiex+MARyi1In8vbP5ons/JTXJ7L2pOY3t94tkc0nWxSJ
LF2SnMjKM8WGRB7/Vb69rpgfz9hwErO43yTWX5ElTWL9NdU6nq69NIn9nuEb
t8g5ibVvpX2SeP93Ik/XrEliv6c/n8Tj/5zE2tOSBpPZ8RS9JrPyVT1+Mm//
ruI2npnM8//jZF7+1ZvC13/3mMLzP24Kj3/5FHZ+olNT2PlJ30/h7d/aySz/
NF2Tef9/bDKPf2kyj/94Ml//beLbqx2msuPrukxlxzdGT+X5v3gqu/6yo3x/
1Wuerq2ewupbQydu0egU3v9dmML7/4e5NS9SWH2tr5bK+suW9qm8/zsylW2v
WMC3VxfwdN2zVJZfxspp7HqK26bx+39YGr//56ax42n38XTDkzS+/qOiml0/
aWtu5RA1216Tqeb93z1qvv7/oZr3/8pNY+WjwmsaX/8eNo2vf585jR3fuGsa
ux7i+9N4+Vd6Ou//NZ/OttcO5OmG6dN5/bdjOvs96Z3p7PyVJdLZ86jxTOf3
f3A6e34sadySrXx/xc103v//C54wZETO5sc4fqJrPIONrxgDZvD3H1K4ZZtm
sPal6hq4iffLiaecafzr1wx2PxhcZ7LjixQz2fiOdMpMdnxlHt9ec2UmO77+
B0+3uMxi7xNI/Gex8SHFpFlse/Vanq67OIv9vvErTxdLMtj+st4ZPP4JGXz8
b3UGi89wLoONz4k+83Rp/UxmZc9M9jxr4jP5+NdKvr3ldCZf/2Th2yvqzmbr
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
qh/efyAMrR4K7hLQfVZwIc1/zwZ3fNJ/fk4sphvz+f7ix+Dnq3e+HziW6r/y
30zydvY3Zg78Q+PfLcERmxYuvfCAxr/DwQ97xvofaoY2zPomzK/Q/Ofub8L7
bmjpg2/CfAxaWea7MP+D1rT4LqynovnPQeBOkDs1+1D86WA3HODC8XzJTrC1
dVT3K43/3wUfyN/VqVd/3F5d8odJvuqURDc+iuJv+oOtnzCGgG+MbZBx/DfV
f9N+sPF42TbwxuXvJwYMRatuWbe3Vgf3cH/tP/A3+dIy9mlog0exSb7i6sEH
X69T/geBndZdq3/qCrV/U4tZfazcDG57umjd4O6YrrleLMwHUf3/G7yorf7S
JAva4vbTJF+Z6HV5wi6q/weA33d7PP7rCKr/k38K81dU/2/4yds/V8ELr5Xw
u3uA2j/FP4XvPVD7p9Ev1t6Q9QOHi+pu6POP2j9Jv4T5Prr/14E9f+0s//cA
3f+XfgnzYWjRd3DNPgunumrQUuffwvwi5X8fsHU04raK8n/ibzbfol/zW+gP
U/6f/y2Un3T/f/nN7g9Fgz8muY95Zsn96ZT/vf6w/XXjwRk1SjVaIUMbV/1h
8+3is2CPTlGJj8Jo/ucj+MY6n/P1ven+r/cXnodDvSfduYf3m7YH+F7yxx7J
hWhDHPiZxPlCrb1o0Yq/wno1uv9PgVMqODgOEVP878F/q+lC3q3A7TW1/wnr
SXF+S98VfC5sZ+rYbLRl7D+2fkOS808oz2n9y3Fw8ui9wX4jaf7f9I+th9E5
iMz/r5el9W9dwDbrPcQxYFrvivNtssVg6j/T+o+jYOqP0/qP12BaT0rxVy9h
tl1vIuoM/nj4zdL6z9DS0eAt2nVvQzuglQvBNP+P1hwGjxpgnVGk+F+AA8tN
7rysBsVfraSZzf91AIfc+Nr9zkyKfySY6kea/1sAxumgAZT/BeC1uTeaGt7T
+pdnYJv5PnGVUmY5dpdyMV3WFkx/PwOtGga2yT/tXHDBYPfmZz0p/n3gtkHz
PrddS/lvBJfb9+T+7Gxa/1GxtNl2vYayNZjWM1P+DwHPsQ5HBaP1meA27y/H
LYtCW/aAfRb9+dxaSfn/CEzz/VT+lStjlj8OsvZYKH4v8Aj3wtKbfGj+Mww8
4FE4ZDHFPxNsu/5JB5421RogxX+/DPs9VemyZjl9Lpju/+ZgGh+n+AeCpz87
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
BA==
         "]]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6199008*^9, 3.8333952*^9}, {0, 10867.771526999999`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"BTC\"", "\"ETH\"", "\"DOGE\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.833438064573399*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"ad48b90c-8116-406d-9540-c75902b4fe09"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Poglavje - Podrobna analiza", "Chapter",
 CellChangeTimes->{{3.833434054514179*^9, 
  3.8334340681793647`*^9}},ExpressionUUID->"26a257bf-c3cb-4f1c-b091-\
b117e3158713"],

Cell["\<\
V tem poglavju bom bolj natan\[CHacek]no izkoristil orodje Mathematice za \
podrobno analizo\
\>", "Text",
 CellChangeTimes->{{3.833434106741639*^9, 
  3.8334341539983587`*^9}},ExpressionUUID->"74152d7f-16b2-4d28-8e42-\
15d54cde6cce"],

Cell[CellGroupData[{

Cell["\<\
1. Pridobitev in predstavitev osnovnih podatkov v obliki tabele\
\>", "Section",
 CellChangeTimes->{{3.8334342410745735`*^9, 3.8334342523300176`*^9}, {
  3.833437565639497*^9, 3.8334375844106407`*^9}, {3.833438103838254*^9, 
  3.833438113294267*^9}},ExpressionUUID->"da994b3a-830c-44cd-9903-\
a9c369757f03"],

Cell[CellGroupData[{

Cell["Pridobimo podatke kriptovalut iz strani Yahoo! Finance", "Subsubsection",
 CellChangeTimes->{{3.833434926755823*^9, 
  3.833434965785099*^9}},ExpressionUUID->"6d292788-aec9-4c61-aa06-\
0c2505bb0dbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"lsData", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://finance.yahoo.com/cryptocurrencies\>\"", ",", 
      "\"\<Data\>\""}], "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8334342637438555`*^9, 3.833434263749875*^9}, 
   3.8334345799354677`*^9, {3.8334346100833116`*^9, 3.8334346277133436`*^9}, 
   3.8334346650135717`*^9, 3.8334347914965286`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"9bd39810-3af3-428d-a10f-f9af9dc5269b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.3366704`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.833434268274724*^9, 3.8334343653630204`*^9, 3.833434489438904*^9, {
   3.833434583062415*^9, 3.8334346670725813`*^9}, {3.833434799200768*^9, 
   3.833434824005926*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"491fe9dd-8d67-4b58-9431-39d6dd218dfd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dolo\[CHacek]imo, kje se podatki nahajajo", "Subsubsection",
 CellChangeTimes->{{3.833435012217163*^9, 
  3.833435029782383*^9}},ExpressionUUID->"24fc971e-04ce-4050-8714-\
54468954f41c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"First", "@", 
    RowBox[{"Position", "[", 
     RowBox[{"lsData", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Symbol\>\"", ",", "\"\<Name\>\"", ",", "\"\<Price (Intraday)\>\"",
         ",", "\"\<Change\>\"", ",", "\"\<% Change\>\"", ",", "___"}], 
       "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"dsCryptoCurrenciesColumnNames", "=", 
  RowBox[{"lsData", "[", 
   RowBox[{"[", 
    RowBox[{"Sequence", "@@", "pos"}], "]"}], "]"}]}], "\n", 
 RowBox[{"Length", "[", "dsCryptoCurrenciesColumnNames", "]"}]}], "Input",
 CellChangeTimes->{{3.8334348458713484`*^9, 3.8334348458783665`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"34653be3-ce06-46a0-a753-6f062d34a398"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Symbol\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Price (Intraday)\"\>", ",", "\<\"Change\"\>", 
   ",", "\<\"% Change\"\>", ",", "\<\"Market Cap\"\>", 
   ",", "\<\"Volume in Currency (Since 0:00 UTC)\"\>", 
   ",", "\<\"Volume in Currency (24Hr)\"\>", 
   ",", "\<\"Total Volume All Currencies (24Hr)\"\>", 
   ",", "\<\"Circulating Supply\"\>", ",", "\<\"52 Week Range\"\>", 
   ",", "\<\"1 Day Chart\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8334348478567677`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"5ae7478c-a273-43f9-bce0-f3a869f8c17b"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.8334348478616667`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"acd2d9e3-fcc7-46ca-bd60-fbd53abc49dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pridobitev podatkov", "Subsubsection",
 CellChangeTimes->{{3.8334350972630033`*^9, 3.833435108120387*^9}, 
   3.8334434259519124`*^9},ExpressionUUID->"2cfc5288-95d1-46cc-b091-\
a4272ec81e7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsCryptoCurrencies", "=", 
   RowBox[{"lsData", "[", 
    RowBox[{"[", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"Most", "[", "pos", "]"}], ",", "2"}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "dsCryptoCurrencies", "]"}]}], "Input",
 CellChangeTimes->{{3.833434870896784*^9, 3.833434870904827*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"9c5ba007-6b3f-475d-a07d-984174d2f1f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.833434871898656*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c2510ee5-ed0c-44e9-b90d-feb500fbcc94"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ustvarimo obse\[ZHacek]no tabelo kriptovalut ter raznoraznih informacij o \
le-teh\
\>", "Subsubsection",
 CellChangeTimes->{{3.833435116169159*^9, 3.833435161837804*^9}, {
  3.833435236240055*^9, 3.83343525591914*^9}, {3.8334375255460663`*^9, 
  3.833437556149581*^9}},ExpressionUUID->"b2c51d3c-959a-4c90-8e99-\
7c1d35d252c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsCryptoCurrencies", "=", 
  RowBox[{
   RowBox[{"Dataset", "[", "dsCryptoCurrencies", "]"}], "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"dsCryptoCurrenciesColumnNames", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "3"}]}], "]"}], "]"}], ",", "#"}], "]"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.83343488257728*^9, 3.8334348846121798`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d4266f9b-cd0e-4dd3-a356-6fd0744e71cd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Symbol" -> "BTC-USD", "Name" -> "Bitcoin USD", "Price (Intraday)" -> 
        "34,016.28", "Change" -> "+2,401.55", "% Change" -> "+7.60%", 
        "Market Cap" -> "637.503B", "Volume in Currency (Since 0:00 UTC)" -> 
        "61.863B", "Volume in Currency (24Hr)" -> "61.863B", 
        "Total Volume All Currencies (24Hr)" -> "61.863B", 
        "Circulating Supply" -> "18.741M"], 
       Association[
       "Symbol" -> "ETH-USD", "Name" -> "Ethereum USD", "Price (Intraday)" -> 
        "1,995.20", "Change" -> 113.23, "% Change" -> "+6.02%", "Market Cap" -> 
        "232.255B", "Volume in Currency (Since 0:00 UTC)" -> "36.254B", 
        "Volume in Currency (24Hr)" -> "36.254B", 
        "Total Volume All Currencies (24Hr)" -> "36.254B", 
        "Circulating Supply" -> "116.407M"], 
       Association[
       "Symbol" -> "USDT-USD", "Name" -> "Tether USD", "Price (Intraday)" -> 
        1.0008, "Change" -> 0.0006, "% Change" -> "+0.06%", "Market Cap" -> 
        "62.747B", "Volume in Currency (Since 0:00 UTC)" -> "104.668B", 
        "Volume in Currency (24Hr)" -> "104.668B", 
        "Total Volume All Currencies (24Hr)" -> "104.668B", 
        "Circulating Supply" -> "62.7B"], 
       Association[
       "Symbol" -> "BNB-USD", "Name" -> "BinanceCoin USD", "Price (Intraday)" -> 
        288.42, "Change" -> 29.08, "% Change" -> "+11.21%", "Market Cap" -> 
        "44.253B", "Volume in Currency (Since 0:00 UTC)" -> "4.566B", 
        "Volume in Currency (24Hr)" -> "4.566B", 
        "Total Volume All Currencies (24Hr)" -> "4.566B", 
        "Circulating Supply" -> "153.433M"], 
       Association[
       "Symbol" -> "ADA-USD", "Name" -> "Cardano USD", "Price (Intraday)" -> 
        1.2489, "Change" -> 0.1463, "% Change" -> "+13.27%", "Market Cap" -> 
        "39.898B", "Volume in Currency (Since 0:00 UTC)" -> "6.139B", 
        "Volume in Currency (24Hr)" -> "6.139B", 
        "Total Volume All Currencies (24Hr)" -> "6.139B", 
        "Circulating Supply" -> "31.946B"], 
       Association[
       "Symbol" -> "XRP-USD", "Name" -> "XRP USD", "Price (Intraday)" -> 
        0.637458, "Change" -> 0.054819, "% Change" -> "+9.41%", "Market Cap" -> 
        "29.479B", "Volume in Currency (Since 0:00 UTC)" -> "5.4B", 
        "Volume in Currency (24Hr)" -> "5.4B", 
        "Total Volume All Currencies (24Hr)" -> "5.4B", "Circulating Supply" -> 
        "46.245B"], 
       Association[
       "Symbol" -> "DOGE-USD", "Name" -> "Dogecoin USD", "Price (Intraday)" -> 
        0.216834, "Change" -> 0.029342, "% Change" -> "+15.65%", "Market Cap" -> 
        "28.219B", "Volume in Currency (Since 0:00 UTC)" -> "5.412B", 
        "Volume in Currency (24Hr)" -> "5.412B", 
        "Total Volume All Currencies (24Hr)" -> "5.412B", 
        "Circulating Supply" -> "130.143B"], 
       Association[
       "Symbol" -> "USDC-USD", "Name" -> "USDCoin USD", "Price (Intraday)" -> 
        1.0005, "Change" -> 0., "% Change" -> "+0.00%", "Market Cap" -> 
        "25.225B", "Volume in Currency (Since 0:00 UTC)" -> "3.036B", 
        "Volume in Currency (24Hr)" -> "3.036B", 
        "Total Volume All Currencies (24Hr)" -> "3.036B", 
        "Circulating Supply" -> "25.212B"], 
       Association[
       "Symbol" -> "DOT1-USD", "Name" -> "Polkadot USD", "Price (Intraday)" -> 
        16.03, "Change" -> 1.08, "% Change" -> "+7.21%", "Market Cap" -> 
        "15.298B", "Volume in Currency (Since 0:00 UTC)" -> "3.115B", 
        "Volume in Currency (24Hr)" -> "3.115B", 
        "Total Volume All Currencies (24Hr)" -> "3.115B", 
        "Circulating Supply" -> "954.346M"], 
       Association[
       "Symbol" -> "HEX-USD", "Name" -> "HEX USD", "Price (Intraday)" -> 
        0.082466, "Change" -> -0.001486, "% Change" -> "-1.77%", "Market Cap" -> 
        "14.3B", "Volume in Currency (Since 0:00 UTC)" -> "25.868M", 
        "Volume in Currency (24Hr)" -> "25.868M", 
        "Total Volume All Currencies (24Hr)" -> "25.868M", 
        "Circulating Supply" -> "173.411B"], 
       Association[
       "Symbol" -> "UNI3-USD", "Name" -> "Uniswap USD", "Price (Intraday)" -> 
        17.8, "Change" -> 2.61, "% Change" -> "+17.15%", "Market Cap" -> 
        "10.239B", "Volume in Currency (Since 0:00 UTC)" -> "717.633M", 
        "Volume in Currency (24Hr)" -> "717.633M", 
        "Total Volume All Currencies (24Hr)" -> "717.633M", 
        "Circulating Supply" -> "575.203M"], 
       Association[
       "Symbol" -> "BCH-USD", "Name" -> "BitcoinCash USD", "Price (Intraday)" -> 
        471.89, "Change" -> 45.12, "% Change" -> "+10.57%", "Market Cap" -> 
        "8.858B", "Volume in Currency (Since 0:00 UTC)" -> "2.687B", 
        "Volume in Currency (24Hr)" -> "2.687B", 
        "Total Volume All Currencies (24Hr)" -> "2.687B", 
        "Circulating Supply" -> "18.771M"], 
       Association[
       "Symbol" -> "LTC-USD", "Name" -> "Litecoin USD", "Price (Intraday)" -> 
        129.26, "Change" -> 11.13, "% Change" -> "+9.42%", "Market Cap" -> 
        "8.629B", "Volume in Currency (Since 0:00 UTC)" -> "3.766B", 
        "Volume in Currency (24Hr)" -> "3.766B", 
        "Total Volume All Currencies (24Hr)" -> "3.766B", 
        "Circulating Supply" -> "66.752M"], 
       Association[
       "Symbol" -> "SOL1-USD", "Name" -> "Solana USD", "Price (Intraday)" -> 
        30.64, "Change" -> 6.98, "% Change" -> "+29.48%", "Market Cap" -> 
        "8.354B", "Volume in Currency (Since 0:00 UTC)" -> "1.491B", 
        "Volume in Currency (24Hr)" -> "1.491B", 
        "Total Volume All Currencies (24Hr)" -> "1.491B", 
        "Circulating Supply" -> "272.637M"], 
       Association[
       "Symbol" -> "LINK-USD", "Name" -> "Chainlink USD", "Price (Intraday)" -> 
        18.6, "Change" -> 2.05, "% Change" -> "+12.36%", "Market Cap" -> 
        "8.071B", "Volume in Currency (Since 0:00 UTC)" -> "2.196B", 
        "Volume in Currency (24Hr)" -> "2.196B", 
        "Total Volume All Currencies (24Hr)" -> "2.196B", 
        "Circulating Supply" -> "434.01M"], 
       Association[
       "Symbol" -> "MATIC-USD", "Name" -> "MaticNetwork USD", 
        "Price (Intraday)" -> 1.185, "Change" -> 0.1171, "% Change" -> 
        "+10.96%", "Market Cap" -> "7.457B", 
        "Volume in Currency (Since 0:00 UTC)" -> "2.599B", 
        "Volume in Currency (24Hr)" -> "2.599B", 
        "Total Volume All Currencies (24Hr)" -> "2.599B", 
        "Circulating Supply" -> "6.293B"], 
       Association[
       "Symbol" -> "THETA-USD", "Name" -> "THETA USD", "Price (Intraday)" -> 
        6.9303, "Change" -> 0.6388, "% Change" -> "+10.15%", "Market Cap" -> 
        "6.93B", "Volume in Currency (Since 0:00 UTC)" -> "666.097M", 
        "Volume in Currency (24Hr)" -> "666.097M", 
        "Total Volume All Currencies (24Hr)" -> "666.097M", 
        "Circulating Supply" -> "1B"], 
       Association[
       "Symbol" -> "XLM-USD", "Name" -> "Stellar USD", "Price (Intraday)" -> 
        0.260267, "Change" -> 0.033395, "% Change" -> "+14.72%", "Market Cap" -> 
        "6.035B", "Volume in Currency (Since 0:00 UTC)" -> "931.469M", 
        "Volume in Currency (24Hr)" -> "931.469M", 
        "Total Volume All Currencies (24Hr)" -> "931.469M", 
        "Circulating Supply" -> "23.189B"], 
       Association[
       "Symbol" -> "VET-USD", "Name" -> "VeChain USD", "Price (Intraday)" -> 
        0.077823, "Change" -> 0.008078, "% Change" -> "+11.58%", "Market Cap" -> 
        "5.005B", "Volume in Currency (Since 0:00 UTC)" -> "1.218B", 
        "Volume in Currency (24Hr)" -> "1.218B", 
        "Total Volume All Currencies (24Hr)" -> "1.218B", 
        "Circulating Supply" -> "64.316B"], 
       Association[
       "Symbol" -> "ICP1-USD", "Name" -> "InternetComputer USD", 
        "Price (Intraday)" -> 36.87, "Change" -> 1.1, "% Change" -> "+3.07%", 
        "Market Cap" -> "4.755B", "Volume in Currency (Since 0:00 UTC)" -> 
        "284.966M", "Volume in Currency (24Hr)" -> "284.966M", 
        "Total Volume All Currencies (24Hr)" -> "284.966M", 
        "Circulating Supply" -> "128.986M"], 
       Association[
       "Symbol" -> "ETC-USD", "Name" -> "EthereumClassic USD", 
        "Price (Intraday)" -> 39.46, "Change" -> 2.2, "% Change" -> "+5.90%", 
        "Market Cap" -> "4.59B", "Volume in Currency (Since 0:00 UTC)" -> 
        "2.799B", "Volume in Currency (24Hr)" -> "2.799B", 
        "Total Volume All Currencies (24Hr)" -> "2.799B", 
        "Circulating Supply" -> "116.313M"], 
       Association[
       "Symbol" -> "FIL-USD", "Name" -> "FilecoinFutures USD", 
        "Price (Intraday)" -> 53.89, "Change" -> 6.2, "% Change" -> "+12.99%",
         "Market Cap" -> "4.372B", "Volume in Currency (Since 0:00 UTC)" -> 
        "1.145B", "Volume in Currency (24Hr)" -> "1.145B", 
        "Total Volume All Currencies (24Hr)" -> "1.145B", 
        "Circulating Supply" -> "81.131M"], 
       Association[
       "Symbol" -> "TRX-USD", "Name" -> "TRON USD", "Price (Intraday)" -> 
        0.055459, "Change" -> 0.003972, "% Change" -> "+7.71%", "Market Cap" -> 
        "3.974B", "Volume in Currency (Since 0:00 UTC)" -> "1.562B", 
        "Volume in Currency (24Hr)" -> "1.562B", 
        "Total Volume All Currencies (24Hr)" -> "1.562B", 
        "Circulating Supply" -> "71.66B"], 
       Association[
       "Symbol" -> "XMR-USD", "Name" -> "Monero USD", "Price (Intraday)" -> 
        215.68, "Change" -> 10.19, "% Change" -> "+4.96%", "Market Cap" -> 
        "3.869B", "Volume in Currency (Since 0:00 UTC)" -> "408.346M", 
        "Volume in Currency (24Hr)" -> "408.346M", 
        "Total Volume All Currencies (24Hr)" -> "408.346M", 
        "Circulating Supply" -> "17.938M"], 
       Association[
       "Symbol" -> "EOS-USD", "Name" -> "EOS USD", "Price (Intraday)" -> 
        3.6628, "Change" -> 0.2614, "% Change" -> "+7.69%", "Market Cap" -> 
        "3.496B", "Volume in Currency (Since 0:00 UTC)" -> "1.85B", 
        "Volume in Currency (24Hr)" -> "1.85B", 
        "Total Volume All Currencies (24Hr)" -> "1.85B", "Circulating Supply" -> 
        "954.494M"]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Name"} -> 
        1, {All, "Price (Intraday)"} -> 1, {All, "Change"} -> 
        1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[86.4], "Name" -> 
            TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
            "Price (Intraday)" -> TypeSystem`PackageScope`UnknownShape[False],
             "Change" -> TypeSystem`PackageScope`UnknownShape[False], 
            "% Change" -> 
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 25], "Meta" -> 
     Association["ID" -> 106004323751462], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Name"} -> 
        1, {All, "Price (Intraday)"} -> 1, {All, "Change"} -> 
        1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[86.4], "Name" -> 
            TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
            "Price (Intraday)" -> TypeSystem`PackageScope`UnknownShape[False],
             "Change" -> TypeSystem`PackageScope`UnknownShape[False], 
            "% Change" -> 
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 25], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     25, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Symbol"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Name"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Price (Intraday)", 
                  Style[
                  "Price (Intraday)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Price (Intraday)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Price (Intraday)"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Change", 
                  Style[
                  "Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Change"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["% Change", 
                  Style[
                  "% Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "% Change"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "% Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Market Cap", 
                  Style[
                  "Market Cap", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Market Cap"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Market Cap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (Since 0:00 UTC)", 
                  Style[
                  "Volume in Currency (Since 0:00 UTC)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Volume in Currency (Since 0:00 UTC)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (Since 0:00 UTC)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (24Hr)", 
                  Style[
                  "Volume in Currency (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Volume in Currency (24Hr)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (24Hr)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Total Volume All Currencies (24Hr)", 
                  Style[
                  "Total Volume All Currencies (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Total Volume All Currencies (24Hr)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Total Volume All Currencies (24Hr)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Circulating Supply", 
                  Style[
                  "Circulating Supply", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Circulating Supply"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Circulating Supply"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bitcoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["34,016.28", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+2,401.55", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+7.60%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["637.503B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["61.863B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["61.863B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["61.863B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["18.741M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ethereum USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1,995.20", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["113.23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+6.02%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["232.255B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["36.254B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["36.254B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["36.254B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["116.407M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDT-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Tether USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.06%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["62.747B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["104.668B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["104.668B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["104.668B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["62.7B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNB-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BinanceCoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["288.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.21%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["44.253B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.566B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.566B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.566B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["153.433M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ADA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cardano USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1463"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+13.27%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["39.898B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.139B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.139B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.139B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["31.946B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XRP-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["XRP USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.637458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.054819"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+9.41%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["29.479B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.4B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.4B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.4B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["46.245B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOGE-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Dogecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.216834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.029342"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+15.65%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["28.219B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.412B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.412B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.412B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["130.143B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USDCoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0005"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.00%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.225B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.036B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.036B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.036B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.212B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOT1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Polkadot USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+7.21%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["15.298B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.115B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.115B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.115B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["954.346M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["HEX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HEX USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.082466"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.001486"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-1.77%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["14.3B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.868M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.868M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.868M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["173.411B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["UNI3-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Uniswap USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+17.15%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10.239B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["717.633M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["717.633M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["717.633M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["575.203M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BCH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BitcoinCash USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["471.89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["45.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+10.57%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.858B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.687B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.687B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.687B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["18.771M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Litecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["129.26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+9.42%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.629B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.766B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.766B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.766B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["66.752M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SOL1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Solana USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+29.48%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.354B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.491B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.491B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.491B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["272.637M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LINK-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Chainlink USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.05"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+12.36%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.071B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.196B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.196B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.196B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["434.01M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MATIC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MaticNetwork USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.185"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+10.96%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["7.457B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.599B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.599B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.599B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.293B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["THETA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["THETA USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.9303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6388"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+10.15%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.93B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["666.097M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["666.097M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["666.097M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XLM-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Stellar USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.260267"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.033395"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+14.72%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.035B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["931.469M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["931.469M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["931.469M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["23.189B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["VET-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VeChain USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.077823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.008078"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.58%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.005B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.218B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.218B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.218B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["64.316B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ICP1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["InternetComputer USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36.87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+3.07%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.755B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["284.966M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["284.966M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["284.966M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["128.986M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1341., {277., 283.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1341., {277., 283.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833434885858554*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"794b5386-cada-424d-96a7-d401fbe99371"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Podrobna analiza", "Section",
 CellChangeTimes->{{3.833437594965787*^9, 3.8334376046470366`*^9}, {
  3.833438119252494*^9, 3.833438124282838*^9}, {3.8334402715775175`*^9, 
  3.833440273289858*^9}},ExpressionUUID->"fd2b1262-b8be-43e6-b597-\
62326dcf5411"],

Cell[CellGroupData[{

Cell["Pridobitev/pretvorba imen", "Subsubsection",
 CellChangeTimes->{{3.8334382158719563`*^9, 3.833438232743887*^9}, {
  3.8334384054879246`*^9, 
  3.8334384127195406`*^9}},ExpressionUUID->"3e26e95c-34aa-42cf-a149-\
8cb0f3afb3a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<CryptocurrencyNames\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.833438141517807*^9, 3.8334381633591185`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"eda96cd7-9c6b-4a20-90bf-f626aaa08ffd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC\"\>", "\[Rule]", "\<\"Bitcoin\"\>"}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", "\<\"Ethereum\"\>"}], ",", 
   RowBox[{"\<\"USDT\"\>", "\[Rule]", "\<\"Tether\"\>"}], ",", 
   RowBox[{"\<\"BNB\"\>", "\[Rule]", "\<\"BinanceCoin\"\>"}], ",", 
   RowBox[{"\<\"ADA\"\>", "\[Rule]", "\<\"Cardano\"\>"}], ",", 
   RowBox[{"\<\"XRP\"\>", "\[Rule]", "\<\"XRP\"\>"}], ",", 
   RowBox[{"\<\"USDC\"\>", "\[Rule]", "\<\"Coin\"\>"}], ",", 
   RowBox[{"\<\"DOGE\"\>", "\[Rule]", "\<\"Dogecoin\"\>"}], ",", 
   RowBox[{"\<\"DOT1\"\>", "\[Rule]", "\<\"Polkadot\"\>"}], ",", 
   RowBox[{"\<\"HEX\"\>", "\[Rule]", "\<\"HEX\"\>"}], ",", 
   RowBox[{"\<\"UNI3\"\>", "\[Rule]", "\<\"Uniswap\"\>"}], ",", 
   RowBox[{"\<\"BCH\"\>", "\[Rule]", "\<\"BitcoinCash\"\>"}], ",", 
   RowBox[{"\<\"LTC\"\>", "\[Rule]", "\<\"Litecoin\"\>"}], ",", 
   RowBox[{"\<\"LINK\"\>", "\[Rule]", "\<\"Chainlink\"\>"}], ",", 
   RowBox[{"\<\"SOL1\"\>", "\[Rule]", "\<\"Solana\"\>"}], ",", 
   RowBox[{"\<\"MATIC\"\>", "\[Rule]", "\<\"MaticNetwork\"\>"}], ",", 
   RowBox[{"\<\"THETA\"\>", "\[Rule]", "\<\"THETA\"\>"}], ",", 
   RowBox[{"\<\"XLM\"\>", "\[Rule]", "\<\"Stellar\"\>"}], ",", 
   RowBox[{"\<\"VET\"\>", "\[Rule]", "\<\"VeChain\"\>"}], ",", 
   RowBox[{"\<\"ICP1\"\>", "\[Rule]", "\<\"InternetComputer\"\>"}], ",", 
   RowBox[{"\<\"ETC\"\>", "\[Rule]", "\<\"EthereumClassic\"\>"}], ",", 
   RowBox[{"\<\"TRX\"\>", "\[Rule]", "\<\"TRON\"\>"}], ",", 
   RowBox[{"\<\"FIL\"\>", "\[Rule]", "\<\"FilecoinFutures\"\>"}], ",", 
   RowBox[{"\<\"XMR\"\>", "\[Rule]", "\<\"Monero\"\>"}], ",", 
   RowBox[{"\<\"EOS\"\>", "\[Rule]", "\<\"EOS\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.83343818718379*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"8ed5b6cd-69b2-4a89-9b7d-4f010ecdb96c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Predstavitev Bitcoin in Ethereuma iz \[OpenCurlyDoubleQuote]Financial Data\
\[CloseCurlyDoubleQuote] - vrednost v dolarjih tekom leta 2021\
\>", "Subsubsection",
 CellChangeTimes->{{3.833439668193019*^9, 
  3.8334397328887763`*^9}},ExpressionUUID->"80918b46-bd58-4399-bbb4-\
cb3b0f278464"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"#", ",", "\"\<Jan 1 2021\>\""}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"1", "/", "4"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"\"\<BTC\>\"", ",", "\"\<ETH\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8334396900307693`*^9, 3.833439690038742*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"b254d67d-9993-4cac-a50d-4ca1fcfd649d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw11gtQFVUcBvDVwTET6xoTpRSs2lQ+Rq+mQ/igo6mTj+qmWDo6sTKJIgk7
PoIQZMEXAuINQUymOhVlWeAtH6mFrkxqqek109FMWHko5Os6mo5oEvf7Tsww
+JvvnLPn/z/r7vZKSJ0yp6OmaVvaf4N/23+8Ty26Mjr4jz4b/hLtf+zxtGXV
1wUdMGmR38EJWi9XvpBRG7TnAG0PGYDcuq7WOzXkQtC+HouZF3zcELTzMi0i
6mBXCq0VXYXFRlruOVsftFmj8n6hWF9eofXNE7C+P3wJ8/WdYG00bTROxHru
ZNr5Mhe5UarGG09jfe8+WjakILdbaKssDQ6EvUc/EYbxeiytXQpF7plH2+G1
6IdVTBueX9A/30+0PLAQdi7STuEg2NU9jf04uBb1iRG0DE1Ebs6hrczS86h/
nfKcQuT+3Wp+6Uusv1F5+x6s534knf1K3IHxxou0czsHuTeBFlmdWX8hbW0I
Qb2BnWr+lJ6s/4LKU5NgT9f3mVeXod/WMNq4XYzcF6/yvi2NqH8NLS8dvYj6
t9P2Cw+aUH8tLfxDL6H+hzI4viYOlkMy1HlfxHz/LOXqGuTaato4tw12f6fm
x6TBxjnaSR/Ygvo7LeX+Bs+G7UHKRtXfqH8GbXxdexn1r6DtfWFXUH8V7WxK
x3zrjPK049ifr2Mm58ePbUb9A2gtcQLseovWTwjsT+Qoj7mH+eY3tNUg0B95
irabdmC8v+3/fC7r75fFfHxf7McdR2vFkvUvo+W738Ler2h9qhe2f6eFcRb7
C9xX4w+fgfXnljHXpqM/njdoO68S/bGW0jJyN+z7gjb+iUK/nOO0PmLaVdTf
qsZnR8PimWz2L9WD+eZrtJYSA8t0Wq7oAmu/0SLSj/Xdd7JV/W2w0cuiQ1ox
3juJNkpt2F5Ca9/zeoFPaCcqged9mNbDJ6Ofnlu0vDkB9VuRObx+XDLrfSVH
PS9Wwc5C2hiWgP24PqJt8ygsDtFy5C3YvEFrIWdhGZHLvCoU/fGPo7W1dcg1
k3a6lbH+TSrfFY7xxs8qT8pE7r2m3FjC+p9czv00DEceGEMbzYtgfYHypulY
z1OmvPd52NpPi8njYd9lWu/deA31P76C15v/6HXUL2itdzlyMZ+2+o+EzRLl
LSexntxL278+hv36m2nZrM4/bCXHbx8Ku0fRckk0bMyljXmZOC/vB7TWPQn3
s/2j8o443u9NtOiziPe7axXnVxzk+Q+nnQP7ef7v0PrMSthXRIvTAYx3dimX
l2M/ottqXi+KNqNpvXIbz3v2avU+moX1/AW0faIHz3unys+fZr0O7cSavN8f
zlPvhxqe99A89XwMhe23acPpwvPOo+15Gbzft9Gyws//3+fV+Pn78HywOq/h
ejePoD++wbQeORa5M5O24yr4fF+l8pmH8PwXPtqomoTnmfmncsRGvD9kSD77
9UMU7B+Yr+7XI3y/zaD1zNh61L+ctnt+zvdbJW39G4/c7lDA/MOTcKA/LUdF
YH39TVq/9xnf5xbt3Kjm98wWNb9gJb9n/lDzk+/AzgPlmK2wq28h+9OUi+uJ
qbTRuQ02s2h7/WBYblau4/X9J2iruZL13ld54gLY/exa7jdmOOv10EbXVuTe
DNrKucz3eQWtJT3g98wxWra9Dut31Xpp4diPp08RXVyC/liv0tbUrbAvjRal
TRjvfErLoqWw6yituY9hfXFbjXfSYVNfx/V73OX33ERa7K/k98xi2nHav5f+
A9uge8E=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.818448*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"BTC\"", TraditionalForm], 
     PlotRange -> {{3.818448*^9, 3.8333088*^9}, {0, 63611.33984375}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt1AtQVFUYB/ArapmYLhJOptZVFEhLVwszXx1rpNLR2bXMTNMr406aqZuK
D0w9JKygsqz4Ih9xURDBwNWMNBm4mIxloZtj08PMa+YDo9ryVQ1q7v9/mGF2
fvN953z3f87d7Z46d5wnStO0snv/kc97f4Gu85tG3Pu0PD/5ROQzhTarxmZH
HPbSRnmP3Ij1rbQ2pyIvYlc9LTq1XBex/FPVux3JjzjYeQEs3W03RGy/QFtP
VqDumEPr3fquj1gU0GZ8Kvq9R9T6zwdjntmk6jHpmBfqlAbbSacDEWsjaNmg
Yz/nLFpf3xvzjI205t6BeqCWttwDYauRNt+Ng8OxC+mivzci/3DaupaO53PN
oGVzMfaX+ar/4hisD1Yrl5TD9iXlm72wnyNmEV14CRZDaK3+JPN7VH1UDtab
eaqedBD10CHa9iRjvfYrbekzYWf7xXTWBPQbg2gxLB8OpNL60i6bkX8tbU6c
9QHyV9HGD1tg/TxtJ2/egvzRS7j/xk2wTKaNjGkFyD+V1lL2om7nKM8euhX5
D9By8uOw+JnWW92AvW3S2X+jfhvyD6CtsiQ4NJkW/kGwtkq57zzYuY+Wd6Kx
n3FG1aPnoh5ovZT7j7+9Hfn7KZ8v+RD5J9Iy47lC5M+kzdq5qLsqab1jKvN/
T9sX83Gewaj32N+5CudnP0Fb+xtxPo4JtN7BQr/IoO12KbB3D631aI37NL9V
9YdOoR66S4t/SmGt9zLOW7IQ85yv0sbpIZhnLKflzC/QH9it6keGo986RVv1
3ZEn3EyLq71wfnrictZffwfn53LT5oUzsFxKi6z2cLBE1ZvOYb19Uq1v9yXO
2/Gfqt8XB4ueK3geMfm8/7G0dbcL73+xqtddQ11rUPVLubzvW7Qdfws2ukv2
xzWiPzCa1s5Ww1aa8oxG5i1U/UeDsH6ctt1xOB/XddroEMX7fjSDz3/uMBx8
ibZLD/F9n0cbl3fheRzbad1TC4tjav15Dfm9f9HCrMT7ZXZ5n+uvdjRx3yNp
GZUIa15Vb3bDzi2qHpMHG0eVH/HBgT9ofX883mfr4ZVcn9QH9fDztJUwANZn
0+JELezarOqlNbCsW6l+v3fCwd9Uv7hehPxxmTyPfv4dyC9o67i+E/nfpvX8
trB3A20OKkO/WaPqT/3C/FdomVbJ/LFZvL+uGzDPOYy237iD9cZbtHlGL0b+
dbQR8xjq1mFVT3gT68MXlT1DUdcdPs6/FoXncw32qfUF2E9Op8XAZ0uQ36/q
g2fC9kGf+j7lweLBVXz+z1bsQt5naL3lhd3IO40WxfvKkHcNbUZ/Uo68VbRV
0+Yj5LVpo7h2D/K2zWb+KdUVyPs0rYfXVyLvFFp7MSWIvNmq35+5F3k/Vv3J
iai7zip7KjFP3p/D50+KRT3Yn9aG98A8exJtj++G53H4VL/xFfKJoLL3BPJ4
f6SF3ITzMFut5rwHEnBeob60WZOO+9Am0rZZyvteSYt5Y/H9MSpoOU7ivqwW
a+izidgv3IcWyQ2w/hptj/TzfiVtXGiHebKcNi83wsHTqj5nAe7fvqP2z+kE
i1fW8n6+68P7XaY8qz/mmaW03ZiJ/tA3tKzg+6M102LSy7AzIZf95XWYb7ho
89P5fJ/Tc9X+o5m3mBbX2R8+ofp37YP1f9V+BYdgV7yf8w/z+eUY2p7eAg4u
osWVavTbRbTl6Qk7vla+PRX3IW7S5rbFsFfP43kdO4DvqzmKlr+Pw+9baAFt
pe3YLv4H4ixEsA==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.818448*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ETH\"", TraditionalForm], 
     PlotRange -> {{3.818448*^9, 3.8333088*^9}, {0, 4166.27734375}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.8334396932728405`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"9272ac7b-e08a-4ac8-a427-6837d61368ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Povzetek v tabeli", "Subsubsection",
 CellChangeTimes->{{3.833438334140809*^9, 
  3.8334383480123262`*^9}},ExpressionUUID->"f631bc29-e30e-4795-b9e5-\
68ba551e9037"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsCCSummary", "=", 
  RowBox[{
   RowBox[{
   "ResourceFunction", "[", 
    "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", 
   RowBox[{"All", ",", "\"\<Summary\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.833438355092761*^9, 3.8334383677142377`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"252235ee-3b05-473b-8cbe-033ec8c75f70"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Symbol" -> "BTC-USD", "Name" -> "Bitcoin USD", "Price (Intraday)" -> 
        34016.28, "Change" -> 2401.55, "% Change" -> 0.076, "Market Cap" -> 
        6.37503*^11, "Volume in Currency (Since 0:00 UTC)" -> 6.1863*^10, 
        "Volume in Currency (24Hr)" -> 6.1863*^10, 
        "Total Volume All Currencies (24Hr)" -> 6.1863*^10, 
        "Circulating Supply" -> 1.8741*^7], 
       Association[
       "Symbol" -> "ETH-USD", "Name" -> "Ethereum USD", "Price (Intraday)" -> 
        1995.2, "Change" -> 113.23, "% Change" -> 0.0602, "Market Cap" -> 
        2.32255*^11, "Volume in Currency (Since 0:00 UTC)" -> 3.6254*^10, 
        "Volume in Currency (24Hr)" -> 3.6254*^10, 
        "Total Volume All Currencies (24Hr)" -> 3.6254*^10, 
        "Circulating Supply" -> 1.16407*^8], 
       Association[
       "Symbol" -> "USDT-USD", "Name" -> "Tether USD", "Price (Intraday)" -> 
        1.0008, "Change" -> 0.0006, "% Change" -> 0.0006, "Market Cap" -> 
        6.2747*^10, "Volume in Currency (Since 0:00 UTC)" -> 1.04668*^11, 
        "Volume in Currency (24Hr)" -> 1.04668*^11, 
        "Total Volume All Currencies (24Hr)" -> 1.04668*^11, 
        "Circulating Supply" -> 6.27*^10], 
       Association[
       "Symbol" -> "BNB-USD", "Name" -> "BinanceCoin USD", "Price (Intraday)" -> 
        288.42, "Change" -> 29.08, "% Change" -> 0.1121, "Market Cap" -> 
        4.4253*^10, "Volume in Currency (Since 0:00 UTC)" -> 4.566*^9, 
        "Volume in Currency (24Hr)" -> 4.566*^9, 
        "Total Volume All Currencies (24Hr)" -> 4.566*^9, 
        "Circulating Supply" -> 1.53433*^8], 
       Association[
       "Symbol" -> "ADA-USD", "Name" -> "Cardano USD", "Price (Intraday)" -> 
        1.2489, "Change" -> 0.1463, "% Change" -> 0.13269999999999998`, 
        "Market Cap" -> 3.9898*^10, "Volume in Currency (Since 0:00 UTC)" -> 
        6.139*^9, "Volume in Currency (24Hr)" -> 6.139*^9, 
        "Total Volume All Currencies (24Hr)" -> 6.139*^9, 
        "Circulating Supply" -> 3.1946*^10], 
       Association[
       "Symbol" -> "XRP-USD", "Name" -> "XRP USD", "Price (Intraday)" -> 
        0.637458, "Change" -> 0.054819, "% Change" -> 0.0941, "Market Cap" -> 
        2.9479*^10, "Volume in Currency (Since 0:00 UTC)" -> 5.4*^9, 
        "Volume in Currency (24Hr)" -> 5.4*^9, 
        "Total Volume All Currencies (24Hr)" -> 5.4*^9, "Circulating Supply" -> 
        4.6245*^10], 
       Association[
       "Symbol" -> "DOGE-USD", "Name" -> "Dogecoin USD", "Price (Intraday)" -> 
        0.216834, "Change" -> 0.029342, "% Change" -> 0.1565, "Market Cap" -> 
        2.8219*^10, "Volume in Currency (Since 0:00 UTC)" -> 5.412*^9, 
        "Volume in Currency (24Hr)" -> 5.412*^9, 
        "Total Volume All Currencies (24Hr)" -> 5.412*^9, 
        "Circulating Supply" -> 1.30143*^11], 
       Association[
       "Symbol" -> "USDC-USD", "Name" -> "USDCoin USD", "Price (Intraday)" -> 
        1.0005, "Change" -> 0., "% Change" -> 0., "Market Cap" -> 2.5225*^10, 
        "Volume in Currency (Since 0:00 UTC)" -> 3.036*^9, 
        "Volume in Currency (24Hr)" -> 3.036*^9, 
        "Total Volume All Currencies (24Hr)" -> 3.036*^9, 
        "Circulating Supply" -> 2.5212*^10], 
       Association[
       "Symbol" -> "DOT1-USD", "Name" -> "Polkadot USD", "Price (Intraday)" -> 
        16.03, "Change" -> 1.08, "% Change" -> 0.0721, "Market Cap" -> 
        1.5298*^10, "Volume in Currency (Since 0:00 UTC)" -> 3.115*^9, 
        "Volume in Currency (24Hr)" -> 3.115*^9, 
        "Total Volume All Currencies (24Hr)" -> 3.115*^9, 
        "Circulating Supply" -> 9.54346*^8], 
       Association[
       "Symbol" -> "HEX-USD", "Name" -> "HEX USD", "Price (Intraday)" -> 
        0.082466, "Change" -> -0.001486, "% Change" -> -0.0177, "Market Cap" -> 
        1.43*^10, "Volume in Currency (Since 0:00 UTC)" -> 2.5868*^7, 
        "Volume in Currency (24Hr)" -> 2.5868*^7, 
        "Total Volume All Currencies (24Hr)" -> 2.5868*^7, 
        "Circulating Supply" -> 1.73411*^11], 
       Association[
       "Symbol" -> "UNI3-USD", "Name" -> "Uniswap USD", "Price (Intraday)" -> 
        17.8, "Change" -> 2.61, "% Change" -> 0.17149999999999999`, 
        "Market Cap" -> 1.0239*^10, "Volume in Currency (Since 0:00 UTC)" -> 
        7.17633*^8, "Volume in Currency (24Hr)" -> 7.17633*^8, 
        "Total Volume All Currencies (24Hr)" -> 7.17633*^8, 
        "Circulating Supply" -> 5.75203*^8], 
       Association[
       "Symbol" -> "BCH-USD", "Name" -> "BitcoinCash USD", "Price (Intraday)" -> 
        471.89, "Change" -> 45.12, "% Change" -> 0.1057, "Market Cap" -> 
        8.858*^9, "Volume in Currency (Since 0:00 UTC)" -> 2.687*^9, 
        "Volume in Currency (24Hr)" -> 2.687*^9, 
        "Total Volume All Currencies (24Hr)" -> 2.687*^9, 
        "Circulating Supply" -> 1.8771*^7], 
       Association[
       "Symbol" -> "LTC-USD", "Name" -> "Litecoin USD", "Price (Intraday)" -> 
        129.26, "Change" -> 11.13, "% Change" -> 0.0942, "Market Cap" -> 
        8.629*^9, "Volume in Currency (Since 0:00 UTC)" -> 3.766*^9, 
        "Volume in Currency (24Hr)" -> 3.766*^9, 
        "Total Volume All Currencies (24Hr)" -> 3.766*^9, 
        "Circulating Supply" -> 6.675199999999999*^7], 
       Association[
       "Symbol" -> "SOL1-USD", "Name" -> "Solana USD", "Price (Intraday)" -> 
        30.64, "Change" -> 6.98, "% Change" -> 0.2948, "Market Cap" -> 
        8.353999999999999*^9, "Volume in Currency (Since 0:00 UTC)" -> 
        1.491*^9, "Volume in Currency (24Hr)" -> 1.491*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.491*^9, 
        "Circulating Supply" -> 2.72637*^8], 
       Association[
       "Symbol" -> "LINK-USD", "Name" -> "Chainlink USD", "Price (Intraday)" -> 
        18.6, "Change" -> 2.05, "% Change" -> 0.1236, "Market Cap" -> 
        8.071*^9, "Volume in Currency (Since 0:00 UTC)" -> 2.196*^9, 
        "Volume in Currency (24Hr)" -> 2.196*^9, 
        "Total Volume All Currencies (24Hr)" -> 2.196*^9, 
        "Circulating Supply" -> 4.3401*^8], 
       Association[
       "Symbol" -> "MATIC-USD", "Name" -> "MaticNetwork USD", 
        "Price (Intraday)" -> 1.185, "Change" -> 0.1171, "% Change" -> 
        0.10960000000000002`, "Market Cap" -> 7.457*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 2.599*^9, 
        "Volume in Currency (24Hr)" -> 2.599*^9, 
        "Total Volume All Currencies (24Hr)" -> 2.599*^9, 
        "Circulating Supply" -> 6.293*^9], 
       Association[
       "Symbol" -> "THETA-USD", "Name" -> "THETA USD", "Price (Intraday)" -> 
        6.9303, "Change" -> 0.6388, "% Change" -> 0.1015, "Market Cap" -> 
        6.93*^9, "Volume in Currency (Since 0:00 UTC)" -> 6.66097*^8, 
        "Volume in Currency (24Hr)" -> 6.66097*^8, 
        "Total Volume All Currencies (24Hr)" -> 6.66097*^8, 
        "Circulating Supply" -> 1000000000], 
       Association[
       "Symbol" -> "XLM-USD", "Name" -> "Stellar USD", "Price (Intraday)" -> 
        0.260267, "Change" -> 0.033395, "% Change" -> 0.1472, "Market Cap" -> 
        6.035*^9, "Volume in Currency (Since 0:00 UTC)" -> 9.31469*^8, 
        "Volume in Currency (24Hr)" -> 9.31469*^8, 
        "Total Volume All Currencies (24Hr)" -> 9.31469*^8, 
        "Circulating Supply" -> 2.3189*^10], 
       Association[
       "Symbol" -> "VET-USD", "Name" -> "VeChain USD", "Price (Intraday)" -> 
        0.077823, "Change" -> 0.008078, "% Change" -> 0.1158, "Market Cap" -> 
        5.005*^9, "Volume in Currency (Since 0:00 UTC)" -> 1.218*^9, 
        "Volume in Currency (24Hr)" -> 1.218*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.218*^9, 
        "Circulating Supply" -> 6.4316*^10], 
       Association[
       "Symbol" -> "ICP1-USD", "Name" -> "InternetComputer USD", 
        "Price (Intraday)" -> 36.87, "Change" -> 1.1, "% Change" -> 
        0.030699999999999998`, "Market Cap" -> 4.755*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 2.84966*^8, 
        "Volume in Currency (24Hr)" -> 2.84966*^8, 
        "Total Volume All Currencies (24Hr)" -> 2.84966*^8, 
        "Circulating Supply" -> 1.2898599999999999`*^8], 
       Association[
       "Symbol" -> "ETC-USD", "Name" -> "EthereumClassic USD", 
        "Price (Intraday)" -> 39.46, "Change" -> 2.2, "% Change" -> 
        0.059000000000000004`, "Market Cap" -> 4.59*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 2.799*^9, 
        "Volume in Currency (24Hr)" -> 2.799*^9, 
        "Total Volume All Currencies (24Hr)" -> 2.799*^9, 
        "Circulating Supply" -> 1.16313*^8], 
       Association[
       "Symbol" -> "FIL-USD", "Name" -> "FilecoinFutures USD", 
        "Price (Intraday)" -> 53.89, "Change" -> 6.2, "% Change" -> 
        0.12990000000000002`, "Market Cap" -> 4.372*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 1.145*^9, 
        "Volume in Currency (24Hr)" -> 1.145*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.145*^9, 
        "Circulating Supply" -> 8.1131*^7], 
       Association[
       "Symbol" -> "TRX-USD", "Name" -> "TRON USD", "Price (Intraday)" -> 
        0.055459, "Change" -> 0.003972, "% Change" -> 0.0771, "Market Cap" -> 
        3.974*^9, "Volume in Currency (Since 0:00 UTC)" -> 1.562*^9, 
        "Volume in Currency (24Hr)" -> 1.562*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.562*^9, 
        "Circulating Supply" -> 7.166*^10], 
       Association[
       "Symbol" -> "XMR-USD", "Name" -> "Monero USD", "Price (Intraday)" -> 
        215.68, "Change" -> 10.19, "% Change" -> 0.0496, "Market Cap" -> 
        3.869*^9, "Volume in Currency (Since 0:00 UTC)" -> 4.08346*^8, 
        "Volume in Currency (24Hr)" -> 4.08346*^8, 
        "Total Volume All Currencies (24Hr)" -> 4.08346*^8, 
        "Circulating Supply" -> 1.7938*^7], 
       Association[
       "Symbol" -> "EOS-USD", "Name" -> "EOS USD", "Price (Intraday)" -> 
        3.6628, "Change" -> 0.2614, "% Change" -> 0.07690000000000001, 
        "Market Cap" -> 3.496*^9, "Volume in Currency (Since 0:00 UTC)" -> 
        1.85*^9, "Volume in Currency (24Hr)" -> 1.85*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.85*^9, "Circulating Supply" -> 
        9.54494*^8]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Name"} -> 
        1, {All, "Price (Intraday)"} -> 1, {All, "Change"} -> 
        1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[86.4], "Name" -> 
            TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
            "Price (Intraday)" -> TypeSystem`PackageScope`AtomShape[60], 
            "Change" -> TypeSystem`PackageScope`AtomShape[60], "% Change" -> 
            TypeSystem`PackageScope`AtomShape[60], "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 25], "Meta" -> 
     Association["ID" -> 86286128899037], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Name"} -> 
        1, {All, "Price (Intraday)"} -> 1, {All, "Change"} -> 
        1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[86.4], "Name" -> 
            TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
            "Price (Intraday)" -> TypeSystem`PackageScope`AtomShape[60], 
            "Change" -> TypeSystem`PackageScope`AtomShape[60], "% Change" -> 
            TypeSystem`PackageScope`AtomShape[60], "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 25], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     25, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Symbol"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Name"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Price (Intraday)", 
                  Style[
                  "Price (Intraday)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Price (Intraday)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Price (Intraday)"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Change", 
                  Style[
                  "Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Change"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["% Change", 
                  Style[
                  "% Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "% Change"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "% Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Market Cap", 
                  Style[
                  "Market Cap", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Market Cap"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Market Cap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (Since 0:00 UTC)", 
                  Style[
                  "Volume in Currency (Since 0:00 UTC)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Volume in Currency (Since 0:00 UTC)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (Since 0:00 UTC)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (24Hr)", 
                  Style[
                  "Volume in Currency (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Volume in Currency (24Hr)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (24Hr)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Total Volume All Currencies (24Hr)", 
                  Style[
                  "Total Volume All Currencies (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Total Volume All Currencies (24Hr)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Total Volume All Currencies (24Hr)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Circulating Supply", 
                  Style[
                  "Circulating Supply", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Circulating Supply"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Circulating Supply"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bitcoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34016.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2401.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.076"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["637503000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61863000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61863000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61863000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18741000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ethereum USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1995.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["113.23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0602"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["232255000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36254000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36254000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36254000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["116407000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDT-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Tether USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62747000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104668000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104668000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104668000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62700000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNB-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BinanceCoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["288.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44253000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4566000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4566000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4566000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["153433000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ADA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cardano USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1463"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1327"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39898000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6139000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6139000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6139000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31946000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XRP-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["XRP USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.637458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.054819"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0941"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29479000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5400000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5400000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5400000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46245000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOGE-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Dogecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.216834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.029342"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1565"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28219000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5412000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5412000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5412000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["130143000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USDCoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0005"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25225000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3036000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3036000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3036000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25212000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOT1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Polkadot USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0721"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15298000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3115000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3115000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3115000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["954346000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["HEX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HEX USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.082466"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.001486"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14300000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25868000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25868000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25868000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["173411000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["UNI3-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Uniswap USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1715"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10239000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["717633000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["717633000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["717633000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["575203000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BCH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BitcoinCash USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["471.89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["45.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8858000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2687000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2687000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2687000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18771000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Litecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["129.26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0942"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8629000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3766000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3766000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3766000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["66752000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SOL1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Solana USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2948"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8354000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1491000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1491000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1491000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["272637000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LINK-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Chainlink USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.05"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1236"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8071000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2196000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2196000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2196000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["434010000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MATIC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MaticNetwork USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.185"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1096"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7457000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2599000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2599000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2599000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6293000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["THETA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["THETA USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.9303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6388"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1015"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6930000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["666097000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["666097000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["666097000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XLM-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Stellar USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.260267"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.033395"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1472"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6035000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["931469000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["931469000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["931469000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23189000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["VET-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VeChain USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.077823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.008078"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1158"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5005000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1218000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1218000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1218000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64316000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ICP1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["InternetComputer USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36.87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0307"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4755000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["284966000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["284966000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["284966000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["128986000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1339., {277., 283.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1339., {277., 283.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833438397034058*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"33fd73b4-e260-4c79-920e-04c9f6ab2528"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulacija podatkov iz tabele - ureditev po kategorijah", \
"Subsubsection",
 CellChangeTimes->{{3.8334384431341667`*^9, 
  3.833438465871253*^9}},ExpressionUUID->"5c302d50-0f17-4d3f-8f8e-\
8a786775e1d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  "dsCCSummary", "]"}]], "Input",
 CellChangeTimes->{{3.8334386324976873`*^9, 3.8334386325056667`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"c47698df-211c-43fd-94be-71feedc51f41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 Symbol\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA-USD\"\>", "1"},
          {"\<\"BCH-USD\"\>", "1"},
          {"\<\"BNB-USD\"\>", "1"},
          {"\<\"BTC-USD\"\>", "1"},
          {"\<\"DOGE-USD\"\>", "1"},
          {"\<\"DOT1-USD\"\>", "1"},
          {"\<\"(Other)\"\>", "19"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 Name\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"BinanceCoin USD\"\>", "1"},
          {"\<\"BitcoinCash USD\"\>", "1"},
          {"\<\"Bitcoin USD\"\>", "1"},
          {"\<\"Cardano USD\"\>", "1"},
          {"\<\"Chainlink USD\"\>", "1"},
          {"\<\"Dogecoin USD\"\>", "1"},
          {"\<\"(Other)\"\>", "19"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 Price (Intraday)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "0.055459`"},
          {"\<\"1st Qu\"\>", "0.9097394999999999`"},
          {"\<\"Median\"\>", "16.03`"},
          {"\<\"3rd Qu\"\>", "72.7325`"},
          {"\<\"Mean\"\>", "1493.8551442799996`"},
          {"\<\"Max\"\>", "34016.28`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 Change\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "0.001486`"}]},
          {"\<\"1st Qu\"\>", "0.03238175`"},
          {"\<\"Median\"\>", "1.08`"},
          {"\<\"3rd Qu\"\>", "7.782500000000001`"},
          {"\<\"Mean\"\>", "105.35249279999996`"},
          {"\<\"Max\"\>", "2401.55`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"5 % Change\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "0.0177`"}]},
          {"\<\"1st Qu\"\>", "0.059899999999999995`"},
          {"\<\"Median\"\>", "0.0942`"},
          {"\<\"Mean\"\>", "0.09494799999999999`"},
          {"\<\"3rd Qu\"\>", "0.125175`"},
          {"\<\"Max\"\>", "0.2948`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"6 Market Cap\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "3.496`*^9"},
          {"\<\"1st Qu\"\>", "4.9425`*^9"},
          {"\<\"Median\"\>", "8.629`*^9"},
          {"\<\"3rd Qu\"\>", "2.8534`*^10"},
          {"\<\"Mean\"\>", "4.895244`*^10"},
          {"\<\"Max\"\>", "6.37503`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"7 Volume in Currency (Since 0:00 UTC)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "2.5868`*^7"},
          {"\<\"1st Qu\"\>", "1.09161725`*^9"},
          {"\<\"Median\"\>", "2.599`*^9"},
          {"\<\"3rd Qu\"\>", "4.7745`*^9"},
          {"\<\"Mean\"\>", "1.019201516`*^10"},
          {"\<\"Max\"\>", "1.04668`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"8 Volume in Currency (24Hr)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "2.5868`*^7"},
          {"\<\"1st Qu\"\>", "1.09161725`*^9"},
          {"\<\"Median\"\>", "2.599`*^9"},
          {"\<\"3rd Qu\"\>", "4.7745`*^9"},
          {"\<\"Mean\"\>", "1.019201516`*^10"},
          {"\<\"Max\"\>", "1.04668`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"9 Total Volume All Currencies (24Hr)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "2.5868`*^7"},
          {"\<\"1st Qu\"\>", "1.09161725`*^9"},
          {"\<\"Median\"\>", "2.599`*^9"},
          {"\<\"3rd Qu\"\>", "4.7745`*^9"},
          {"\<\"Mean\"\>", "1.019201516`*^10"},
          {"\<\"Max\"\>", "1.04668`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"10 Circulating Supply\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "1.7938`*^7"},
          {"\<\"1st Qu\"\>", "1.163835`*^8"},
          {"\<\"Median\"\>", "9.54346`*^8"},
          {"\<\"Mean\"\>", "2.560096648`*^10"},
          {"\<\"3rd Qu\"\>", "3.552075`*^10"},
          {"\<\"Max\"\>", "1.73411`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.833438635305069*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"d6b65ae4-221a-42ea-ab47-9139ed3173e5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nedavni dogodki, povezani z Kripto platformo", "Subsubsection",
 CellChangeTimes->{{3.8334404052479753`*^9, 
  3.8334404306889486`*^9}},ExpressionUUID->"9fe53738-04fb-4e46-809c-\
0c954ae80579"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsEventData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Jun 18, 2021\>\"", ",", 
       "\"\<China to shut down over 90% of its Bitcoin mining capacity after \
local bans\>\"", ",", 
       "\"\<https://www.globaltimes.cn/page/202106/1226598.shtml\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Jun 10, 2021\>\"", ",", 
       "\"\<Global banking regulators call for toughest rules for \
cryptocurrencies\>\"", ",", 
       "\"\<https://www.theguardian.com/technology/2021/jun/10/global-banking-\
regulators-cryptocurrencies-bitcoin\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 10, 2021\>\"", ",", 
       "\"\<IMF sees legal, economic issues with El Salvador's bitcoin move\>\
\"", ",", 
       "\"\<https://www.reuters.com/business/finance/imf-sees-legal-economic-\
issues-with-el-salvador-bitcoin-move-2021-06-10/\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 8, 2021\>\"", ",", 
       "\"\<El Salvador Becomes First Country To Adopt Bitcoin as Legal \
Tender After Passing Law\>\"", ",", 
       "\"\<https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-make-\
bitcoin-legal-tender.html\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 8, 2021\>\"", ",", 
       "\"\<US recovers millions in cryptocurrency paid to Colonial Pipeline \
ransomware hackers\>\"", ",", 
       "\"\<https://edition.cnn.com/2021/06/07/politics/colonial-pipeline-\
ransomware-recovered/\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 4, 2021\>\"", ",", 
       "\"\<Start of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood\>\"", ",", 
       "\"\<https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-largest-\
cryptocurrency-conference-coming-to-wynwood/\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 6, 2021\>\"", ",", 
       "\"\<End of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood\>\"", ",", 
       "\"\<https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-largest-\
cryptocurrency-conference-coming-to-wynwood/\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<May 28, 2021\>\"", ",", 
       "\"\<Iran Bans Crypto Mining After Months of Blackouts\>\"", ",", 
       "\"\<https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<May 19, 2021\>\"", ",", 
       "\"\<Bitcoin, Ethereum prices in free fall as China plans crackdown on \
mining and trading\>\"", ",", 
       "\"\<https://www.cnet.com/news/bitcoin-ethereum-prices-in-freefall-as-\
china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e\>\""}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsEventData", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", "lsEventData", "]"}], "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Date\>\"", ",", "\"\<Event\>\"", ",", "\"\<URL\>\""}], 
         "}"}], ",", "#"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsEventData", "=", 
   RowBox[{"dsEventData", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\"\<DateObject\>\"", "\[Rule]", 
           RowBox[{"DateObject", "[", "#Date", "]"}]}]}], "]"}], ",", 
        RowBox[{"<|", 
         RowBox[{"\"\<URL\>\"", "\[Rule]", 
          RowBox[{"URL", "[", "#URL", "]"}]}], "|>"}]}], "]"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsEventData", "=", 
  RowBox[{"dsEventData", "[", 
   RowBox[{"SortBy", "[", 
    RowBox[{"#DateObject", "&"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8334404332471957`*^9, 3.833440433257316*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"ecf4a310-97a4-4c97-922b-452a2e74b081"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "DateObject" -> DateObject[{2021, 5, 19}, "Day", "Gregorian", 2.], 
        "Date" -> "May 19, 2021", "Event" -> 
        "Bitcoin, Ethereum prices in free fall as China plans crackdown on \
mining and trading", "URL" -> 
        URL["https://www.cnet.com/news/bitcoin-ethereum-prices-in-freefall-as-\
china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"]], 
       Association[
       "DateObject" -> DateObject[{2021, 5, 28}, "Day", "Gregorian", 2.], 
        "Date" -> "May 28, 2021", "Event" -> 
        "Iran Bans Crypto Mining After Months of Blackouts", "URL" -> 
        URL["https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 4}, "Day", "Gregorian", 2.], 
        "Date" -> "June 4, 2021", "Event" -> 
        "Start of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood", "URL" -> 
        URL["https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 6}, "Day", "Gregorian", 2.], 
        "Date" -> "June 6, 2021", "Event" -> 
        "End of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood", "URL" -> 
        URL["https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 8}, "Day", "Gregorian", 2.], 
        "Date" -> "June 8, 2021", "Event" -> 
        "El Salvador Becomes First Country To Adopt Bitcoin as Legal Tender \
After Passing Law", "URL" -> 
        URL["https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-make-\
bitcoin-legal-tender.html"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 8}, "Day", "Gregorian", 2.], 
        "Date" -> "June 8, 2021", "Event" -> 
        "US recovers millions in cryptocurrency paid to Colonial Pipeline \
ransomware hackers", "URL" -> 
        URL["https://edition.cnn.com/2021/06/07/politics/colonial-pipeline-\
ransomware-recovered/"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 10}, "Day", "Gregorian", 2.], 
        "Date" -> "Jun 10, 2021", "Event" -> 
        "Global banking regulators call for toughest rules for \
cryptocurrencies", "URL" -> 
        URL["https://www.theguardian.com/technology/2021/jun/10/global-\
banking-regulators-cryptocurrencies-bitcoin"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 10}, "Day", "Gregorian", 2.], 
        "Date" -> "June 10, 2021", "Event" -> 
        "IMF sees legal, economic issues with El Salvador's bitcoin move", 
        "URL" -> URL[
         "https://www.reuters.com/business/finance/imf-sees-legal-economic-\
issues-with-el-salvador-bitcoin-move-2021-06-10/"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 18}, "Day", "Gregorian", 2.], 
        "Date" -> "Jun 18, 2021", "Event" -> 
        "China to shut down over 90% of its Bitcoin mining capacity after \
local bans", "URL" -> 
        URL["https://www.globaltimes.cn/page/202106/1226598.shtml"]]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "DateObject"} -> 1, {All, "Date"} -> 
        1, {All, "Event"} -> 1, {All, "URL"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "DateObject" -> TypeSystem`PackageScope`AtomShape[75], "Date" -> 
            TypeSystem`PackageScope`AtomShape[124.80000000000001`], "Event" -> 
            TypeSystem`PackageScope`AtomShape[480.00000000000006`], "URL" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 4, {All}]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"DateObject", "Date", "Event", "URL"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL]}], 9], "Meta" -> 
     Association["ID" -> 214224614714323], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "DateObject"} -> 1, {All, "Date"} -> 
        1, {All, "Event"} -> 1, {All, "URL"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "DateObject" -> TypeSystem`PackageScope`AtomShape[75], "Date" -> 
            TypeSystem`PackageScope`AtomShape[124.80000000000001`], "Event" -> 
            TypeSystem`PackageScope`AtomShape[480.00000000000006`], "URL" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 4, {All}]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"DateObject", "Date", "Event", "URL"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL]}], 9], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 9, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     9, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DateObject", 
                  Style[
                  "DateObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "DateObject"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DateObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Date"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Event", 
                  Style[
                  "Event", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Event"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Event"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["URL", 
                  Style[
                  "URL", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "URL"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "URL"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Wed 19 May 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["May 19, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Bitcoin, Ethereum prices in free fall as China plans crackdown \
on mining and trading", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.cnet.com/news/bitcoin-ethereum-prices-...", 
                URL[
                "https://www.cnet.com/news/bitcoin-ethereum-prices-in-\
freefall-as-china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Fri 28 May 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["May 28, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Iran Bans Crypto Mining After Months of Blackouts", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://gizmodo.com/iran-bans-crypto-mining-after-...", 
                URL[
                "https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Fri 4 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 4, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Start of Bitcoin 2021: World's Largest Cryptocurrency \
Conference Coming To Wynwood", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://miami.cbslocal.com/2021/06/04/bitcoin-2021...", 
                URL[
                "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Sun 6 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 6, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "End of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://miami.cbslocal.com/2021/06/04/bitcoin-2021...", 
                URL[
                "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Tue 8 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 8, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "El Salvador Becomes First Country To Adopt Bitcoin as Legal \
Tender After Passing Law", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.cnbc.com/2021/06/09/el-salvador-propos...", 
                URL[
                "https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-\
make-bitcoin-legal-tender.html"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Tue 8 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 8, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "US recovers millions in cryptocurrency paid to Colonial \
Pipeline ransomware hackers", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://edition.cnn.com/2021/06/07/politics/coloni...", 
                URL[
                "https://edition.cnn.com/2021/06/07/politics/colonial-\
pipeline-ransomware-recovered/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Thu 10 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Jun 10, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Global banking regulators call for toughest rules for \
cryptocurrencies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.theguardian.com/technology/2021/jun/10...", 
                URL[
                "https://www.theguardian.com/technology/2021/jun/10/global-\
banking-regulators-cryptocurrencies-bitcoin"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Thu 10 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 10, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "IMF sees legal, economic issues with El Salvador's bitcoin \
move", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.reuters.com/business/finance/imf-sees-...", 
                URL[
                "https://www.reuters.com/business/finance/imf-sees-legal-\
economic-issues-with-el-salvador-bitcoin-move-2021-06-10/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Fri 18 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Jun 18, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "China to shut down over 90% of its Bitcoin mining capacity \
after local bans", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.globaltimes.cn/page/202106/1226598.sht...", 
                URL["https://www.globaltimes.cn/page/202106/1226598.shtml"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1168., {135., 141.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1168., {135., 141.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833440434771865*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"288a60b1-7d33-4fed-b22c-5437d68082ab"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zaklju\[CHacek]na beseda", "Section",
 CellChangeTimes->{{3.8335312910188437`*^9, 
  3.833531302471642*^9}},ExpressionUUID->"cf7cef12-9953-4f42-8926-\
390d21cb64d5"],

Cell["\<\
Kot lahko vidimo, je tehnologija kriptovalut \[SHacek]e vedno nekoliko \
zapletena in nejasna - izgleda, da smo \[SHacek]e nekoliko dale\[CHacek] od \
bolj splo\[SHacek]ne uporabe kriptovalut med ve\[CHacek]jo mno\[ZHacek]ico, \
le \[CHacek]as pa bo pokazal, ali gre resni\[CHacek]no za tehnologijo \
prihodnosti, ki bo zamenjala gotovino in denar kot tak, ali pa se bo \
izkazalo, da so skeptiki imeli ves \[CHacek]as prav.\
\>", "Text",
 CellChangeTimes->{{3.8335313082840323`*^9, 
  3.833531459379097*^9}},ExpressionUUID->"1b89f985-da38-4530-bfba-\
b7352167839b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 749.25},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ffad544d-24e4-428d-ac00-cd850d8595fd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 3, 97, "Title",ExpressionUUID->"0c60ad2c-412c-4f5d-9c9d-e2714dc6e87e"],
Cell[740, 27, 190, 3, 53, "Subtitle",ExpressionUUID->"261899e7-4a2d-437a-9512-dc4ad6562e64"],
Cell[CellGroupData[{
Cell[955, 34, 160, 3, 66, "Section",ExpressionUUID->"8cf0acad-d56e-4e3a-a293-319ca6395e2d"],
Cell[1118, 39, 1307, 20, 100, "Text",ExpressionUUID->"113dcc3c-56e0-431e-8209-fdef0e8c3852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2462, 64, 188, 3, 67, "Chapter",ExpressionUUID->"3a129c01-4c24-46f9-8285-886b35210c20"],
Cell[CellGroupData[{
Cell[2675, 71, 320, 5, 66, "Section",ExpressionUUID->"b1040eba-bac7-4fba-8b81-71cfd94d335f"],
Cell[CellGroupData[{
Cell[3020, 80, 733, 13, 28, "Input",ExpressionUUID->"59d0e300-a31e-4169-ab0f-1f6f3d051257"],
Cell[3756, 95, 1589, 24, 145, "Output",ExpressionUUID->"e91b4753-8fa8-4903-8d51-6f51e5a16cae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5382, 124, 326, 7, 28, "Input",ExpressionUUID->"7a72f135-73de-4134-a94c-02eedaedbc0c"],
Cell[5711, 133, 1575, 25, 183, "Output",ExpressionUUID->"e239110a-7cf8-4ae7-8a75-8111f681a60e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7335, 164, 224, 4, 66, "Section",ExpressionUUID->"a14496a6-7355-40af-9edb-3c6d5182f9f8"],
Cell[CellGroupData[{
Cell[7584, 172, 495, 10, 28, "Input",ExpressionUUID->"1859327e-eb4c-4d53-a02f-71175eceb472"],
Cell[8082, 184, 2843, 44, 333, "Output",ExpressionUUID->"42da9771-1d48-4ed3-a6e5-e65f08c27645"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10962, 233, 324, 7, 28, "Input",ExpressionUUID->"e2e5ae5a-d251-43b4-a241-998e483e9100"],
Cell[11289, 242, 2926, 47, 314, "Output",ExpressionUUID->"76b6863c-d338-4772-aa6e-051834e3c1dd"]
}, Open  ]],
Cell[14230, 292, 1543, 23, 144, "Text",ExpressionUUID->"56f1cdbc-c8ed-4db7-b6d1-54f7ae79cfa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15810, 320, 330, 5, 66, "Section",ExpressionUUID->"eb4cb3bb-877e-4c03-aa10-ce5ba44e32a1"],
Cell[16143, 327, 980, 15, 78, "Text",ExpressionUUID->"ae576aeb-f457-41ba-b18e-582725ef919b"],
Cell[CellGroupData[{
Cell[17148, 346, 160, 3, 55, "Subsection",ExpressionUUID->"bec68de3-5937-472a-8a84-4006c54f814e"],
Cell[17311, 351, 616, 11, 56, "Text",ExpressionUUID->"6263d048-b8f0-4736-a5b5-ae7e86b259f6"],
Cell[CellGroupData[{
Cell[17952, 366, 169, 3, 45, "Subsubsection",ExpressionUUID->"04b39778-8352-4b19-8e4b-5f47396c29cf"],
Cell[CellGroupData[{
Cell[18146, 373, 304, 6, 28, "Input",ExpressionUUID->"c89d2d07-e78d-4ba0-9ddf-029f0073cfc0"],
Cell[18453, 381, 33751, 614, 204, "Output",ExpressionUUID->"87fba6af-1be5-47fd-bcb6-08b42971496e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52253, 1001, 171, 3, 45, "Subsubsection",ExpressionUUID->"ac58238c-90cf-4c10-8db9-aac914126ff1"],
Cell[CellGroupData[{
Cell[52449, 1008, 360, 7, 28, "Input",ExpressionUUID->"0039ce36-fbae-487e-9fd1-723182cb8f2f"],
Cell[52812, 1017, 41155, 730, 65, "Output",ExpressionUUID->"3d9520f3-7594-4b17-96d9-fd6ae123c29c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94004, 1752, 275, 5, 28, "Input",ExpressionUUID->"b1368b7f-72cc-47de-a95c-09922025754c"],
Cell[94282, 1759, 33895, 624, 238, "Output",ExpressionUUID->"2c477c53-12f5-4c29-907b-2eb9025b472b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128238, 2390, 159, 3, 55, "Subsection",ExpressionUUID->"abbc57fd-6602-4e1e-86a9-8c69e05a5a34"],
Cell[128400, 2395, 1189, 18, 100, "Text",ExpressionUUID->"f1b8be85-9f57-4ab2-bb77-299367abf54b"],
Cell[CellGroupData[{
Cell[129614, 2417, 171, 3, 45, "Subsubsection",ExpressionUUID->"c1a64801-c9ba-4675-a134-c557b9007449"],
Cell[CellGroupData[{
Cell[129810, 2424, 305, 6, 28, "Input",ExpressionUUID->"167bdbcb-822a-4707-b669-04e541327393"],
Cell[130118, 2432, 39021, 715, 257, "Output",ExpressionUUID->"de09c46a-4218-4c13-8b5c-38d08154a1dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169188, 3153, 170, 3, 45, "Subsubsection",ExpressionUUID->"e00f3810-226d-4008-9d27-dd2d43725db2"],
Cell[CellGroupData[{
Cell[169383, 3160, 360, 7, 28, "Input",ExpressionUUID->"cb7e2f34-2b2f-4cbb-801f-b2df8aa41ef4"],
Cell[169746, 3169, 42690, 755, 65, "Output",ExpressionUUID->"80fc4777-9ba0-43ea-a3f9-e3439f2a9b0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212473, 3929, 207, 4, 28, "Input",ExpressionUUID->"9199eee7-1472-4ed3-9547-06d5384083a8"],
Cell[212683, 3935, 35230, 646, 242, "Output",ExpressionUUID->"87ec02a7-f459-4cca-8170-5c283d005581"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247974, 4588, 261, 4, 55, "Subsection",ExpressionUUID->"8e6b6835-b911-404f-bd51-823380aa8356"],
Cell[248238, 4594, 1790, 26, 144, "Text",ExpressionUUID->"a275f60e-2d3e-4acb-87c7-e90500fbe882"],
Cell[CellGroupData[{
Cell[250053, 4624, 170, 3, 45, "Subsubsection",ExpressionUUID->"3b11613a-aa8f-46ce-9675-ea2fe071dae7"],
Cell[CellGroupData[{
Cell[250248, 4631, 464, 8, 28, "Input",ExpressionUUID->"aea53ee2-8ee7-4e95-b079-1abe1a4ae86d"],
Cell[250715, 4641, 530, 12, 23, "Message",ExpressionUUID->"6509ede3-7aa8-4da3-8061-ec5abd5f8698"],
Cell[251248, 4655, 493, 10, 23, "Message",ExpressionUUID->"6893621e-07b7-4153-afdb-369c973bd160"],
Cell[251744, 4667, 316, 5, 32, "Output",ExpressionUUID->"a28b52e1-d60c-4ca3-8d23-688e7d5f8471"]
}, Open  ]],
Cell[252075, 4675, 266, 4, 34, "Text",ExpressionUUID->"5531d644-c56b-441b-af96-c6246bea9370"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252378, 4684, 174, 3, 45, "Subsubsection",ExpressionUUID->"d7d66406-d6ba-4da6-a02f-8fab96ede583"],
Cell[CellGroupData[{
Cell[252577, 4691, 361, 7, 28, "Input",ExpressionUUID->"0ef14e89-df66-4908-91bb-a99212876ea0"],
Cell[252941, 4700, 42386, 753, 65, "Output",ExpressionUUID->"75b8e18a-b6ba-451f-9f08-572a14028cba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295364, 5458, 207, 4, 28, "Input",ExpressionUUID->"59f34ee6-387e-4b30-b826-3e4729da82ad"],
Cell[295574, 5464, 34257, 630, 246, "Output",ExpressionUUID->"9d9b836a-410c-4cb1-9546-c2feae8b7e0b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[329880, 6100, 195, 3, 45, "Subsubsection",ExpressionUUID->"0af1b9a5-ecf0-4039-b7dc-ae1bf8f3b155"],
Cell[CellGroupData[{
Cell[330100, 6107, 447, 10, 28, "Input",ExpressionUUID->"c0107354-d14c-48a8-8c51-de1987aa0d96"],
Cell[330550, 6119, 128342, 2263, 65, "Output",ExpressionUUID->"45fafab7-3d49-4d9c-bd31-07503f9701e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458929, 8387, 212, 3, 28, "Input",ExpressionUUID->"d16f8e07-4eb4-4a2c-9556-84e2a6ddc535"],
Cell[459144, 8392, 97025, 1674, 241, "Output",ExpressionUUID->"ad48b90c-8116-406d-9540-c75902b4fe09"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556254, 10075, 177, 3, 67, "Chapter",ExpressionUUID->"26a257bf-c3cb-4f1c-b091-b117e3158713"],
Cell[556434, 10080, 244, 6, 34, "Text",ExpressionUUID->"74152d7f-16b2-4d28-8e42-15d54cde6cce"],
Cell[CellGroupData[{
Cell[556703, 10090, 317, 6, 66, "Section",ExpressionUUID->"da994b3a-830c-44cd-9903-a9c369757f03"],
Cell[CellGroupData[{
Cell[557045, 10100, 205, 3, 45, "Subsubsection",ExpressionUUID->"6d292788-aec9-4c61-aa06-0c2505bb0dbd"],
Cell[CellGroupData[{
Cell[557275, 10107, 525, 11, 28, "Input",ExpressionUUID->"9bd39810-3af3-428d-a10f-f9af9dc5269b"],
Cell[557803, 10120, 357, 7, 32, "Output",ExpressionUUID->"491fe9dd-8d67-4b58-9431-39d6dd218dfd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[558209, 10133, 192, 3, 45, "Subsubsection",ExpressionUUID->"24fc971e-04ce-4050-8714-54468954f41c"],
Cell[CellGroupData[{
Cell[558426, 10140, 737, 17, 66, "Input",ExpressionUUID->"34653be3-ce06-46a0-a753-6f062d34a398"],
Cell[559166, 10159, 594, 11, 51, "Output",ExpressionUUID->"5ae7478c-a273-43f9-bce0-f3a869f8c17b"],
Cell[559763, 10172, 152, 2, 32, "Output",ExpressionUUID->"acd2d9e3-fcc7-46ca-bd60-fbd53abc49dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[559964, 10180, 197, 3, 45, "Subsubsection",ExpressionUUID->"2cfc5288-95d1-46cc-b091-a4272ec81e7a"],
Cell[CellGroupData[{
Cell[560186, 10187, 497, 12, 47, "Input",ExpressionUUID->"9c5ba007-6b3f-475d-a07d-984174d2f1f1"],
Cell[560686, 10201, 196, 4, 32, "Output",ExpressionUUID->"c2510ee5-ed0c-44e9-b90d-feb500fbcc94"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[560931, 10211, 337, 7, 45, "Subsubsection",ExpressionUUID->"b2c51d3c-959a-4c90-8e99-7c1d35d252c8"],
Cell[CellGroupData[{
Cell[561293, 10222, 563, 14, 28, "Input",ExpressionUUID->"d4266f9b-cd0e-4dd3-a356-6fd0744e71cd"],
Cell[561859, 10238, 166883, 3201, 579, "Output",ExpressionUUID->"794b5386-cada-424d-96a7-d401fbe99371"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[728803, 13446, 263, 4, 66, "Section",ExpressionUUID->"fd2b1262-b8be-43e6-b597-62326dcf5411"],
Cell[CellGroupData[{
Cell[729091, 13454, 231, 4, 45, "Subsubsection",ExpressionUUID->"3e26e95c-34aa-42cf-a149-8cb0f3afb3a4"],
Cell[CellGroupData[{
Cell[729347, 13462, 379, 8, 28, "Input",ExpressionUUID->"eda96cd7-9c6b-4a20-90bf-f626aaa08ffd"],
Cell[729729, 13472, 1844, 30, 70, "Output",ExpressionUUID->"8ed5b6cd-69b2-4a89-9b7d-4f010ecdb96c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[731622, 13508, 299, 6, 45, "Subsubsection",ExpressionUUID->"80918b46-bd58-4399-bbb4-cb3b0f278464"],
Cell[CellGroupData[{
Cell[731946, 13518, 649, 15, 28, "Input",ExpressionUUID->"b254d67d-9993-4cac-a50d-4ca1fcfd649d"],
Cell[732598, 13535, 7154, 142, 136, "Output",ExpressionUUID->"9272ac7b-e08a-4ac8-a427-6837d61368ee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[739801, 13683, 170, 3, 45, "Subsubsection",ExpressionUUID->"f631bc29-e30e-4795-b9e5-68ba551e9037"],
Cell[CellGroupData[{
Cell[739996, 13690, 426, 9, 28, "Input",ExpressionUUID->"252235ee-3b05-473b-8cbe-033ec8c75f70"],
Cell[740425, 13701, 168546, 3325, 579, "Output",ExpressionUUID->"33fd73b4-e260-4c79-920e-04c9f6ab2528"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[909020, 17032, 212, 4, 45, "Subsubsection",ExpressionUUID->"5c302d50-0f17-4d3f-8f8e-8a786775e1d5"],
Cell[CellGroupData[{
Cell[909257, 17040, 280, 5, 28, "Input",ExpressionUUID->"c47698df-211c-43fd-94be-71feedc51f41"],
Cell[909540, 17047, 10484, 298, 309, "Output",ExpressionUUID->"d6b65ae4-221a-42ea-ab47-9139ed3173e5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[920073, 17351, 199, 3, 45, "Subsubsection",ExpressionUUID->"9fe53738-04fb-4e46-809c-0c954ae80579"],
Cell[CellGroupData[{
Cell[920297, 17358, 4074, 100, 366, "Input",ExpressionUUID->"ecf4a310-97a4-4c97-922b-452a2e74b081"],
Cell[924374, 17460, 52856, 1007, 295, "Output",ExpressionUUID->"288a60b1-7d33-4fed-b22c-5437d68082ab"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[977291, 18474, 171, 3, 66, "Section",ExpressionUUID->"cf7cef12-9953-4f42-8926-390d21cb64d5"],
Cell[977465, 18479, 576, 10, 56, "Text",ExpressionUUID->"1b89f985-da38-4530-bfba-b7352167839b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

