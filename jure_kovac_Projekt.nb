(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1355522,      25525]
NotebookOptionsPosition[   1338985,      25230]
NotebookOutlinePosition[   1339480,      25248]
CellTagsIndexPosition[   1339437,      25245]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Kriptovalute", "Title",
 CellChangeTimes->{{3.8267881722916975`*^9, 
  3.826788182889098*^9}},ExpressionUUID->"0c60ad2c-412c-4f5d-9c9d-\
e2714dc6e87e"],

Cell["Pripravil : Jure Kova\[CHacek], FMF 2020/21", "Subtitle",
 CellChangeTimes->{{3.8267882047158957`*^9, 
  3.82678823008852*^9}},ExpressionUUID->"261899e7-4a2d-437a-9512-\
dc4ad6562e64"],

Cell["\<\
Youtube video : \
\[OpenCurlyDoubleQuote]https://www.youtube.com/watch?v=5GHOoF0F8R0&ab_channel=\
jurekovac\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.8396675795262213`*^9, 3.8396676092195673`*^9}, 
   3.83966766835446*^9},ExpressionUUID->"9e1eeca3-af72-4de6-b0ca-\
14e4e5f88020"],

Cell[CellGroupData[{

Cell["Uvodna beseda", "Section",
 CellChangeTimes->{{3.833380040887497*^9, 
  3.8333800512258444`*^9}},ExpressionUUID->"8cf0acad-d56e-4e3a-a293-\
319ca6395e2d"],

Cell["\<\
Kriptovalute. Za kaj pravzaprav gre? Za nekatere so to tehnologija \
prihodnosti, za marsikoga enostaven zaslu\[ZHacek]ek spet tretji v \
kriptovalutah vidijo navaden \[OpenCurlyDoubleQuote]nateg\
\[CloseCurlyDoubleQuote]. Ve\[CHacek]ina ljudi pa se pravzaprav ne zanima za \
to \[CHacek]udo - veliko so smo sli\[SHacek]ali preko medijev o kriptovalutah \
leta 2017, ko so kriptovalute do\[ZHacek]ivele nenormalen vzpon (kar je tudi \
povzro\[CHacek]ilo mrzlico rudarjenja kriptovalut), ter nedavno januarja \
2021, ko so cene le-teh ponovno narasle, na najvi\[SHacek]jo mo\[ZHacek]no \
vsoto (vrednost Bitcoina je zna\[SHacek]ala skoraj 60.000 eur). A kaj je \
pravzaprav \[OpenCurlyDoubleQuote]kriptovaluta\[CloseCurlyDoubleQuote]? \
\[CapitalCHacek]e na hitro opi\[SHacek]emo zadevo, bi marsikdo mislil, da gre \
pravzaprav za neke vrste internetno delnico, mar ne? Ne ravno. V slede\
\[CHacek]em seminarskem delu, bom poizku\[SHacek]al opisati kriptovalute ter \
analiziral razvoj, ter si pomagal z orodji, ki jih ponuja Wolframova \
Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.8333801654779577`*^9, 3.8333803223991823`*^9}, {
  3.8333804156788015`*^9, 3.8333807968165755`*^9}, {3.8334340809267645`*^9, 
  3.8334340829700413`*^9}},ExpressionUUID->"113dcc3c-56e0-431e-8209-\
fdef0e8c3852"]
}, Open  ]],

Cell[CellGroupData[{

Cell["1. Poglavje - Kripto za nevedne\[ZHacek]e", "Chapter",
 CellChangeTimes->{{3.8334339949536343`*^9, 
  3.833434033011445*^9}},ExpressionUUID->"3a129c01-4c24-46f9-8285-\
886b35210c20"],

Cell[CellGroupData[{

Cell["1. Definicija (Wikipedia)", "Section",
 CellChangeTimes->{{3.8333808022330666`*^9, 3.833380811647339*^9}, {
  3.833381168993431*^9, 3.8333811790617085`*^9}, {3.833427742246847*^9, 
  3.8334277428309674`*^9}, {3.833429009939625*^9, 
  3.833429010772046*^9}},ExpressionUUID->"b1040eba-bac7-4fba-8b81-\
71cfd94d335f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"def", " ", "=", 
  RowBox[{
   RowBox[{"TextSentences", "[", 
    RowBox[{"WikipediaData", "[", "\"\<Cryptocurrency\>\"", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{";;", "7"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8334274820640326`*^9, 3.8334274821418552`*^9}, {
  3.833427512582595*^9, 3.8334275402166405`*^9}, {3.8334275763253813`*^9, 
  3.8334275777209225`*^9}, {3.833427615603445*^9, 3.8334276265647116`*^9}, {
  3.8334277214777527`*^9, 3.833427724544778*^9}, {3.833427767382805*^9, 
  3.8334277820670567`*^9}, {3.833427828075919*^9, 3.833427831177896*^9}, {
  3.8334285296805706`*^9, 3.833428544729635*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"59d0e300-a31e-4169-ab0f-1f6f3d051257"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"A cryptocurrency, crypto-currency, or crypto is a digital \
asset designed to work as a medium of exchange wherein individual coin \
ownership records are stored in a ledger existing in a form of a computerized \
database using strong cryptography to secure transaction records, to control \
the creation of additional coins, and to verify the transfer of coin \
ownership.\"\>", 
   ",", "\<\"It typically does not exist in physical form (like paper money) \
and is typically not issued by a central authority.\"\>", 
   ",", "\<\"Cryptocurrencies typically use decentralized control as opposed \
to a central bank digital currency (CBDC).\"\>", 
   ",", "\<\"When a cryptocurrency is minted or created prior to issuance or \
issued by a single issuer, it is generally considered centralized.\"\>", 
   ",", "\<\"When implemented with decentralized control, each cryptocurrency \
works through distributed ledger technology, typically a blockchain, that \
serves as a public financial transaction database.\"\>", 
   ",", "\<\"Bitcoin, first released as open-source software in 2009, is the \
first decentralized cryptocurrency.\"\>", 
   ",", "\<\"Since the release of bitcoin, other cryptocurrencies have been \
created.\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8334276196286945`*^9, 3.833427627731477*^9}, 
   3.8334277287713194`*^9, {3.833427769403225*^9, 3.8334277834366136`*^9}, 
   3.83342783632493*^9, {3.833428531570916*^9, 3.8334285468287525`*^9}},
 CellLabel->"Out[15]=",ExpressionUUID->"e91b4753-8fa8-4903-8d51-6f51e5a16cae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TextTranslation", "[", 
    RowBox[{"def", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", "\"\<Slovenian\>\"", "}"}]}]], "Input",
 CellChangeTimes->{{3.8334278536376376`*^9, 3.8334278706431475`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"7a72f135-73de-4134-a94c-02eedaedbc0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"Kriptovaluta, kriptovaluta ali kripto je digitalno sredstvo, \
namenjeno za delo kot medij izmenjave, v katerem so posamezni zapisi lastni\
\[SHacek]tva kovancev shranjeni v knjigi, ki obstaja v obliki \
ra\[CHacek]unalni\[SHacek]ko podprte zbirke podatkov z uporabo mo\[CHacek]ne \
kriptografije za varno transakcijo, za nadzor nad ustvarjanjem dodatnih \
kovancev in za preverjanje prenosa lastni\[SHacek]tva kovancev.\"\>", 
    ",", "\<\"Obi\[CHacek]ajno ne obstaja v fizi\[CHacek]ni obliki (kot \
papirni denar) in ga obi\[CHacek]ajno ne izda osrednji organ.\"\>", 
    ",", "\<\"Kripto valute obi\[CHacek]ajno uporabljajo decentraliziran \
nadzor v nasprotju z digitalno valuto centralne banke (CBDC).\"\>", 
    ",", "\<\"Kadar je kripto valuta kovnjena ali ustvarjena pred izdajo ali \
izdajo enega izdajatelja, se na splo\[SHacek]no \[SHacek]teje za \
centralizirano.\"\>", 
    ",", "\<\"Ko se izvaja z decentraliziranim nadzorom, vsaka kripto valuta \
deluje s tehnologijo distribuirane knjige, obi\[CHacek]ajno blockchain, ki \
slu\[ZHacek]i kot javna zbirka podatkov o finan\[CHacek]nih \
transakcijah.\"\>", 
    ",", "\<\"Bitcoin, prvi\[CHacek] izdan kot odprtokodna programska oprema \
leta 2009, je prva decentralizirana kriptokurrenca.\"\>", 
    ",", "\<\"Od izdaje bitcoina so bile ustvarjene druge kriptovate.\"\>"}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8334279183351617`*^9, 3.8334285574933558`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"e239110a-7cf8-4ae7-8a75-8111f681a60e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Zgodovina (Wikipedia)", "Section",
 CellChangeTimes->{{3.8334283698484287`*^9, 3.8334283864726315`*^9}, {
  3.8334290137432528`*^9, 
  3.833429014127063*^9}},ExpressionUUID->"a14496a6-7355-40af-9edb-\
3c6d5182f9f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"his", " ", "=", " ", 
  RowBox[{
   RowBox[{"TextSentences", "[", 
    RowBox[{"WikipediaData", "[", "\"\<Cryptocurrency\>\"", "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"9", ";;", "24"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.833428410000241*^9, 3.8334284219381657`*^9}, {
  3.8334284990559673`*^9, 3.8334285027215815`*^9}, {3.8334285674639854`*^9, 
  3.833428689823044*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"1859327e-eb4c-4d53-a02f-71175eceb472"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"In 1983, the American cryptographer David Chaum conceived an \
anonymous cryptographic electronic money called ecash.\"\>", 
   ",", "\<\"Later, in 1995, he implemented it through Digicash, an early \
form of cryptographic electronic payments which required user software in \
order to withdraw notes from a bank and designate specific encrypted keys \
before it can be sent to a recipient.\"\>", 
   ",", "\<\"This allowed the digital currency to be untraceable by the \
issuing bank, the government, or any third party.\"\>", 
   ",", "\<\"In 1996, the National Security Agency published a paper entitled \
How to Make a Mint: the Cryptography of Anonymous Electronic Cash, describing \
a Cryptocurrency system, first publishing it in an MIT mailing list and later \
in 1997, in The American Law Review (Vol. 46, Issue 4).\"\>", 
   ",", "\<\"In 1998, Wei Dai published a description of \\\"b-money\\\", \
characterized as an anonymous, distributed electronic cash system.\"\>", 
   ",", "\<\"Shortly thereafter, Nick Szabo described bit gold.\"\>", 
   ",", "\<\"Like bitcoin and other cryptocurrencies that would follow it, \
bit gold (not to be confused with the later gold-based exchange, BitGold) was \
described as an electronic currency system which required users to complete a \
proof of work function with solutions being cryptographically put together \
and published.\"\>", 
   ",", "\<\"In 2009, the first decentralized cryptocurrency, bitcoin, was \
created by presumably pseudonymous developer Satoshi Nakamoto.\"\>", 
   ",", "\<\"It used SHA-256, a cryptographic hash function, in its \
proof-of-work scheme.\"\>", 
   ",", "\<\"In April 2011, Namecoin was created as an attempt at forming a \
decentralized DNS, which would make internet censorship very difficult.\"\>", 
   ",", "\<\"Soon after, in October 2011, Litecoin was released.\"\>", 
   ",", "\<\"It used scrypt as its hash function instead of SHA-256.\"\>", 
   ",", "\<\"Another notable cryptocurrency, Peercoin used a \
proof-of-work/proof-of-stake hybrid.\"\>", 
   ",", "\<\"On 6 August 2014, the UK announced its Treasury had been \
commissioned a study of cryptocurrencies, and what role, if any, they could \
play in the UK economy.\"\>", 
   ",", "\<\"The study was also to report on whether regulation should be \
considered.\"\>", 
   ",", "\<\"In June 2021, El Salvador became the first country to accept \
Bitcoin as legal tender, after the Legislative Assembly had voted 62\[Dash]22 \
to pass a bill submitted by President Nayib Bukele classifying the \
cryptocurrency as such.\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8334284249805527`*^9, 3.8334285044489174`*^9, {3.833428572487138*^9, 
   3.8334286910919685`*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"42da9771-1d48-4ed3-a6e5-e65f08c27645"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TextTranslation", "[", 
    RowBox[{"his", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", "\"\<Slovenian\>\"", "}"}]}]], "Input",
 CellChangeTimes->{{3.833428718868536*^9, 3.8334287204911084`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e2e5ae5a-d251-43b4-a241-998e483e9100"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"Leta 1983 je ameri\[SHacek]ki kriptograf David Chaum spo\
\[CHacek]el anonimni kriptografski elektronski denar imenovan ecash.\"\>", 
    ",", "\<\"Kasneje ga je leta 1995 izvajal prek Digicasha, zgodnje oblike \
kriptografskih elektronskih pla\[CHacek]il, ki so zahtevala \
uporabni\[SHacek]ka programska oprema, da bi iz banke umaknil zapiske in pred \
po\[SHacek]iljanje prejemniku dolo\[CHacek]ila posebne \[SHacek]ifrirane klju\
\[CHacek]e.\"\>", 
    ",", "\<\"To je omogo\[CHacek]ilo, da se digitalni valuti ni \
mogo\[CHacek]e izslediti s strani banke, vlade ali katere koli tretje \
osebe.\"\>", 
    ",", "\<\"Leta 1996 je Agencija za nacionalno varnost objavila \
\[CHacek]lanek z naslovom How to Make a Mint: the Cryptography of Anonymous \
Electronic Cash, ki opisuje sistem kripto valut, ki ga je najprej objavil na \
MIT po\[SHacek]tnem seznamu in kasneje leta 1997, v Ameri\[SHacek]kem \
pregledu prava (Vol. 46, Issue 4).\"\>", 
    ",", "\<\"Leta 1998 je Wei Dai objavil opis \\\"b-denarja\\\", zna\
\[CHacek]ilnega za anonimen, distribuiran elektronski denarni sistem.\"\>", 
    ",", "\<\"Kmalu potem je Nick Szabo opisal bit zlata.\"\>", 
    ",", "\<\"Kot bitcoin in druge kriptovalute, ki bi mu sledile, je bil bit \
gold (ki se ne sme zamenjati s poznej\[SHacek]im borzo na osnovi zlata, \
BitGold) opisan kot sistem elektronske valute, ki je od uporabnikov zahteval, \
da dokon\[CHacek]ajo dokaz o delovni funkciji z re\[SHacek]itvami, ki se \
kriptografsko sestavijo in objavijo.\"\>", 
    ",", "\<\"Leta 2009 je prvo decentralizirano kriptoventijo, bitcoin, \
ustvaril domnevno psevdonimni razvijalec Satoshi Nakamoto.\"\>", 
    ",", "\<\"V svoji shemi za dokaz dela je uporabila SHA-256, kriptografsko \
funkcijo hasha.\"\>", 
    ",", "\<\"Aprila 2011 je bil Namecoin ustvarjen kot poskus oblikovanja \
decentraliziranega DNS- ja, kar bi zelo ote\[ZHacek]ujelo cenzuro \
interneta.\"\>", 
    ",", "\<\"Kmalu zatem, oktobra 2011, je iz\[SHacek]el Litecoin.\"\>", 
    ",", "\<\"Uporabil je \[SHacek]ifriranje kot svojo funkcijo hash namesto \
SHA-256.\"\>", 
    ",", "\<\"Peercoin je uporabil \[SHacek]e eno cryptocurrency, ki je bila \
uporabljena kot dokaz za delo/dokaz o kocki.\"\>", 
    ",", "\<\"Zdru\[ZHacek]eno kraljestvo je 6.\"\>", 
    ",", "\<\"V \[SHacek]tudiji je bilo treba poro\[CHacek]ati tudi o tem, \
ali je treba preu\[CHacek]iti ureditev.\"\>", 
    ",", "\<\"Junija 2021 je El Salvador postal prva dr\[ZHacek]ava, ki je \
sprejela Bitcoin kot pravno ponudbo, potem ko je zakonodajna skup\[SHacek]\
\[CHacek]ina glasovala 62\[AHat]22 za sprejetje predloga zakona, ki ga je \
predlo\[ZHacek]il predsednik Nayib Bukele, ki je kriptovanko opredelil kot \
tako.\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.833428728275664*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"76b6863c-d338-4772-aa6e-051834e3c1dd"]
}, Open  ]],

Cell["\<\
Kriptovaluta je torej le neke vrste koda, ki nosi raznorazne podatke o lastni\
\[SHacek]tvu, transakcijah itd. Ampak ... zakaj bi kdorkoli sploh \
\[ZHacek]elel kaj takega? Saj sploh nima fizi\[CHacek]ne oblike, sploh ni \
\"prava\" stvar!
Pa vendarle se moramo isto vpra\[SHacek]ati o na\[SHacek]i stari dobri \
gotovini ...  Je tudi denar kot ga poznamo \"prava\" stvar ? Konec koncev gre \
samo za posebno vrsto papirja ter kovine, le - teh pa je na svetu precej. \
Ideja vrednosti neke \"stvari\" je v tem, da ji bo vrednosti narasla po tem, \
koliko ljudi se pravzaprav zanima za njo. In kot vemo, bi se dan danes \
marsikdo \[ZHacek]elel bitcoina. A temu vedno ni bilo tako - prva komercialna \
transakcija Bitcoina se je izvedla leta 2010. Programer po imenu Laszlo \
Hanyecz je namre\[CHacek] za menjavo 10.000 Bitcoinov naro\[CHacek]il dve \
pici. \[CapitalCHacek]e bi prevedli tak znesek Bitcoinov v dana\[SHacek]nji \
\[CHacek]as, bi vrednost le - teh zna\[SHacek]ala kar 284.420 .000 dolarjev! \
Definitivno bi si lahko privo\[SHacek]\[CHacek]il \[SHacek]e tretjo pico. Pa \
vendar ... \[ZHacek]e iz zgornjega opisa nam postane jasno, da ni \[SHacek]lo \
za \"napako\", ki jo je gospod Hanzecz storil. To dejanje je bilo namre\
\[CHacek] klju\[CHacek]no za nadaljni razvoj Bitcoina in kriptovalut samih, \
saj je bila prva transakcija kriptovalute za neko materialno \"dobrino\".\
\>", "Text",
 CellChangeTimes->{{3.8334302865426006`*^9, 
  3.833430291946535*^9}},ExpressionUUID->"56f1cdbc-c8ed-4db7-b6d1-\
54f7ae79cfa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Bitcoin, Ethereum, Dogecoin", "Section",
 CellChangeTimes->{{3.83342901809654*^9, 3.8334290185002675`*^9}, {
  3.8334291836142254`*^9, 3.8334291937592506`*^9}, {3.8334292334602194`*^9, 
  3.8334292495740376`*^9}, {3.8334339489179873`*^9, 
  3.833433960700153*^9}},ExpressionUUID->"eb4cb3bb-877e-4c03-aa10-\
ce5ba44e32a1"],

Cell["\<\
Ena od bolj \"kul\" zadev kriptovalut je ta, da so \
\[OpenCurlyDoubleQuote]decentralizirane\[CloseCurlyDoubleQuote]. Kar to \
pomeni je, da vlada in banke NE morejo vplivati na to tehnologijo. \
\[CapitalSHacek]e ve\[CHacek], veliko kriptovalut je skorajda imunih na \
inflacijo (npr. Bitcoinov je kon\[CHacek]no mnogo - 21 milijonov)! Stvar je v \
tem, da je vsaka enota kriptovalute UNIKATNA. Ker namre\[CHacek] vsaka nosi \
svojo unikatno kodo z dolo\[CHacek]enimi informacijami. Le-ta se imenuje HASH. 
Poglejmo si 3 kriptovalute, ki so bile v letu 2021 najbolj odmevne.\
\>", "Text",
 CellChangeTimes->{{3.8334303853484974`*^9, 3.8334304702443004`*^9}, {
  3.833430507842697*^9, 3.833430558152053*^9}, {3.8334305999080906`*^9, 
  3.8334306282235317`*^9}, {3.8334306651536646`*^9, 3.833430738734655*^9}, {
  3.833430914512317*^9, 3.8334309193018074`*^9}, {3.8334310750393476`*^9, 
  3.8334310788858805`*^9}},ExpressionUUID->"ae576aeb-f457-41ba-b18e-\
582725ef919b"],

Cell[CellGroupData[{

Cell["1. Bitcoin", "Subsection",
 CellChangeTimes->{{3.8334307461352615`*^9, 
  3.833430760628677*^9}},ExpressionUUID->"bec68de3-5937-472a-8a84-\
4006c54f814e"],

Cell["\<\
Bitcoin smo omenili \[ZHacek]e precejkrat - prva kriptovaluta, ustvarjena \
leta 2009, njen avtor je \[OpenCurlyDoubleQuote]Satoshi Nakomoto\
\[CloseCurlyDoubleQuote] (ne ve se, ali je avtor eden ali ve\[CHacek], vendar \
naj bi bilo ime \[OpenCurlyDoubleQuote]Satoshi Nakomoto\
\[CloseCurlyDoubleQuote] zgolj psevdonim). Danes je Bitcoin dale\[CHacek] \
najbolj vredna in za\[ZHacek]eljena kriptovaluta na svetu.\
\>", "Text",
 CellChangeTimes->{{3.8334308114586644`*^9, 3.8334308974082007`*^9}, {
  3.833430932652113*^9, 
  3.833431008210315*^9}},ExpressionUUID->"6263d048-b8f0-4736-a5b5-\
ae7e86b259f6"],

Cell[CellGroupData[{

Cell["Tabela - Bitcoin", "Subsubsection",
 CellChangeTimes->{{3.833437222030467*^9, 
  3.8334372347777696`*^9}},ExpressionUUID->"04b39778-8352-4b19-8e4b-\
5f47396c29cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BlockchainData", "[", 
   RowBox[{"BlockchainBase", "\[Rule]", "\"\<Bitcoin\>\""}], "]"}], "//", 
  "Dataset"}]], "Input",
 CellChangeTimes->{{3.833431033890933*^9, 3.8334310397051687`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"c89d2d07-e78d-4ba0-9ddf-029f0073cfc0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Type" -> "Bitcoin", "Name" -> "BTC.main", "Core" -> "Bitcoin", 
       "Blocks" -> 688576, "LatestBlockHash" -> 
       "0000000000000000000ce0a8b4d183f7be8900dd76b7dd6a12fe45ccffc62cba", 
       "MinimumFee" -> Quantity[53645, "Satoshis"]], "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Type"} -> 
        TypeSystem`PackageScope`AtomShape[67.20000000000002], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Core"} -> 
        TypeSystem`PackageScope`AtomShape[67.20000000000002], {"Blocks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LatestBlockHash"} -> 
        TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
         "MinimumFee"} -> TypeSystem`PackageScope`AtomShape[75]], 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "Type", "Name", "Core", "Blocks", "LatestBlockHash", "MinimumFee"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[
         Quantity[1, "Satoshis"]]}], "Meta" -> 
     Association["ID" -> 177369500337955], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Type"} -> 
        TypeSystem`PackageScope`AtomShape[67.20000000000002], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Core"} -> 
        TypeSystem`PackageScope`AtomShape[67.20000000000002], {"Blocks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LatestBlockHash"} -> 
        TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
         "MinimumFee"} -> TypeSystem`PackageScope`AtomShape[75]], 1], "Type" -> 
     TypeSystem`Struct[{
       "Type", "Name", "Core", "Blocks", "LatestBlockHash", "MinimumFee"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[
         Quantity[1, "Satoshis"]]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     6, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Type", 
                  Style[
                  "Type", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Type"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Type"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Bitcoin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["BTC.main", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Core", 
                  Style[
                  "Core", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Core"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Core"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Bitcoin", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Core"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blocks", 
                  Style[
                  "Blocks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Blocks"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blocks"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["688576"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blocks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LatestBlockHash", 
                  Style[
                  "LatestBlockHash", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["LatestBlockHash"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LatestBlockHash"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "0000000000000000000ce0a8b4d183f7be8900dd76b7dd6a12fe45ccffc62cb\
a", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LatestBlockHash"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MinimumFee", 
                  Style[
                  "MinimumFee", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["MinimumFee"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MinimumFee"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"53645", 
                   RowBox[{"\[VeryThinSpace]", 
                    FormBox["\" sat\"", TraditionalForm]}], "satoshis", 
                   "\"Satoshis\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MinimumFee"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{616., {92., 98.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{616., {92., 98.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833431042899069*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"87fba6af-1be5-47fd-bcb6-08b42971496e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graf cene Bitcoina", "Subsubsection",
 CellChangeTimes->{{3.8334372398214483`*^9, 
  3.833437253426228*^9}},ExpressionUUID->"ac58238c-90cf-4c10-8db9-\
aac914126ff1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<BTC\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8334364572373514`*^9, 3.833436457245936*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"0039ce36-fbae-487e-9fd1-723182cb8f2f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAKMtzsGn46kHS0Yt7UpV8QD7CDxIN
/+pBVoA2na8kdkDRjQRlPwbrQTFrzR1gqnVAPT+GofcM60GluMve/ohqQGN7
gx+OE+tBCeTciRIncEAHjNmOsxrrQRVHPjL3BmxAg4K8514h60GHWb1rw/9t
QH1N+DGZKOtBta3e04m+cEAxo6+9sS/rQbAhBfJGRmtAvt7zMlA260HBXMwP
HJdtQMnukJl9PetByoFnGl7FdECs5LrpMETrQXYG2MgAdXtASmVge8JK60HJ
5A/TEap3QGW6Xv7iUetBa7s3PrjeeUBZ9elqiVjrQWw1Fl4y8XtAygTOyL5f
60HAHGR24/qBQPaeLWjSZutBmi4tZ/AJhUD7Hhrxa23rQTG6G95s0IFAfXNf
a5R060HgmMBPU06DQNitMc9Ce+tBIzyt4vZ7h0CwvFwkgILrQZSLZzsj4o9A
Q1YDu5uJ60FCczaJ/GWPQK7VNjs9kOtBNSmhsIH2jkCXKcOsbZfrQUgkAXZ8
ZJtAWWPcBySe60FAUJ8OOx+kQNUncaS4pOtB1t3iZxqQpUDPwF4y3KvrQXUu
IEfuI7BAoT/ZqYWy60G4CKFWRoK3QPGSrBK+uetB1WxZ2R83xkD7cPu81MDr
QXGh2RpBO8pA3jTXUHHH60G7rrtfNhXDQD7NC9aczutBvAp/HUWmukB3S81E
TtXrQbDtUyA+UsBAalQK9d3b60EeFf4YfVa3QNsxoJb84utBpHRko09YuEAl
9cIhoenrQWMKTz7tV7lA7Iw+ntTw60H+sikbm+i4QIwKRwSO9+tBnACjMVbB
qUDmEsurJf7rQYL61Fi3H6xAvu+nREwF7EFP9v2vdImuQG6yEcf4C+xBb5cr
1bp1tECcSdQ6NBPsQc2+wZAhQsBAhGsS8E0a7EHgYF2Qtv3GQEVz3Y7tIOxB
iWUw4vvLw0CETwEfHCjsQS2mKGNBCsBAmxGymNAu7EHttwJH0hfBQG1e3lNj
NexBC/0DeKmsvEC8f2MAhTzsQZBiD+HGi8JA5IZ1lixD7EFrwOARca2zQIpi
4B1jSuxB1cig2Av0wEDqyMbmd1HsQX+EUIqNXsJAIxU6mRJY7EH5v0tva0fC
QNk1Bj08X+xBAE0KQ1toxUBoPF/K62XsQSzkssXhSsZAdBcRSSpt7EErS2UF
tuDQQCTEEa7rb+xBBOXnSUrC2UBoJL8a
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$271333#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3833395200}, {0., 
                26377.160760854385`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAKMtzsGn46kHS0Yt7UpV8QD7CDxIN
/+pBVoA2na8kdkDRjQRlPwbrQTFrzR1gqnVAPT+GofcM60GluMve/ohqQGN7
gx+OE+tBCeTciRIncEAHjNmOsxrrQRVHPjL3BmxAg4K8514h60GHWb1rw/9t
QH1N+DGZKOtBta3e04m+cEAxo6+9sS/rQbAhBfJGRmtAvt7zMlA260HBXMwP
HJdtQMnukJl9PetByoFnGl7FdECs5LrpMETrQXYG2MgAdXtASmVge8JK60HJ
5A/TEap3QGW6Xv7iUetBa7s3PrjeeUBZ9elqiVjrQWw1Fl4y8XtAygTOyL5f
60HAHGR24/qBQPaeLWjSZutBmi4tZ/AJhUD7Hhrxa23rQTG6G95s0IFAfXNf
a5R060HgmMBPU06DQNitMc9Ce+tBIzyt4vZ7h0CwvFwkgILrQZSLZzsj4o9A
Q1YDu5uJ60FCczaJ/GWPQK7VNjs9kOtBNSmhsIH2jkCXKcOsbZfrQUgkAXZ8
ZJtAWWPcBySe60FAUJ8OOx+kQNUncaS4pOtB1t3iZxqQpUDPwF4y3KvrQXUu
IEfuI7BAoT/ZqYWy60G4CKFWRoK3QPGSrBK+uetB1WxZ2R83xkD7cPu81MDr
QXGh2RpBO8pA3jTXUHHH60G7rrtfNhXDQD7NC9aczutBvAp/HUWmukB3S81E
TtXrQbDtUyA+UsBAalQK9d3b60EeFf4YfVa3QNsxoJb84utBpHRko09YuEAl
9cIhoenrQWMKTz7tV7lA7Iw+ntTw60H+sikbm+i4QIwKRwSO9+tBnACjMVbB
qUDmEsurJf7rQYL61Fi3H6xAvu+nREwF7EFP9v2vdImuQG6yEcf4C+xBb5cr
1bp1tECcSdQ6NBPsQc2+wZAhQsBAhGsS8E0a7EHgYF2Qtv3GQEVz3Y7tIOxB
iWUw4vvLw0CETwEfHCjsQS2mKGNBCsBAmxGymNAu7EHttwJH0hfBQG1e3lNj
NexBC/0DeKmsvEC8f2MAhTzsQZBiD+HGi8JA5IZ1lixD7EFrwOARca2zQIpi
4B1jSuxB1cig2Av0wEDqyMbmd1HsQX+EUIqNXsJAIxU6mRJY7EH5v0tva0fC
QNk1Bj08X+xBAE0KQ1toxUBoPF/K62XsQSzkssXhSsZAdBcRSSpt7EErS2UF
tuDQQCTEEa7rb+xBBOXnSUrC2UBoJL8a
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$271333#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3833395200}, {0., 
                26377.160760854385`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJxFWgdUk0uwRlTsvWIBxN4L6lVAWfXaufaGDWxYSEJCCwS8QEJVisC16w0I
2OiCSE9AiqIi2FBRAQtFLIh67fLCfPve8xzPnt1/d3bmm29mZzcM2W67ape2
lpZWK83/qA5aWt/vDzLYcNiN3ZD7m3X0lbF+Sm2rrFhn5pe9Qu0U5MLeOYdV
Gr51Zok3GpUiQxemM+ZF5TlTV5ZQZhe+0F7GHjU81Z+Y7sJ6h/2hvrnAhcnW
/Kxc+dWZ/eE/x+pVqJS5LpNVOkul7LpTjnLARGdW2Se3+cE3KUupb181QiJl
7oJQ/cnOTqzpSIx+RaADG/J6ttbo9g6s3uqXcl6EA9vovlTrt7Yj9OvmxE4v
0fHYV+qE8WNObLlhnupaFG/PS9mEGQqV0tqZNR6ocm/o4sIulWeabY3l+tRJ
2Y/avWqDn1IW6VBv2VPqDHs3ODPr3Hx977dS5jT9pfL4SGfmneRt4NskZbox
t5pjrJ3wfZcTC7xf07w2xRH6jXVi//TeoHVXo1f/4x6WLyyc2J5bwSqHbw5s
ePv1rPofR+A33JG9/btP1Y9NDiy4Okk5f6sD6+krMHjq7MDa9j9iVnnOgT0f
EqAs/MORZY6SVUXe4621I/MME1aVHHVkes/srWamcDvfObGKL+dVej+c2KLf
VlXfnGXsdniEe95SGUv9fNe971Nn2CmXsjpr9/BBs7k9051Z4b6PzWPspdDv
mpStNY9Wirc4sRVTu1mFvHVkKycEWqZ1dcK8bxzvICm+O0qBa1sp5g3gfvSV
wn8aP482eOuuDufzkqXw230p/CqWMvsxuloXdXkbKGUxyRutggVS4Kvhw7Ep
YnbwXye2mj1u9mjtBL5EO7Kh/3UI71/nCH+0d2K9PF/rt0l1hH3fHbH+sCN4
IXaA3j/t4S8ne8ZU7yvdntqz3FVb1EuVDuh3cWCChnPN43IcYEe9A/Yf5QD8
Gu2B998O8EO2Pfx91x72H7Bntj0V6mIbe+De2gF+jrRnatbdQJFoz+7dXVi1
PEQCfynEbMflb+6HR0pYWiulvs4LCXu5aLfVzl12GL8sgZ9G2IGX4yTA54QY
/Swxy5/X3yzQRAA75lmzsx4pza1M9iG+Wu9jn662r15Zt4cVerce8mjJPsyv
2MeOtO3l3nvfPmYWd8YsZbMAOI0Tws5BQqz/IWIlQWsqv6Xawt/9JIgHqZhN
226tXDhLyIZWfPt73yQhxv8SYJ8JNlhvKWC1a6ZorSkSsnkFM9zD9nA9Nwmg
x1AbtqCstb7img32dRaw1ZteG0x8a8OqJpUZeCtsIE9mw/Z9f+PRsMuGmWbV
qu3SbMAXoRDx1EfMDlwfaGW9UQh9jYVYby9CnjogZBvsPay6dhCxLQf7hr91
FrFJu6o8+oaIELfuQqZ3dYfZwSd8XbkQPE0QsmWj/lRHBApZnGq4lnuGLey9
Zsvyt46yMpknht+NJeiflCC/9ZAw875f9B/NlQC3ThLw6k8J9B4uYVtP72Cp
unaIA1M79vvjVKvuPnb4rvE/8eC+BN//lbAz20+pFtdIwNPRdqy7o75H74cS
8LGNGPstE/O8wvFgYja/3Ft/s0qMuIkRw65kEUt54VP5V6GITZHEGOj0sAUu
VSLmPDfBzP+4LYuL6lNZuk7EjA931rrfKEL8+4rAlzoR9Aq3hZxi3v4vTxaL
WcdJ49xz3tuyxd3jPfKibbEuXAQ8Hfn+ciHsDREiH3tpeBdSor7WUwD/aPzt
cfx91bnvNojbUAHy3hMb4NNgw94IrpkZ3bVhw7Xvm7XvLWCDrhxTntzD/Taf
ywvi/KsTMIPbEypl5gLoJbRhxrKfz0ZcEDDVglCDzZo4EuikGVTMFLA56cLK
SI0+FH/aQszfImTPTU+pHTqJIK9KiHytEALHdAE7ezLfIPGikLUeWaE+7Spi
588Fq5XGIvBCwz/i4XwRezpMx/PwUBH8HiBkEr1lVhmnhdAj+f/xIHyOC5Hv
hgmB228B9mdCxLsNjwONXk87/GdZW8H5qicCnyOF7OX49WapkTwOLvA2Tohz
L5LzfawQeaFQAPye2jDzQS4GlzR4VPwao/6iwYfOz44C1AN6AtZu2LbKEiMB
+1bxr8FkjV9qZxpWRgcLwKMIAdYfFyBvpQpYtnGRh0AlwHnXWaPHBrGZ1WQh
/HtCCNw328L/o23hbwNb+DtMBH+eFbGQt25m0/4Wsc6mX/TiKzm+/iL4t7sI
PLQQAR97Ps/SlukWPjXYqJFH+baHmNcdYqbd+Yby/Wgxzz+27E6RG7NqK0bc
auKKePVbzE7MNqmSlYqRxyPFsOuNmG27MKEq+q4Y/imRIN5W2oEfQnvYy+zY
vBsZ7oIvEuSdpxL0t0nY7ORhLFAqwTk1QYJzRVcC/GwlyKOz+LzVPO6ZhOWZ
V6js2tjBjk52OP+X2CEPWNghfq3tcK5r8g2t/yFBfiiWMP8rJarTx/l+FyTw
exjPM3clOE//5fltrwT5xEXC+gReVn1cLoZeIWKct74crxoxzuOzYtSFnmLU
F5pza2Rvw6rSDWLIHSXG/vpixNn2fSy0faDVi7UCxLWG1+TnnkL49aaA7d84
332PtwD4Lt/HMib8rHJLtmGK6AyPo8Y8/vsLUBe8EbBp+53Un9ME8PsxAc7n
XAGPW55nLvC438V5e53LsRKymGNLzKq//+95KAR/NXwi3hYI4cfbfLy1CHjs
FrJfD4eZbS/lcu4JEN8auaUn9N3rzwhwnqVzO/WFqPfeC8DvGgG7cfq4Vdp2
AcbvChCvmvWUp1cIIXcn12+JEHHSn59jLzV5o1uHyh+HhdjHU4h4SOLxdoHn
Gc05N+jOefXia0L23+27HnM6i1hg438GbfJ43FiKoPdiEXDbL2KiL3bKQf+K
cN5Xi4DbBRHWT7JF/LvbsivvV7rP0pwLlI+EYjbZcqvHrNdinGMbxag3nMTs
y/WVHnvKxUy5rkx/Y5QY+cVAgnhcKEGeOSEBfzIkuFfck8D+zXaoszvYM5+Y
1gbxp+2xj4cD7iVn7JFH1zkg3sOcwIvpLrBPc0/Beczr/d1SnMuaep/kruX1
cj6/r3RxZHQ/ktjz+48ja7Bbwjp3dkS+LeH7ajuA/7EOqFs/OCD+NPWkdNFk
tn27A+w1cEB8ihxY9tT5HmGLHFDXTeKtlgPqJYUDOx/grvzQketv5YTzYJ0T
ztWpUuT/w1LUpef4fcjOCXIOOYE3l5xwP1vO639zZ+yb5gw8vnFcdGXA5Qvv
m7kh3ie6ou4Y5MqWdBznUZ/nyuuv/dBP5MbKK3t6mHm6of7/5oa89MoNcXjR
FTzd54rxxa7Id2ddcV+xdUM+k7kBp94y1B1CGXiwUwY+dnPFfeKCDOdXvQx+
Ge4Kffu5Ig9VyXD/6uGKvNUsA0/KZMw0olyZH+6G/mo3xNk3V+jd7Ip6Soff
g01cwce2ruDTSxn8UuAE/GY4Ix+/lLJx49L0E6c4Q/88KeTPk+FeG+WCvFPL
70d/OCPfTHRBHnR1hv1yZ+TpBGfcXzX8o/vAFSnwj5Li3thZCn1WSIGThr/k
X30peGfB9RrlDL758XuYP7+nrZcCVw8p9H3M+xlS5N02zvDLfmfYYe8CP2q7
gGdSF8hpK0N9sEuG89BcBr1XuQJngSu+b3IFzpp7KZ0LwTLw10+GeNJ2xfnZ
3hV1UX/Ok018/WRXnFPuMvBmowxxneCC+1QHF5zLrvyd4pULcKx0gR1vXRA3
PWXw6yYZzklNHqB+Ned7O65fFxl41F0G/y/mvDnmgnxwzgX+eOKCeLjngvN8
iAx5wEAGe3RkiHPNvqSnvgx5KlaG810hY25WRe5z2suQ59/yvNRJBt7qc3z/
4nGwTIb918tQj3jIkA+dZPCvjQx8mS8DP6dznCx4/Ozm9ofJmJdyhkeOqwz3
Uy8Z8nGFjN9/ZeBFKo+j6zLWde+aqmEzeBwfcUU+7uuG86HCFXKGuSFfn3fD
ef/AjeOyH3mpmMdndzf4R+KG+3JbN6bV8m+2G3ihmUd10zA+r8EVcaKJT6q3
0t1gn2Yf8oumJfs0tRu9O01ww7ylbsBX4Ib7mia/UF6U8X2PuwG/7W7Ii5vd
cG7tdUPetnGFHRd5fkl2Rbw5ugJ/TR4kP1a6AnddN+C0jtt9dD/0OeTB1i6v
0X8q8QBf4j2w/0kPpt2ts8HmIg+mtOgZXnjbA/Ze98S+r3j7xZO1GViuWmou
x7w2ctzDxsuZX0Y31vGzJwt4ONIjr5Mc8z/LmbnujPD5Ot5sR5qxlnZrHzbD
R6vKWeCNd5lkb3bDu1jl1OSLebt9sS7CF3n8mS/L31RbWdLBlyU9ncX+uO+F
cyScy3dXsJE9qi13Fnshjq55IU4uKlDXyLyw7wwvdmziRLVes4IFv2zSv9TR
m9l2m8u2GnrDn7+8Wb9TuZXLD3vBvi3eOD8/e8F/Y7xxvrbxQn6754V8tN6L
7Skt1dQ/XtB/lhczDr3hviffC7y292INth3UykNewCfDi8Uk6lYZnvXCOWri
jTzf3hv+0OBE/rzlhTyhsedOvon64xov5GU3L9Z0/I1y4UUv4C/m+271Ah52
/Lszx8HXi/U59J+ZlTNf761go4dO0BrfJGddrXtZpQ30RB17yRP295TjHPvq
ybadfWs5c6scdYm3HPnRWQ77NOPlT8qa73jImfP8RtXnPXL4dbOc/Xw5iqVo
+EF5/64n8kG6J+JSw4uUmiLLjHpPVvG93uxgkydw+eXJtH7luIdpeER8GCNn
jjOHG+isk4O3JnI2vG1ftcMQOfjaVc6WDW/Npg2WY91tzsv3niyhZLJBRaMn
1nfmPP2hkd96jofgOZ/30xM8SJLj/G6rAB6f5Lh39FLgvJqqYNdcmvV9QxXs
fqmO1QsnBea7KcBfDb935bcN/9BKAV52UACHPgrmMPKh+6xvHIcvcpa3fBCr
fC9npxcWNP/qqoC/NPOJV9oKZhrV32DyBTny3Rk58sMDOfLRfTl79E4v/GQh
94+WAnX+B+6HV3Lg+VYOPnZRIM4nKsC3fgqcZ0MULKQxWxXRQwEchymQR0Yp
kN8X8XUbFOD/AgX4t14BnNt7sWmyacy/WsEsTxiqF9cogHNrL8j5rGATTPLN
Onfxgj7fFIiT9wrkiRQF/JOqQFwUcpwPeOF+4OcFvURe4FGAF3g3xRv1hNwb
fg/0xnm22gdx884bfq71Bj4lPrBzhC/uCd7ewOUb//7DG3Fg6gN9NePkpwk+
iO8TPoirzT6wc4cP9Gjvg7zU6A17NX3CRyOH8u4cnr9G+sJuN1/wQtOS3g99
kKd0faGvzBc8+tMX8WfoCx6M92UnTb5bdv3hg3iu8oH9v31g908f8PIvPv+s
L/L1cj/wTtePHSx8XPltgh/sv+zLLj3+qSqu5nJb+SHP9PUD/iP8kC+n+SEf
dfFDfFj5IW/s5OM2fvDLCj+cZ75+wDmV75vixyJ2PTVLLfBD3m3nD7x6HkAc
tzmIOLgdAD71DUC8twqAfzYHAMfRgcjP7kGwwyYI52GHIMTb4CDYNSUY8fEu
GOfX8kPINx1DkVdighE3kwPgj50BrFA41eOoSwD4Nz0Aft0SAFyW+SEvj/CH
nip/5Iswf8RlvD948dMf/rAMgD4pB6F3/wD4+etB+LMkAOteBfB8HoB4f3UQ
703jAlj9jtkGibEBsCMnAHnoZgDiMZPrdTUA+Xh1EPhZF4T3k3+D2e/Gj5WR
/Q4Bj6WHgEMX3p9xCPMOHwKPTh1CHugVjHPzFcdxRzD8PDMY+eIzl78zGOeD
azCLz3rpnqeRmzO5jVb5hkPA0+UQyzL8Wimz5LhXHmLFfp2YkTAE8x1D2II3
vVi1cSjsWhcK/SpD2HTpJ9XNqaH4bvv/LeEwIAz+CwjD+dIQBj1PhWG/m2Hg
04swNrfkR/MovTCs+xqC+SFcnl0I5lmGsj+ftjPw7hMGvc34fKswNnVPnVLs
E8ZWzRvoMSs4FHZMCkH+EgVB3hRun/Mh7CcPYTeP9rMK3snxNj6E/GYeiHcq
6yDUpdOCUJ+v5/7YfAh6mR0CHh24PNUh6POc4zojBPpocKLxyyEso9cblV5Y
CNbJQrnfQoGjxj7CJZjbGcD5f4+P54Zi/fxQ7Dc7FHqtCoWfXEPBo3Oh2P8d
n1cfCvymhsGv/cPg/9m8fcL18ON+KuB+afMP8DrC25B/IO/cP8Ct22Hwa/oR
8DL5CHBcdBT76xyDXX8dw74xx7Bf0zGse3sCfhOehL1vTkLO81PQo/EE7DE6
hXbeKeA2+iTk6p7EflmnoL/8NOR3VdJ6x8XhmPdSifZ7OL4bnGHVI7uGL+wX
iX1ancH41AjgXKGkfHC8PJzpP/xgOUMZQXHf+DuccCl7EkH3xrzbZ2ieriSS
7Es+G8kuRHRR/6vk7a8oinvrrWeB54Zoyi+zGqLxvdtZVtlf28Om3TnsM+gc
yZ1bFAW/G2N+9j+RwH0O5OrFRWJ/VRQbUvvL/Z867G9kwvvzotHXjoa+hryV
RJMd4m1R6BtDv5rNkWgbI7F+cBTwfhAJP26LhJ1tI4HDP1yP9lHAcXUU4fZd
09I4l78yjq/vG8XWb20yq47l6/zPcD3P4Hv2GfjHhvftIsALEyX4MPJf6LuH
4z74DPn9SV4E7Gx9FvwpjwK+n6Ihb0004ZrmHQ0/G3B78yLpHAqujKJ1bZui
MW4eDT4diIYeTlyuaTTxY/14yHGsjya7i5Twa9neC7BvIG93XUR75SLwGnQR
++27CP28Y+F3i3jIv5NA582QV4m077u1idSP6J/Exk78pkxsSKRz/1+WyO7m
fjdL3pYIfN8ngK/zEiCnTSLaPxJ5/CeCx72SwEOtJJJbrZdEfDqvacn+F0ls
/Oy2avP7Sey/K22qdlheIpy1ByXT94LnScy2cyv155okqp+XByTSe7WvRr8W
vfQ+c7lfkijPqb0SaV43eSLp3zgAes2fg/HbhtBvwtp44B59Hny3iSVe9F4V
Cz//ioHeeQnA8QKfr4jHvK2x+L4lFv4Oj4PdBbHE36Gx8YjLPfGEd8yeRMIr
Yxnw6zEvkey63JSIODNKAq4zk4Dr00TWcdEP/c3eiYTXnjquf0/g9GIJn6d9
CThGXSI5v+IuYfzxJVpXt+Ay7TOtWyoL+fjbrLgolXCZNCGVeHV0SyrZK391
Gf5+cBl+NE8lf9u7XoEfg6+AN85XoOeYK6RH5JHL5L+bTqmEy73uV4DTP5Df
zyWV1j/qkAa/NeG79Z/p8KdtBvnN42wmcB+ZRft+vJsFu99nYVyUSX7eVpcJ
PYdmI45rM0mPoY/Toef9NOA7+wrhsV+ZDl40pJP9B8KysF6VA7wG5ZA+I0To
79+p4uePGvnQV0X3qEI9Nfhojf5DTb8FV8exudRfMDOP+Dhu/FXqW0dfJT4s
W3GVxm/+5K1tAbXmEQWEx/HBhWjz0VosKIK+9TdI/htZGTsX2ircYkIpfdeN
vkU4JE8sIXuMDpTS90etymh+Z51SnPfjMZ6+hK/veBfzk+7QvICLaMdtLmMW
wt+WI0xLSa790xLSv6b1Deh1+Sb6U25A71030Jfcpn3Y+xK0vjehXzhvza+T
PKOzXE5sMa3vPO8W/J14C+NSrLdqWwa7B0Mf636lmB/B7fWEHmdn38L+EyDP
fBnk63a+CbtrivH9VzH0khRi3uMC2Le3EPJiOO6Tr2Of83zcAvOMjAs4znz8
F++XwW8WGwppnxFtizC/O+9nw88B/12l+9X8+lzYZ5ZLfHVoyKX5nmPAp/lj
M6H3khzkwYJsirMbw9TU7u+O+R8fqEn+11wVxdVi21zSY+QNNfl3xcE86FFx
FfM1fCM9UwqAx8l84PcG+j+aD7uMqvPhjwNcb718ku8/5irtv6UqD3LM8sHf
pnzIX8bX7eB4neNyxRxvN+Bx9gT2+dilgORed4J+nhZ5iCvTPNi/Mhd2XM4j
/wd/zyU5gs+ws3aEmuJJNF2NOFusRt5/k4P6qRv6qyswL2tPLsVxpDiX+qad
c0nu7fVou71T0/cXR7Euub2a4qPj8Rzkz54qnHe/MpEPX2cgf83KpO/GWRnI
ezGZlKcHGWRDj4IMssv5ZAbyyJt05MHmDMixxfoMuwzktUt83gzwgJXl4Lwr
Rz6aNUVF+gf9CT7EyOD/fs9ykI9fqMADI+j/ekEu8rxlLr0jGU8GrmIJeKhu
RJ56tgC8yjWAH3wCc0nerLl5yJO7ML6gM3jleTsXenXIQ53QDn7c1oTvvebw
vFfB5y/LIz33dkB7dDrkfb0Av+a4AX/JKc7rDrkUL7t0oO8kJezZtwHzVv4L
HNwGqyFvoJrsCQ8HH/6WqAmHor3I32Xe8Mf6yGycDzOywZfMLNpvxrUs5P/K
TMiblA3/vMsiHMYuyMb558jbimz4Z1QO/LsxG/4ry0b9+Sob/vqN+G24xsdt
ILetPAPj3zNwrqem45y8lUbnlkWvDJxnM9JRbx9JR37YkQ57lmWgnpGAdwHO
GagbFmM88eoVzts08HNwGuqcvWngza0rqPO6pNF8cbcryDdL0hB/bfg+H/i6
B+DtUc907FeQDhzf4zz16JEBHlzLAK6OOMfVazNwfqenob75noa6ZU0ayem8
NQ11m1ca6ofytP9bh/jLgh+LswinJ2PgtyEZWfR9yQ/4bf93fB+kn0O4GTqo
UT9+VgHHbirUka9U4KeWGvHQRQ2cPqmAw84c1Ekaf1EdEAy+7OiYjbrFGfEq
O5WJeB+ZCf238fiP4HifT4e9o9DPOAqcEy+hHgk5zvH4Iw08i+LzctJQb6ek
g0/94Ice+9KRbzTzaHwDl1+H+dU+6H82g/8n2SCfzDXKAK4vka8WpmWCT748
b83NBD77eb7RRTyk7clC3bwZddf53CzUc37g7VhPrte8dPB6ZRr8cyoNeTId
rVES/HzzNvy+3JHrLU7H9+B08MuR9/0x3/xFGvLOb85XKb5/1PCe9psDnkVM
z0BdeDUdcTgBfNSy5HVeb8wb8onjcx11ZnB1Ou4x2agTdU9xflunw0+JsEv2
jNelWXz/Yowb/wT/I5u4X9LTEe/iNOApT0M+CUT8vAvl9uSng6f5sFt0iONh
jjjfMwf7T7KAXharePyvh/zspdCz3BL16xJzbueSdOTfFdBrxzr0I7LAr/k5
8M+pONTdRfU87j+BT3MfgUdDNHwif/cC/7Rn8TiXA9+0aRw3TV6gvNmB56VO
vH0Bu/eX8zy2L5X2a9c9FXmj6DLhs+bSZeDx5TLmt0vGObQjCfz6jvtmY5ck
4PWD3ydXxuP+tToBevvE4R3hURzOv4hE2udhaiLb5NbRw397AuET64TxqrGJ
9M4+VxBP+l2vj6fz/9fqOLpvT5XHkL2Vmvtyiz7Go2JovbNpLI0v3xJDeozP
vciiFZ/da2bF0LyNLy7Q72Jf11xgbjvaa/ksvsCEvz4p4zT38ZbvGckxZK9e
VSy9O9TMiyOcxSMSKc/0lcQTDls2JzDJwC5Vn2cl0LopTxPo3vijJI7eD44Z
xtP4xUDcNx+ci6f7fdnDOHp/rjWKp/dn61lxuMe2g51lJbh3un6Lo/u/7dB4
8suOjvF0P533KIHOW3e7BLzT708geUd9Euh3lEfZsfR7W2ZJLH0/cSKWcKnL
hf0DPsUSjy224D2hdVAs4W2gWdfyThEXFku4Gw6JI/62M4wlv3VvjGG1Kz+4
jxwdS+Nm2nyfIbHkdz/9WPbp/FdVw7BYwvtdcwzZVzMohvQ2abxIv19sMY0h
3A63jmFfC7trvTSLIXv0Nf5s+d1fpzvaZToxtM+V3jH0+4N/zEXiyYegi6RH
cHQs+XFPfCzhbXUP7wBPPGJp364HY4knw6xgT96cWNpHuTiW/BS2Cd9jk2G3
8Gg8yZn0IJ7Go8wSSJ7py3jiR5eleDfxmYD3gMf5cfR959p4yjdXBsWTPv37
xhPuoYPjad6YkXh3uDcpnnmd+tJs0TWe4nfwjjjkA3E81U3P3eOp/zUonvLY
PBniJ/y/eMLZqDKe4thBjnkrDmBfW+94wjX7fDzF2Z0P4It9BN6HHDU8afFL
a0/wY1tJAvnj47sE4tc5Gfjz3ha8OuebQPlunSAB+Gn2b1k32jCBzpEhmnUt
/plenEBxZqmNd47zHROJT7s7AJ8Js3kcd0smXrcVJhMON42TKR7iY5NJv7Kr
+P5qWQrFd8EFtJ/XpND3wJspdP67XUumeD1QnUz6HalLpvG0iSlk38AbyYRH
sH0K8bFRkUJ8334phfAqvZJCej1/hL5fXgriuB/eQTbnXyb7nm64TN+9NqZQ
/rBQphCuS/5JIVyHRqdQftjonkL6ZNTg+6UBeIdZ5HmZ9Fvilwr/F6WSPZcj
U8nPJXap5EePglSS77j1CvnbVy+N5j16jbxcMCyL/GFpmon7gU8O/u7IWEU4
H9ZRk951N3MIp1cJWfj9aTfqrYfaalq/fIyK/LR6oIr81F0L99WH13Mg3wj3
pYMOuI+cbEQ9/mIK6vof7fBOklOvJv9lmaG+Zyrc17QzcI+V9cL9zF1zHyM/
DswhuSaHcggnnSDcez7aqJBvNPe0Fr/1ao+6fA1TEV6pXzCvokxF+zj1gvzX
33FvmDQP9/HZIdBv/FTcc6uzcD/JG5SHc/0k7jMLS69S/2FNPslNMCqgdYGe
BaSnY7siWj9YgHeP3eUFNP+iyTXM31REvAgzwH05JAb36Qf9Me/MZrz7pNUW
oE6VYHzBS9zfBVsKSf/vvzGvLuga7Tcnp4jkrJlYSHb+7lVE6yaxQtq3XXvo
e3BhAeF8R477X827PMrfs+7nU7slJB91arsCmh+YnE/yA43ySe72dbD/v9FX
aX7Dpquk54iFeDd4IMe9UHQ+j/QMPYp7ZOpV3PtKL+E94v5yvEP0PYh3hqeG
eDfoJ0R7tytw7GNTSHb+XFVEcqdaAj/p2CLCvfX4Qhov9iwkPZaZwP7X3M7H
EVdpfsHQfPLP2Hl4t6j8Af1rp+bTOp1VBdQ/3RY469zCu43vdbx//FgNPX+U
XyX5czXf6V47B+8f6pd455veBfbphsHuvirce9feRv9n16ukx7Zp+SS/QIXW
LAn45p8DH87OyCf8wg9A78idGHebCH1/5mKfidXQp/ta6LHAFHJ0TGBnxTT4
b1dPrDujBT/rN8C+aV3ywYfnwKMiBPKmxMDuC1rw96IHiH/3MDXF2ZdUxNOb
wRj/PADvEhPPq6j/fgriNnIpWu+duK83D0G8f9Xkm5a86lGOfDJyqor2vz0A
33f2xH3+2XXEq2kB7m1VDPstXITvHgzvAus34f0mQQf3Oh9b3Pfqz6koL04b
jjwXrNmnBaeO3bDPE13kgalBGI/diHv6/vnZeO96jTzl1jUPeeQc/NmrN96r
Hu5F/+l3vLMUf0HeCuybR3ptmo53rLgO4P+y7ZAzzwzxIV6EeUW6iEfxFOSj
4umQczUBcl8OQD669wfewYZMxXtWZ+1c4HoYOG9LBk4/1cAtyhhtz3ZqOk/+
3AQ71Y9xvw3zyKL+zVdZJP+1L84Hw9d4D7GckkX6XbDJJtwHjsT9ePZKnBMR
IXjfWKKVTefBz+M4N4YfyyI92q+B3GX9sb5Zlk3jpl7ZhMeGgGzar6Yui/TU
E2WRHcLJWbSP4VL8DpCwC/fQ2Ht4//+rEfq59sa7v6IR96RbArwHPDTE/bV0
Ct75R/WDHkfWY//wzCzWeX075nciC/yzwXvPlwXQo6+Mvwsdxrl57jfW/3aD
fsd1IXecAe7NzoszSd/nidj/fBNwWPkR/RkWwCvphYr2fxKM+OlZlEP4Btao
qG7x3wXemmnhd4XJpXjHqp4FPnga4V3sZQfwwkuM97rdUnzXb4V3vzt14G1T
b/BE/Ak8n2uD8/jK3/j+Zj1/XysGb+qsIW/pQvBzxZQ8xH0ozol588B78Qbw
dQJDmzcC56PrO+yfWoj1NVo4F74OwTth8J/IL+vy0C5jaPUakU/bjUXem/QR
50rXYTgnUlcgH/2xG/N7vkUcNZdgPKk0D7zKx3k9owH6HK2EvnO3412y7yPk
4cezMX+uMd4/zUZBb+NG5JfcG6hHjNPhh/urOO6jgY9SF3G4LRPvy/PLgPN3
a7yPDo5FfRT1MQf3wFc5OBdr8a57fV8yfU/JxO9yW1akEJ9WdL+M94cj+N0z
Ym8K8VTshDp28kS8rxRNx329+2jc3+cUpvL1eFe4tQzvi9118T4lNsV79M35
eF+YvD2N8O5kiN/zygfjvSFqBO75hSW4/yv9MwiPHX9l0Hzfu3i/HuKLd75r
mvqwxa597cF33bNZpH9fH9SNf5fhHabPDbwf9TPJpP07ZOPdUpgBPQc14V3p
1k3kn4sWWaS3oA/i7XN1Bum1qgr7T7uVSevT22aDZ38jX7/X5KOW+vBZczbJ
O26P3wW6uecgXiYhbhbUw7/bV6AeNQ/Cu3iWFfy3eg/yqv9h+HvbAOTvPFvw
eO1M8LopC/HxxwDw4NVN8GfWFMj9zdc90cY63RmII88ViI+tL1BvLm4GH720
cK7vPw5+t9ShLXIXv0f+j/qJOnXiWPBPugvjPnPAX/k78LDqBM6VYFucT9Oa
IM9XBn3OVCC+ak7xc+oJvq8chvjKr8K68sewT9jtKumb0wf6PRqCeqezpu5r
we3lVMSZwAtyIj1hz861kG/hCDmtI2C3gRfsbtgGfbSHoT/WGN9Lx3K9HiJe
75WgriyZhHZPf+zj+Ap+u3SRn5sVyIPCj8Cp+SFwGq2DvJBSBv+fVfG6/wHi
+msacMxaDrlDe0KPMfugxw89nOO79aHvuM6wl+lhXkkXfD/ZBXbafML+gx/A
L5cq0fd+gf3qGqHX4Bq0kuXQL/4E8pZ/Kuy2C8d4UA3kH96AOs1WivvG3hUF
pJ9JPPonk1HHZg4upPEbX3BfKDlSQO24LwUkt+k57hfyD4Xk5xetcF/IOo91
bT9j3bNbqKe7GuH3zXmL8XupNBxtjzZFhJftz0LcN8cVkVxrY4wbvUe9ftqm
iOQM+4J1EzXyWuTPjkK/vrSQ9hdcw37mzfi9sIcRxieIUd9fGoz7ADuI3xdF
LmjVlbBjbynWzdpWRH5qsxTzz2qjzq3zxfly7QnOm/G9MX6Noc27jnp3XCvU
ySGzUJ87rsC9qM8u1OFVo1Ff2zzBPJe+8IM9/13/7+34nXOpFe4T42IwbrgF
974htqjHjQ9Dn3dfEXeFP7Hf8FrU8zNawW/TO0H+hUbU9/sm4d55uwf8eVGF
+8nhWKxXnYH86c9gl9YA6HM/B/fAkAqcq6VrsX5Cd+DWzxQ4q1cB11j7QrKv
22Dg22Ui8IwX4nub95g/ZgH8+7DTddqvadV1ml8w5zrNb3/iOn0/Yn+d5Cn9
MT4oppjwjmrA/A+zi3EuOxbj/v8av98H3SsGX6SYP8LsBrWPT9yg8TfCEtKn
0bqExqu+3oSfTfB3DKOabpHd9k/RxlzE3xuMK75N/dpnt0mvHttvEw43Rt8m
HNutxt9RbDTB3yNo7cDfV8y3LqPvaybeIX2Dpt6hvkcjvrd7j/bpefx9Rbul
mHdOVUp93cultO/Gv/D3DpbqMuSzMXdpnmoz5s9X36Fxi193aN6HuZAXlIJ2
4cs7pFdd9h3Cd/FL/J2HTA/rzB6UkZz0M9jn9WaMH0vC/As3sM+f/6F/9vY9
krdk/gP83cGxBzTuuLyc5q16i37Bnw+onzuznOxed+kB6fNzfDntP6XvQ5Iz
t+wRzet5/hF9N7J/THqcSkM7a8wTWi9a9YS++yegX2ZZSX11qyrS4/sM9Lsc
r2r5ruz0o7pFrtW2mS9a5HgkN6AtO/eC1gdlPCf597dU07qth6ro+8EZNO6x
z/AFjY/VyGnp/3mxGvWvC+TmPce69FP0Xct5E/qCAc/oe9pg0kO/fkUl4bHB
r5L6x09Wkt1OJZW0bmjaU1pnXYd1AblV1E/MhD5Lx8Ke4VY0zq6vgx7a5s9J
Xl6759TvEE6tFRsH+979xnhQUA2ND71EbVXBu1ck7+LOWpI3cEot7TNJC/0L
12tp3pC9aH+0raPxcKd6mvfNpJ76bZY0kBzxzgbq/93/DbWvpa9pvEt5LbVj
5mN95m/o4RxeQ3KCAmvo+4yONXhnMamjvqWyFryNq6P5w1PRr38B/To/J7n6
D7RID3WpHG3rAuzbw6KB9I6c+Qbn12/ST7299i2tK/5E41bW5ph3Kgt2PMl5
Q3ptYVi3Zv8bGp/qgnFhX/SHhb8mPbZmvKbxa/n1JLetGeGjNebNa5KfuAby
y1dSa1U4hdbrp+ZDzuN87PPtMcnX6tiMfdwMCEd1WSLmmz7AeKd9mKe3tYH6
f8vwPVyM7yOnvCV5/+56S/342WSv8l2r96Rvauk78OP1O+of745WFoF1be0h
128atVpDwqD/3FVkr3rRgnrqpzSRP9WbxOQvfb+38EeaFeYNrQQufQvQ7hgB
vxTAfqWnKfR9fha4dHgH/iR1BK5aHfH9kD/2D2gFnJxTYW9HW3x3WYD1PRMb
kA+aoYfPAujVY1Md2aFzH7xvlQD+TZr7ivqxH1/SvGU9KI6U5fWIm75/PCc9
eq/B+KrvVbTOrAbxtlCNOCucSPlES5mPvpGomr5r1yLu822QJ04aQ87peuSH
VxuQX/oPx/pbrfH99yasvymnVtl3B+K99wbav2qoKfa/2wA5N40hp/tm5CeT
fpSv2PJIskN5LQPyt6djXeI/yAe7kb+qfuzAusUavVvy0bj3z1A35FTiXeZU
FfsfQAQ+lQ==
    "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWxIXSvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
H8mzdvZ8m49Ut/lIdZuP5CfCsufbfKS6zUeq23ykiuYjVTQfqaL5SO9ZA7H5
SBXNR/KDadlzNB+povlIvrGJPUfzkSqaj1TZfKTK5iNpqUGGVjYfyX8La8/m
I1U2H6my+UiaTJOhlc1Hqmw+0p+fWUYkQ7UAIkP9mF7WXs1Hqmo+knUc1l7N
R1IkQ6uaj/Tn156/SB/JLxcM1T/QR1Kkj6RIH8kRDFWkj6R/oI+U3q0sDkUf
yes/MFSRPpIjGJoG7MBQgz6SV+xgqCJ9JEX6SIr0kfLPb18jgqFelYKh6Wcn
F4eij+SnUYKh6XvvWPukj+RYrH3SR8o/P8H9RfpIivSR0hvZrH3SR3Is1j7p
I2mCSB9JkT6S93Y2a1/0kbwoH6x90UdyTNa+6CMp0kfyozo3a1/0kbTcp4+k
SB8p//wg+RfpI3mr4LL2TR9JkT6SHxE6Wfumj+RYrH3TR0pvwbD2Qx/JWxSb
tR/6SOnnarP2Qx/JMVn7oY+kSB/JJ83N2g99pPzz8+x/46WP5Fis/dJHUqSP
pEgfyRdhF2u/9JEU6SM5Fmu/9JEU6SN5/+aw9qCPpEgfyc9tHaw96CM5JmsP
+kiK9JHyz4/Vf5E+kiJ9pPTDzll70EcyBJK1J30kRfpIivSRFOkjKdJHcizW
nvSRFOkjKdJH8lNsN2sv+kiK9JH8IK2HtRd9JEX6SIr0kbyptll70UdKL1NY
e9FHcizWXvSRcjz0kRTpI+V74RyRPpIifSRHIFWRPpIifSQ/4pdIFZ2I1PHQ
R9LskT6SIn0kzy3JUF+GXPyzVIwUqRg5kpLiDSk5BhUj71aSkmNSMUo/Yp9N
TipGfmgxKemrOGxyUjFSpGKkSMXIWwGkpL69pORYVIwcSUnNVEjJsagY+VHK
pKRmAaTkWFSM0u+uOBQVIz+egJQci4pR+gcHWPumYuRHOJOSOu+TkmNTMXIk
JfVfkpLvEh2RipEiFaP07x6w9k3FyJGU9H3zrP1QMVKkYuSfSCQlx6Fi5J1s
UlKRlPRyiLUfKkaKVIz8fGtSUqWSkuNSMVKkYuRISo5Lxcj766TkuFSMfDom
JcelYpTjUjFyJCXHpWKUI6gYKVIx8r4+KTmCipEiFSNHUnIEFSP7GKTkCCpG
ilSMfs89ZO1JxciXF0hJRVLSv4nB2pOKkZ8yTkpqgkxKjqRipEjFyJGUfP9W
RCpGvuhBSvqnOVh7UTHyw85JST/agbUXFSNFKkaKVIwUqRj5YgspOYqKUfrv
RO36J1JyPlSM/Ah2UlJ8JSW1WiAldfImJedDxciRlJwPFSNPVEjJ+VAx8qPf
SUlfkkftc1AxciQl56BipEjFSJGKka9EkZJaZ5KSc1Ax8hPoSUlFLjy1liI0
56RilL7eydonFSOvOolUHTdEqn+2hbVPKkbWcIlUTeKJVC3piNS5qBgpUjHK
d7+VkUjVSyZS/esxrH1RMfLz+InUuagYKVIxciRS56JiZOgRqXNTMVKkYvR7
FDhr31SMHInUuakY+SkJROrcVIwUqRjZGCNS56FipEjFyJFInYeKkSIVI/9Y
AZE6DxUjXw8iUuehYuRIpM5DxcgXS4nUeakYKVIx8o8kEKnzUjFyJFLnpWL0
e4gta79UjHyRlkidl4pRzkvFKGdQMXIkUmdQMfK1fiJ1BhUjRSpGfxCCSMXI
kUidQcVIkYqRIhUj/4IEkTqTipEiFSNHInUmFSP/xhiROpOKUfr7ydqTipFb
JVJnUjFyJFJnUTHynWlE6iwqRr5yTqTOomKU/rkn1l5UjBSpGP3ePGsvKkaK
VIyEOSpGilSMHInU9VAxUqRiZGISqeuhYqRIxci/jkOkroeKkSORuh4qRn5w
GJG6BhWj9I9foXZfqEHta1AxciRS16Bi5O1mInUNKkb5XjxDpGLk7y6R6t/g
Yu2TipEiFSP/yAmRuiYVI0UqRv7xciJ1TSpGjkTqmlSMfr/rwNoXFSP/uAqR
uhYVI0UqRo6/b+x/At/KmSY=
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833436494629569*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"3d9520f3-7594-4b17-96d9-fd6ae123c29c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8334365079620376`*^9, 3.833436507972039*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"b1368b7f-72cc-47de-a95c-09922025754c"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
LnVrxust1ivF0GacrwqJNfMEr+3kaY4zYf93qBnvx7dg/X/WjP2Vj/WvQvM8
5bBdLuZt97D+tWnO8+c21v/BzXl9603rqS6pOeePKOz/DzRn/yqo3PJEsO+N
UwnjfmL9L+vM+53nxCoXZy4fhv1/sOBOhxspUqZi/5/ozO9TLsTmvc78vmKH
9f+RM8dfNNb/Ui14P+qN9b9FC26vL7G+fwte7xVY/xMEZwRkpk8oS+OV7G7B
/qhMLL/fgt//exCrC1vwfiAE+pu15PU3nNjYpyW/r2N/Y4lvyf0XQP+Olrx/
uA79dwXPP347fcMa6C9oyfp2QX/jVjzfl0F/UCvez9yD/rhW/H7K+5+trXj/
Ngb6b7fi/ck06P8luFbK0fSvQfC/kwvbawn838uF32+T4f+pLhxf2Vj/N7nw
+/F27H9uCKbzwlnY/3x34fMLvG9ZHFvnKZvWdDKbgollPVrzeJsh/ie1Zv2O
iP+NrXk9G07vR4argpdapahf90f++9Ka12vka2l9Oc/n6sj/3eQ8X28i/8UI
njHILyEiCflvnZzjN4jaN10SfMrlrzn+MNZ/i+DZ205pV3lg/avbhudTHeS/
Lm34vCAf+W+84HYzphi/n0D+W92G5/tq5L+MNvz+fB7570ObkvWWWFW7Lecz
Xv+VbXm9H4X1P7It59tr0L+iLY9HDf1GwXtW9/B5+Qf6c9uWvB9i/avpyvkX
+UnfyZXz7SWsfxGuPB/vYP1bVlK/DPLfWVeOj9FY/94J/ve4kc9wE/RXc+Px
3Id+TzdevzFeyyjBprWOCe83Q7/Ojd/PsL9QnXJjfzoi/79x4/O9T9BftR3n
72zodxd8Y8Ma9YnhxNIR7bj+Pax/Ke14fUX/muPteD+tovb1L9vxeEdCf+X2
bL8e0N++Pa8ndfD+p27P72NvoH+B4Ik2FbMKVmD/d6Q965mF9f9Fe14fDmL9
t+rA9ub137UD72fwPqcaItj+v51G/6vQnyz4x517WmUV7P8PCk6x/JCVzSA2
Z3bg9SYM+//y7mxvf+z/5e4cbzOw/g0SPP7nhDT7jfD/HHd+v3+J9W+/O8fb
Lqx/T9y5fzn2/2U68vqfQKxuJfj4p94J3nhf0A3syPujKMz/WYLbhA3Veudi
/u/pyO9jgzD/H3bk840pmP8Sjzzlz2u9tRGPMP+dBacNuOs4aCvWv34evH+R
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
3WX4P3QCzx8J9M+dwOf5n6HfMIHnw1vEf+YEjs8PiP9yEzk/WkN/64m8nrcm
1oVM5PxWm9g4eyK/nzXA/N8neInlbPqmatD/eCLHYyPoLz2J9yPNoL/lJN6/
dyc2DJjE/QXD/9pJnP+7wv97JnH+Gwj/P5jE8WyF/FckuF1cO8X8l9DffHKe
Mmytk9E/G+tf38kcz2WQ/2ZO5vF8h/93CnbxvOhTxRr577/JbJ/f0P93Mq8n
n6C/yRTeTxyBftUUnj/HoH/6FF4vLkP/tikczwuofe2dKXx/MA/r3+8pbK/x
yP8Np3I+WoT8HziV811brH+xU/l8IpFYs3kqz/cUYv3Nqfx+1pf2J6YfU3m9
+UjlkgaxPJ/fEct7xnL83Kb66smx7M8mtN/QpcXyfUIS9j/XYjlefhNbvpY8
X4D132Earwde1J6q+zS2L+prJ0zj+eRC5Yb103j9XktsvjyN16tQYunnaezP
EcSKenFsDytijV8c75cs0B8dx/5FuWlNHMcPxiO5GMf7XSXpk3+M4/nalFhd
Zzr7Ox76O0/nfAE2jpvO9n6M/d/K6byfsqNy2fnpbN84YlXedM5HXbD/qxXP
658T9n8+8ZwPWmH/N0bwOs8/YVULoH95PK/PZug/F8/+L4T+nHj2919iffUZ
nC97UXsmrxnc/nZiyegZvL8Omkf6l8zgfGdHrD4teOHlp1m/XYh1b2ew/49C
v83MPOWhp3/Tr78ktnScyeMtRfVlI2fyfsaWWLV4Jsd/E2LtiZm8v2xHbHg1
k/dH1sTmKgm8fqiJpR0SeL8xklgxLIHrRxJrFibwfFER648m8PtZMrEpK4Hj
+RixpJKW9R6BfjfBm0Y99zl2CfqHanm/W2E+6Z+n5fiqvoD0H9Lyelx2Iel/
puX14M4i0l9hFucnW2JVm1m8vpci1g6exfMnlNiQNIvjsXkK6T8wi/fPCYtJ
/9NZ7I9IYkXZRH4/rEiscUnk9a0+sT44kf3VNpX0Jyby+vGRWLIvkd+/gnSk
/1Ei728qLSX9pWbzfmUP1de1mM3rTRsar7H/bJ4fI4ktCYIvR7lpV02D/t2z
Of+1h/77s3m+DoH+wtkcL4Hwf7M5vF9uQvY295nD9kwnls6Yw/uLZcSKHXN4
vdxPrLk7h/PFX2J9wRyeH2HUn6lxEtvnCPlLokpie9ehcnlcEs/nX1Su3prE
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
WmkvxuOnJFa47UX9O07EmqF7YT+X/vD/vL0c79t2kv5Dezm/R1K8SJ7vRb6o
2YdYXmEfz+d/e0h/m31s7wzyn27wPo7HXdS+MYnLs2cTWw7s4/aGUnuypyXP
DyFWld3P81u/j/S77Gd/X6JyQ/B+5N+Ge6k9c+J+Xi8jiKX79iO+90RA/6P9
iK9TgdBf6gDir5ovsb7FAfjr6BdiU/8DvJ65wv9art+7I7F89wGO1+dUX31f
cKXuBY6hSYj/wgOIr4gcxH8zA9u/Oj1v6WNAPL3uAf/PMHB7pSm+VDsMHI9b
ibV3DRjPv33EhoKS+k+JzY0Por+crkdJv+og9LSzOUb64wQv+Vroc/0KsWbr
QcSL3IVYf/sg8tWqIcSmXwfh38S31J6k4SGe3w+J5b0O8XwMoPrqqYcwvydO
P076Nx3i+ZhKbLxxiPNNLLHl+yG2pzOxTHYY9tiyktpX9TiM+XdzCrWvnXQY
8XJfSvUNGw9zPC2ncvPVwxh/7WnE0q+H0f+TiidIf/0jPN++0POabkc43rqc
JP0xR3h+Rp8i/euOYL5pt58m/ZePcLw3PUP6LUeg9+s9YnXdo+zvT8S6Lke5
/nh63jj+KObzsBxiy+qjbM+GZ0n/haO8Hr+jctWHo7BHw6c0Pm3tY2zPB6TH
oDzG8duJ9JgjjyE+ZqRRfenKY5wv8ogVxmPw/4JlND5N7jHuP/0c6a95nOPL
ntjU6Tjs02Q8sWQMl88YmU76lx0vef8xkv6zx3l/mEzlunfHcR912YHKjdVO
cH4Mp3KL5wmUP0a5LPwE4nVyi/OkX8flXTtmkP5TJ5AfW7a6QPrfcHn4NmJz
1ZPID4EqYmnHk6h/8y+xYkQJR18i/SnMAZuI9cdPIj7W1L9M+l+W8EViSZVT
4JCuV0h/+1Ns3/c3SL/6FMafH3eX9C8QvGNpKX2Ii4n0H+Hn7bbdIv0vTiEe
Dre+TfornoZ/XBdQfZXraTz/pBS1px1yGu1XKU/lhuTT/H7fith8kOuf7EH1
pc+YQyrdI/3lz3D7B/8j/fIzaG/RbmL9IOaWofS8aY7gkKjCsCZe1L7kwBmM
d+JzGq/8yRnYP7sM9Jc5y/Y6epP0tzrL5W2p3DjwLNt7FLFlVkl5zB3Sv/cs
9Cg+UfuqhyWcTO1pJefYfnpig3MJB1wj/f3OYXyu26l9aQKXr9l7nfTvOof+
q/iS/TX3zvH8NhDr/5XUn0r9m5qmo1xdjuwh6cNsrE8sj0+HfcJrk33U29O5
/U3Uns6Uzv6dReM1/kmH3u2d4P9GRtbvQuOTBRnZPoE0ftU0I+urAv1bjOzv
bKpvuFXy/D9i808uV8RQvEqdznN7Tym+FQHn2X9jqFwzhfnwHmK9/jzrb0P2
NF3n56vsRPx/L6kfQu3JHTPY3h7Eav+Mknim+rqJJfyPyo0bSvguseVKBs+n
YKov+5IBPU3K0fxS2V/g9qVUru16gcvPYv5rLmB8i35g/q+9gPsrv/eUP6SX
LrD/fIgVny4gv07KI9bYXUT7s5wp/+h9L/J+qQXlX1PURbZ3D+S/1Rd5P3iJ
8rU84yLWsxuNkP/ymWdIqX2d7SW0//Uh8p/iEsb/6zzy39hLWK/8o6m+bMUl
2KPpDaqvSr+E+atamEH633N7rpnQX+Myt4/8Zva+zPY8QvaVRlzm+Fh3kfQv
Zd6ej/x3hus/8YP/s7k915dU3yS9wvNjAbUv8bzC9nagcvmoKxj/fGcqV6de
gf4hZhqv7uQVHo8P1Te+5udvfiG2WF/l8QcSy9yvcn8jaHyq4VzuuoNYu+gq
j1dD4zUcu8rxHU9sNl9lfWsR/5WvcfvWiP921zDea1NovJowLp8VQuPVz7/G
65UXsenwNfZ/b/KP5MU19sdRKpdbXcf8T/1D5eq21zGecd/h/9DrGO+7JvD/
3OtYn8a3J7YYuH5Lf6x/mdd5v59P8aYqd4PPn2yoXNv6Bsr7ZhIbQm6gvTMR
1J959g2sx1s0iP/9XO5VBfH/+AbGe2cg4r/0TbDNR8R/y5t4/vUqYtOAmzxf
rYgls25i/ai0hsYn33OT95/VKZ7VD27y+90/mj+6opu8P8yl/ZSx+S3ef3lj
/9P3Fp73OEPlspm3eL+3B/ufnbewn7aX0XzT/neL7XGJ6hv+3oK/YtcRm5vc
5v1IPvY/vW/zfrCIyhXTb/N4oql9zbbb/D4wgcr1d27zfu0Q9n+/S9pzx/6v
0R3Or3ehP/AOv989IlbH3uH367bY/2y+A/sv7gL/37zD7yNxmP8/7vD4XtDz
sgYm3h+/pnJVTxPnA1f4f7IJ9s/tSv4zpDFfD4P/r5nwPZJHG/j/mwnxqomB
/x3u8vplofjVdL+L+HuB9vQT7sLf52WI//V3Yd+5KYj/K3cxPu/OiP/Pd3k/
OYpYXe8/3q9VIdb5/cfz6w49b4z+j+1Vkcota/7j84QKNB9lF7n+sC9UrvrI
XENJ5do693i/l0nlhs73uP1AYvO4e7DnGLQvXcW8qj2x4jw//2sX4j/vHvSf
i0f817oPf8esR/z73Of6FaF/7H2sL6PKE8uX34d95WnI/+fuwx5jg4l1Odxe
743kT2P1B9AbXx/z3+sBj68e5v/oB/CPXo/8v+QBxjczBv4//QDxcGUMtWd4
+4DPi5JofphtHvJ50xZiqcdDfn9wJ1aMfMj55TT2/4sfQp/7VWL9iYe8/8/C
+veK21slp+cl1o94/nzE+0+HR4iHFl2pXD3sEb//TSbWLSzhTGLj0Uc8f5pR
vFuyHvH8HYT3n0qPef7dJVa5Pebzz7eY/0Mf8/wqJDbMe4z+865C/6GS+pHQ
//wxvz8nYv5XeML1/xBr2jzh9/VjeP8b/ITfJ2/R+5Up6Qnet0JqUH2J4Qm/
n7lTffnTJ3y+vZJYXfYp7x9GEOtcnrJ/ApH/gp/y+UwMsSXxKfLdoljkv31P
+bzBn1j1iOsbLtD7nbZUZkm+xftfC2aP+sTm/pl8njOGWKrN5Hxzi55X7M7k
8zxrKtfcz0T7Ghsq1xdm8v6mB/Q3e8brX1nSI+n7jPV8pnL5jGfc30Po3/GM
42UW9N99xvouERsLnnE8fiK2NH7O63016Fc953xwFfrjnnO8TibWbuX6xv7I
/7ef8/v3Sej/9ZzPb/5Af8MXfN7SD+//vV5gPFWGQv/UF3zeNodYv+kFnz88
gv4bL/6vP8mPFyXrH+JflsXz8Tre/3tkIZ6eOSP+J2WxvU9RuXFjFp7vUUBs
uZrF79N/iGVf+Xl7R6z/9c2IN6dJmP/dzHz++B3zP4bLl9sQm9eZ+TzyLbH0
spnzp4SeV1jMvD5YE2vqvuR4+kb19V1ecjyMxPv/+Jd8noT5JVnzks8DUrH/
vfCSx1MJ8//DSz5vicX6X/sVt78e5x/KV7y+N8X6H/mK7T8M/l9ZUr6J7K8y
8vMeO3H+kfuK/dsM8V/zNa/fq+D/Tq95vhyC/8e8RrwuWQP/L3vNz3eA/8++
5ny2Ff5/V9LeOfi/2hs+3z6C+Pd6w/mpNuZ/+Bs+fxmL+Ne94f0N2tOdKqkf
jPh/84b7z6FyS9W3HN9zqVzW8S2vjz6I/xFv+XwuEvGf8pbPV1wR/8ffcry+
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
+g==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6199008*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6199008*^9, 3.8333952*^9}, {0, 63503.457031}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.8334365092393265`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"2c477c53-12f5-4c29-907b-2eb9025b472b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Ethereum", "Subsection",
 CellChangeTimes->{{3.833431097893951*^9, 
  3.833431107750783*^9}},ExpressionUUID->"abbc57fd-6602-4e1e-86a9-\
8c69e05a5a34"],

Cell["\<\
Ideja za Ethereum je \[OpenCurlyDoubleQuote]padla\[CloseCurlyDoubleQuote] \
leta 2013, udejanila pa se je leta 2014. Za razliko od Bitcoina, vemo kdo je \
ustvarjalec Ethereuma - gre namre\[CHacek] za Rusko-Kanadskega programerja po \
imenu Vitalik Buterin. Za mnoge poznavalce je Vitalik pravo \[CHacek]udo, \
skoraj prerok na Kripto platformi - nadarjen ra\[CHacek]unalni\[CHacek]ar je \
bil namre\[CHacek] star zgolj 20 let, ko je ustvaril Ethereum, ki je danes \
najbolj aktiven \[OpenCurlyDoubleQuote]blockchain\[CloseCurlyDoubleQuote] na \
Kripto-trgu, je decentraliziran, ter sama tehnologija za Ethereumom naj bi \
bila ena najbolj dovr\[SHacek]enih v dana\[SHacek]njem \[CHacek]asu. Po \
mnenju mnogih strokovnjakov naj bi cena Ethereuma v prihodnosti prerasla ceno \
Bitcoina (Ethereum je trenutno drugi na lestvici, govori pa se, da je v \
izdelavi \[ZHacek]e Ethereum 2.0).\
\>", "Text",
 CellChangeTimes->{{3.833431112096972*^9, 3.8334311226989317`*^9}, {
  3.833431170546014*^9, 3.8334312448178496`*^9}, {3.8334312789651775`*^9, 
  3.8334313447582026`*^9}, {3.8334314203673344`*^9, 
  3.833431762129609*^9}},ExpressionUUID->"f1b8be85-9f57-4ab2-bb77-\
299367abf54b"],

Cell[CellGroupData[{

Cell["Tabela - Etereum", "Subsubsection",
 CellChangeTimes->{{3.8334372890785427`*^9, 
  3.8334373032857723`*^9}},ExpressionUUID->"c1a64801-c9ba-4675-a134-\
c557b9007449"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BlockchainData", "[", 
   RowBox[{"BlockchainBase", "\[Rule]", "\"\<Ethereum\>\""}], "]"}], "//", 
  "Dataset"}]], "Input",
 CellChangeTimes->{{3.8334317672357745`*^9, 3.833431776967823*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"167bdbcb-822a-4707-b669-04e541327393"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association[
    "InitialData" -> 
     Association[
      "Type" -> "Ethereum", "Name" -> "ETH.main", "Core" -> "Ethereum", 
       "Blocks" -> 12689773, "LatestBlockHash" -> 
       "3dcee63a29fe85e33459aa641ee75e535cca11327e432625b38dc51dc2f472e1", 
       "LowestGasPrice" -> Missing["NotAvailable"], "AverageGasPrice" -> 
       Quantity[17.538615703, "Gwei"], "HighestGasPrice" -> 
       Quantity[60.00000000000001, "Gwei"]], "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[
       Association[{"Type"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Core"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Blocks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LatestBlockHash"} -> 
        TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
         "LowestGasPrice"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"AverageGasPrice"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"HighestGasPrice"} -> 
        TypeSystem`PackageScope`AtomShape[75]], 1], "InitialType" -> 
     TypeSystem`Struct[{
       "Type", "Name", "Core", "Blocks", "LatestBlockHash", "LowestGasPrice", 
        "AverageGasPrice", "HighestGasPrice"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], TypeSystem`UnknownType, 
        TypeSystem`Atom[
         Quantity[1, "Gwei"]], 
        TypeSystem`Atom[
         Quantity[1, "Gwei"]]}], "Meta" -> 
     Association["ID" -> 184847038401027], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`DocumentShape[
       Association[{"Type"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Name"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Core"} -> 
        TypeSystem`PackageScope`AtomShape[76.80000000000001], {"Blocks"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"LatestBlockHash"} -> 
        TypeSystem`PackageScope`AtomShape[480.00000000000006`], {
         "LowestGasPrice"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"AverageGasPrice"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"HighestGasPrice"} -> 
        TypeSystem`PackageScope`AtomShape[75]], 1], "Type" -> 
     TypeSystem`Struct[{
       "Type", "Name", "Core", "Blocks", "LatestBlockHash", "LowestGasPrice", 
        "AverageGasPrice", "HighestGasPrice"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], TypeSystem`UnknownType, 
        TypeSystem`Atom[
         Quantity[1, "Gwei"]], 
        TypeSystem`Atom[
         Quantity[1, "Gwei"]]}], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     8, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Type", 
                  Style[
                  "Type", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Type"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Type"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Ethereum", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Name"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ETH.main", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Core", 
                  Style[
                  "Core", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Core"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Core"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Ethereum", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Core"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Blocks", 
                  Style[
                  "Blocks", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["Blocks"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blocks"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["12689773"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Blocks"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LatestBlockHash", 
                  Style[
                  "LatestBlockHash", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["LatestBlockHash"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LatestBlockHash"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "3dcee63a29fe85e33459aa641ee75e535cca11327e432625b38dc51dc2f472e\
1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LatestBlockHash"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["LowestGasPrice", 
                  Style[
                  "LowestGasPrice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["LowestGasPrice"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LowestGasPrice"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["LowestGasPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["AverageGasPrice", 
                  Style[
                  "AverageGasPrice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["AverageGasPrice"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AverageGasPrice"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"17.538615703`", 
                   RowBox[{"\[VeryThinSpace]", 
                    FormBox["\" Gwei\"", TraditionalForm]}], "gigawei", 
                   "\"Gwei\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["AverageGasPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HighestGasPrice", 
                  Style[
                  "HighestGasPrice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   Key["HighestGasPrice"]}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HighestGasPrice"]}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 TemplateBox[{"60.00000000000001`", 
                   RowBox[{"\[VeryThinSpace]", 
                    FormBox["\" Gwei\"", TraditionalForm]}], "gigawei", 
                   "\"Gwei\""}, "QuantityPostfix", SyntaxForm -> Mod], 
                 FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HighestGasPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{620., {119., 125.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{620., {119., 125.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833431779445527*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"de09c46a-4218-4c13-8b5c-38d08154a1dc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graf cene Ethereuma", "Subsubsection",
 CellChangeTimes->{{3.833437307043234*^9, 
  3.833437346786414*^9}},ExpressionUUID->"e00f3810-226d-4008-9d27-\
dd2d43725db2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<ETH\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8334373331270905`*^9, 3.833437335092026*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"cb7e2f34-2b2f-4cbb-801f-b2df8aa41ef4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAUZxkcM4t60HwKQa8Ji0GQPDp6P6S
M+tBHo1p+bR07z9AA57A0znrQbb+e/d3Zt8/FWb9bao/60GLwOn5k77tP9Q9
icljRetB4EvnUf4i6z9E4UVYmUvrQdnGQjgxigRAOc6s0mRR60GRmcrHYKsm
QN+GRICsV+tBL4mxRC2WIkBvtAjc1l3rQRUd3Qk3RSlAhCt3I5dj60EfTOpC
QKwoQEpuFp7TaetBqCb/8ADVJUCW+l8Epm/rQcYXIci53CdAy/vVGFt160Ed
u9K5WuQnQLHIfGCMe+tB7pVdKok4I0Ad382TU4HrQTUqRNSgBR1AOsFP+paH
60H4X7TaRJwlQEAY/g69jetB5bdeUoC6NUDMuFYPeZPrQQ3yjqvJfkhACCXg
QrGZ60FSRGlT22xmQMraE2J/n+tBuzqKLSUvckA9XHi0yaXrQehSKwSFKGxA
mVIJtfar60GAT67aCz5yQHuSRKG5setB+ASeOrbvdEAOnrDA+LfrQffw6YXZ
inhAJ/PGy82960G+NCaW4TGHQCm9CYWFw+tBKdnR0TjYkEDcUn1xucnrQRDY
xgsKnoVAFDKbSYPP60EZXP1DvNR/QP3c6VTJ1etBbAcoTKeVg0DQ/GQO8tvr
QQ6q+v4a/3pAKGaKs7Dh60F+q0WCpPx5QDGb4Ivr5+tB/XWQhmGfaEDAGeFP
vO3rQXxAHlsAnGlAOA0Owm/z60GwiQl31ENlQGHMa2ef+etBiAB5LPJtYEAQ
1XP4ZP/rQbyH5NUVEltAcKmsvKYF7EGRpaNl0CphQFXHj2x+C+xB94qvdiSp
ZEAkWp/KOBHsQZ7QvzfNVW1ApLjfW28X7EHg7SRBL7xzQKlgytg7HexB/6lg
9pBTakBf1OWIhCPsQUsA6on3QWVA/7wt568p7EFNu6edsAhnQCTvHzFxL+xB
VF9oQ4vtZkD67EKurjXsQbZegvKrm19AVjQQF4I77EGnSM1AtJdmQJvwCS44
QexBk3rMuyc2bECReDR4akfsQTPW+vHdx2NADUoJrjJN7EFAtK1nGAtpQDrn
Dhd3U+xBhwt5eMCCbkBQ+UAunlnsQQfOUGMiHnVA7FQdMVtf7EFHxA+/vx94
QDl8KmeUZexBOUWDtbJqd0AL7eGIY2vsQVH6ncUbFHxAjinK3a5x7EE1KtmD
uIeCQD5PMeGwduxBncOL3O0xk0BJz76V
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$275301#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6478944*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3647894400, 3833395200}, {0., 
                1228.482286628546}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2144", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAUZxkcM4t60HwKQa8Ji0GQPDp6P6S
M+tBHo1p+bR07z9AA57A0znrQbb+e/d3Zt8/FWb9bao/60GLwOn5k77tP9Q9
icljRetB4EvnUf4i6z9E4UVYmUvrQdnGQjgxigRAOc6s0mRR60GRmcrHYKsm
QN+GRICsV+tBL4mxRC2WIkBvtAjc1l3rQRUd3Qk3RSlAhCt3I5dj60EfTOpC
QKwoQEpuFp7TaetBqCb/8ADVJUCW+l8Epm/rQcYXIci53CdAy/vVGFt160Ed
u9K5WuQnQLHIfGCMe+tB7pVdKok4I0Ad382TU4HrQTUqRNSgBR1AOsFP+paH
60H4X7TaRJwlQEAY/g69jetB5bdeUoC6NUDMuFYPeZPrQQ3yjqvJfkhACCXg
QrGZ60FSRGlT22xmQMraE2J/n+tBuzqKLSUvckA9XHi0yaXrQehSKwSFKGxA
mVIJtfar60GAT67aCz5yQHuSRKG5setB+ASeOrbvdEAOnrDA+LfrQffw6YXZ
inhAJ/PGy82960G+NCaW4TGHQCm9CYWFw+tBKdnR0TjYkEDcUn1xucnrQRDY
xgsKnoVAFDKbSYPP60EZXP1DvNR/QP3c6VTJ1etBbAcoTKeVg0DQ/GQO8tvr
QQ6q+v4a/3pAKGaKs7Dh60F+q0WCpPx5QDGb4Ivr5+tB/XWQhmGfaEDAGeFP
vO3rQXxAHlsAnGlAOA0Owm/z60GwiQl31ENlQGHMa2ef+etBiAB5LPJtYEAQ
1XP4ZP/rQbyH5NUVEltAcKmsvKYF7EGRpaNl0CphQFXHj2x+C+xB94qvdiSp
ZEAkWp/KOBHsQZ7QvzfNVW1ApLjfW28X7EHg7SRBL7xzQKlgytg7HexB/6lg
9pBTakBf1OWIhCPsQUsA6on3QWVA/7wt568p7EFNu6edsAhnQCTvHzFxL+xB
VF9oQ4vtZkD67EKurjXsQbZegvKrm19AVjQQF4I77EGnSM1AtJdmQJvwCS44
QexBk3rMuyc2bECReDR4akfsQTPW+vHdx2NADUoJrjJN7EFAtK1nGAtpQDrn
Dhd3U+xBhwt5eMCCbkBQ+UAunlnsQQfOUGMiHnVA7FQdMVtf7EFHxA+/vx94
QDl8KmeUZexBOUWDtbJqd0AL7eGIY2vsQVH6ncUbFHxAjinK3a5x7EE1KtmD
uIeCQD5PMeGwduxBncOL3O0xk0BJz76V
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$275301#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6478944*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3647894400, 3833395200}, {0., 
                1228.482286628546}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2144", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1: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
UIDXzRbgeCDHoXqnyQ9iS66JMsf7wMmjVkRbHRfHM90b72O1Bx6X54H9UugB
vJ8CsYaOO77vMwfjjLeXXE974X0g6xaktw95Y16+7oHxgfDCepn8fJytJeya
ysV93qc8qNlwiOo4iYfjbZ/8OpOL83SbN/bPXy8Yq8dqeZTCxXrygTd8uzmu
zeYbF+tWdR9Yd3u5MJ2s99D+sOV1dIo3PDq4s+V3nbx+8+fi/NDl4vnWyZ9T
ysX1o5CL67LlXLyuM+4YVzM9sN1/PLC/guR+WeqF51vnBaKsL63H33vi8d7y
z2BPXD+e9gTNm65EcrEnrvOjPXH9uE8+jqwHkX92e8rj0BPXlfGeuN496Ynz
5bgHXt9ZD/jdlE9dSNa56PsmD+yP6Z6ovzs42hNurVMjDnzxxHbreGHes/YG
7pgr1CaaN65LEuT7ttYL81OaF16fF3ltxyeYW7xwPLzxxPXTKQ5+fhYHx+kH
Ns4jKRsO/97YoqfDwXlf4oLjwIqJ71dlASPiieb80wzI9T5a8PWpM0yyuFGd
x3DEfKLhhPNOZQ+YXfVpKRLtwX2YXGew33q6+pqLE4jXjBT+snJEOv5UqRPw
1EbXtqs5QfyBc1GLVu6BuAdHzC4e2AOoTZtvj/TaxX5boHXe0nyzfTc8Page
tWz8bkipK4iacXc33MncVtvWbQvnv5AJvMoWWuemSn6V2ELWlGbNvYW7cH9x
2i7k/6Uau3CfbNsuODpdS5x6Zzcs3vIqymSjPe5f2dhjv010gmuTTxI3GHtg
csbZgpwFTjCW8KNE2jFxvyGBhfB91Eomyovz4Uz4sntEdZOeE+yvmsG4sJiF
dFIGsCB4gYtYFM6Cu2mPpHdOMoFTHStens0Cx7SjkniWK5jJXtgqdgFhQiGI
t7uCR3cr0zfAFW66d7e2XnaFqmXxFOYPFxhMNdSKue8C+Y47qOdfuyC8GzGd
CVNLqmpntDMgg14iaYpkwOCBT/mBpk4ga3ct0mHCqdvHKWoxzrCiQkNbod0Z
v9fxhdy3rAHtUnCGaVEnxMu0GUAdl1rg2uwEvZwNxCwrJ/hgTm99ecYJNg/p
C386OgHz4YgY091OMHKuU+1Scr86bb4KN2o5gY/6BrN+e0cI1Z6teaPEAc7e
mKtlyXGAiUsDNVVW7IEQo9b8zpsOcKJgonRMpwNcW7ialZSzBywHHFsSWhxg
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
h/z2aI4Y/gfbCMXe
    "], CompressedData["
1:eJxdnU2u7MxxRD8DHgjehXfA+s3MJRjQyCsQPDDgkQfy/uGIpv3xpARBeAG9
V7dvNLtOsXjI/tf/+O9//89/+uOPP/7+z/qfv/7X3//nH9Lf/oL0b/+iP6y7
I2vv5/kzVj75xXxuTMRx1kWc+peIa14MlXtMDrWrONTJw6F+P+eLcZJD5d4c
qtbAUPWMwFA1nv0w1oOhasbFULXu4lB7F4f6/bpfvHNyqHiSQ0UdDpU5OFT5
x/5/PM9zUPt5xkbt55kTtZ9nDdR+fr8eY14OdWJyqHuKQ8U+HCrX5FA1UPsZ
z4PaFQu1nzECtZ/xe/O/uM7Dofa6HOrMxaHuUxzq1uVQkZND5U0OVQe1648b
tZ/5Owa/OAdrn+th7XMla587WPt0cYh3s/YZi7XPHKx91sPa5++j8GdcT7D2
NS5rX/Ow9rUWa197svZ1Bmtfp1i73gPWroFY+/p9Ir9Ym7XvZ7L2PQZr3/Nh
7fv3d7+4grXvfVn7Ppu177tY++//Q9SUxKGyWLs/hBjKRz+GOr+X/EW93xhK
RbN2/4YcSkNzqN/89MUbrP3EYe36u6xdH0jWfn/NfXE8rP2OZO13Bmu/67L2
+5smv6ijg0Pdydr1kln7jWLtv88YYl3WHs9h7TEWa485WXv8ZmvEYu0hMnAo
Dcah/F/E33H0xVysPWqwdv2RtQtsrD1/0PjivKw912btegNZe2pe4VC/wxmR
SD0ZROrJJFJPFpF66iFSTw0iVQcOkerjiLXXIlJPbSL11CFSNS8QqaeCSD2V
ROqpIlIViVT9PSLVhzNqvzqaUft9FpF6n02k3ucQqYpE6n0ukXrfH/vFJFJF
FCLVnyrUfscgUu/vAGUkUu9YROodm0i94xCp9/3tvxhEqj7NRKoikXpHEan6
uBKpdw4iVWsRIvUKqKxdrbL290344iFS77xEqucY1j6TSL2ziNS7HiL1rkGk
KhKpqoZIfSd6xE2k3nWIVE91rH0FkapIpF6RnLWvIlL1Q4jUuweRet9D8ouL
SFUkUv0pYu37EKlaIhCpWl4TqV5As3YtVVm71ois/f1kfHEQqV6OsHZN/Kxd
AGbtv3cX8RKpnutZu+Zc1q7ZjbW/H9A/oz7erF0fJNauI5i160hi7XcRqS6L
tZuxHOoSqVdTKmt/54kvFpGqSKQag6w9BpGqgYnUG4tIvXo/WXscIlWRSL3v
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
Vcc6kboO9aQwyFn7oZ7k+ZVIXZd6kiORui71JEXqSfZSidTfbX8cinpS/Gxi
DpVE6s9Z4FDUk+K3M4qhgnpSrKCeFL+PLIYK6kmORKqWV0TqCupJitSTFKkn
/SQS1p7UkxyJ1JXUk8xXInUl9SRF6kmK1JMUqScpUk9yJFJXUk9SpJ5kWZhI
XUU9yTMMkarZikhdRT1JkXqSIvUkRepJitSTLCkTqauoJzkSqfo/iFRf/kTt
+6GepEg9yYcCkeo7ew6Hop7kSKTuh3qSV49EqtbaROoe1JPi3X5FpJ7kSKT6
BqPiUNSTFKkn2eAmUjWJEKla8hOpikTqHtSTfHcKkbon9aTw3hZrn9STvBVA
pO5JPcmRSN2TepIi9SRF6kmK1JNC+CFSfbsVa1/UkxSpJ9lnJ1L3op6kSD1J
kXqSIvUkRyJVwCFS96Ke5KOGSN2bepIi9SR71USqTsOIVJ+VsfZNPclbTkTq
3tSTwjefsfZNPck6P5GqSKTuQz1JkXqSIvWkeKmASD3J1+yIVN8Dx9oP9SRF
6km+yYBI3Zd6kiL1JEXqSYrUkxyJVE2DRKo/cqz9Uk/yzQ1E6r7UkxSpJzkS
qTuoJylST7KPQaTuoJ4UviOQtQf1JN9jQaT692HtQT1JkXqSIvUkHTbUkxSp
JylST3IkUnWUEak7qSf5zg8idSf1JEXqSb+jl7Un9SRF6kniOvUkY55I1cFO
pO6inqRIPUmRepIjkaojgUh9r6UhUk9SpJ4Uvk0TtZ+HepIjkeptftR+HupJ
XpkQqTrdJVLPQz3JtxoSqYpEqi9ULA5FPclXYYnUM6gnKVJP8hFJpJ5BPcmR
SBV9iVSdSxCpvmk1OBT1JN8GRKT6Z6J2RSL1TOpJitSTFKknKVJPUqSepEg9
yZFIPZN6km9OIlJ1FkqknkU9KbzFxtoX9SRF6kmORKpv4WXti3qStxCJ1LOo
JylST1KknuRIpL5LfMSmJ53d9CTfSczad9OTzm56kq9Esfbd9KSzm550dtOT
zm56kqYYIvWcpid5WmDtp+lJ5zQ96ZymJ53T9KRzmp50TtOTzml6kiKRqlM6
ItX3VbP22/Skc5ueZDix9tv0pHObnnRu05PObXrSuU1POrfpSec2PelE05NO
ND3pRNOTTjQ96UTTk/zJZ+3R9CS9uUSqTtKIVN9lztqj6Uknmp6kN4FIPdn0
pJNNTzrZ9KRXjGAkUlUrkeqb3Vl7Nj3pZNOTfLGUtVfTkxSJ1FNNTzrV9CSd
3xOpp5qe5KvOrL2annSq6Umnmp6kI5RIPdX0JP07IvU+TU+6T9OT7tP0JN/6
Hxyq6Un3aXqSL+ldDtX0JCGDSNWvR6Tep+lJdzQ9SVM5kaqFKZGq5SSRekfT
k/QBJVIViVRNv0Sqr5cUh2p60h1NT7qz6Ul+EAJrn01PurPpSXc2PUnTBpGq
Uxoi9c6mJ737NYhNT1IkUv08Bta+mp50V9OTfD2fta+mJ93V9CRFIvWupifd
1fSku5qe5JNh1r6annR305M0axKpikTq3U1PurvpSXc3PenupifpeCVS/XQK
1r6bnnR305N8psHaT9OT/Kw01n6annRP05P8WC7Wfpqe5CdPsfbT9KR7mp7k
hxyx9tP0JD/Wh7Xfpifd2/QkP0GGtd+mJ/lZHaz9Nj3p3qYn+fEcrP02PcnP
p2Dtt+lJ72GE2PQkP3SAtUfTk3zXPWuPpidZOWHt0fQk30rN2qPpSTeanuS7
dll7Nj3JChFrz6Yn3Wx6km+JZO3Z9CTfBMjas+lJN5ue5PvNWHs2Pck3XLH2
anrSfZftiESq76Jh7dX0JN9Gwtqr6Um+cYK1V9OTfG8Aa6+mJ8XT9CRr6Kjd
Ojhqt3iN2n0cFYdqepId38mhmp5kq/VwqKYnxdP0JAuUqN3mImq3QYja7eqh
9nfzHbHpSdbCJodqepK9qMOhmp5kEyg5VNOTLLugdksnrH02PcleBWufTU/y
ziZrn01Pitn0JF+0Zu2z6Um+TMvaV9OTYjU9yVcEWftqepIvibH21fSkWE1P
8jvC2lfTk3y9gbWvpifFanqSt7ZZ+256kndvWftuelLspid5o5C176YneWuM
te+mJ8VuepJ3YVj7bnqS9x1Y+2l6UpymJ/kUl7Wfpif5HI+1n6YnvWsCxKYn
eeHO2k/Tk7xyZe236Uleq7H22/QkL0dY+216UtymJ5l8rP02PckTLmu/TU+K
2/QkTyusPZqe5A8Sa4+mJ0U0PcnvGWuPpif5RbP2aHpSRNOTfDSz9mx6kiKR
KgwSqZFNT4pselJk05Mim54U2fSkyKYnKRKpkU1Pimx6kv8qa6+mJ+n3I1Kj
mp7kh3Kx9mp6UlTTk3TOSqRGNT0pqulJWhQQqe+VVEYiNZ+mJ/nZYKhdBxmR
mk/Tk+yWJodqepIikaq1CZGaT9OT9G4TqTmanuTLVKg9R9OTcjQ9KUfTk3I0
PSlH05PUOZGao+lJOuiI1BxNT/KT0lB7zqYn5Wx6kq8BsPbZ9CS9YCI1Z9OT
cjY9KWfTk3I2PUkkI1JzNj0pV9OTcjU9KVfTk8RTItULRta+mp6kjyCRmqvp
SbmanpSr6Um5mp6Uq+lJuZuepDUQkap1K5H6nuAhNj0pd9OT/Pg61r6bnpS7
6UnWn1n7bnqS1stEqiKRmqfpSQIMkZqn6UlePbP20/SkPE1PytP0pDxNT8rT
9CSt4onUvE1P0rxIpOZtepIf5sfab9OT8jY9yUsT1n6bnpS36Ul5m56Ut+lJ
eZuelNH0pIymJ2U0PSmj6UkZTU/KaHpSRtOTPO+z9mh6UkbTkzKanuRHG7L2
bHpSZtOTFInUzKYnZTY9SadWROqrxSA2PSmz6Ul+wiJrz6YnZTU9yYY+a6+m
J2U1PUlneERqVtOTFIlUtUqk2jlg7dX0pKymJ2n+JVLraXqSIpGqtSaRWk/T
k/SSiNR6mp7k500Gh2p6Ur1XORCJ1HqanlSj6Uk63yVSazQ9SeQmUms0PUmR
SNVbRKTWaHpSjaYn1Wh6Uo2mJ/kFovaaTU+q2fQkrWuIVD99k7XPpifVbHqS
1nxEas2mJykSqZqridR3t+6Lq+lJtZqe5IeAsvbV9KRaTU/yTSSsfTU9qVbT
k2o1PalW05O0rCNSFYlUb4Ww9t30pNpNT6rd9CTNEkRq7aYn1W56Uu2mJ9Vu
epJmKyLVj0Rl7afpSXWanuSPGGs/TU+q0/SkOk1PqtP0JC1yidQ6TU+q0/Qk
RSK1TtOTBDYytG7zkbxqZ8+3+Uh1m49Ut/lIfiIse77NR6rbfKS6zUeqaD5S
RfORKpqP9M4aiM1Hqmg+kh9My56j+UgVzUfyjU3sOZqPVNF8pMrmI1U2H0mn
GmRoZfOR/FNYezYfqbL5SJXNR9JimgytbD5SZfORqpqPpEiG6gSIDPVjell7
NR+pqvlI1nFYezUfSZEMrWo+UlXzkaroI/nlgqH6A30kRfpIivSRHMFQRfpI
+gN9pPRuZXEo+kg+/wNDFekjOYKhacAODDXoI/mMHQxVpI+kSB9JkT7Su/7n
UPSRfFYKhqafnVwcij6Sn0YJhqbvvWPtkz6SY7H2SR9JkT6Sz4YPa5/0kdIb
2ax90kdyLNY+6SNpgUgfSZE+kvd2Nmtf9JF8Uj5Y+6KP5JisfdFHUqSP5Ed1
bta+6CPpdJ8+kiJ9JMdi7Zs+krcKLmvf9JEU6SP5EaGTtW/6SI7F2jd9pPQW
DGs/9JG8RbFZ+6GPlH6uNms/9JEck7Uf+kiK9JE8aW7Wfugj5bsE/OKlj+RY
rP3SR1Kkj6RIH8kXYRdrv/SRFOkjORZrv/SRFOkjef/msPagj6RIH8nPbR2s
PegjOSZrD/pIivSRfBFrs/agj6RIHyn9sHPWHvSRDIFk7UkfSZE+kiJ9JEX6
SIr0kRyLtSd9JEX6SIr0kfwU283aiz6SIn0kP0jrYe1FH0mRPpIifSRvqm3W
XvSR0qcprL3oIzkWay/6SDke+kiK9JHyvXCOSB9JkT6SI5CqSB9JkT6SH/FL
pIpOROp46CNp9UgfSZE+kteWZKgvQy7+WypGilSMHElJ8YaUHIOKkXcrSckx
qRilH7HPJicVIz+0mJT0VRw2OakYKVIxUqRi5K0AUlKfXlJyLCpGjqSkViqk
5FhUjPwoZVJSqwBSciwqRunfrjgUFSM/noCUHIuKUfoLB1j7pmLkRziTkpr3
ScmxqRg5kpL6m6Tke4qOSMVIkYpR+nsPWPumYuRISvq+edZ+qBgpUjHyVySS
kuNQMfJONimpSEr6dIi1HypGilSM/HxrUlKlkpLjUjFSpGLkSEqOS8XI++uk
5LhUjDwdk5LjUjHKcakYOZKS41IxyhFUjBSpGHlfn5QcQcVIkYqRIyk5goqR
fQxScgQVI0UqRr/nHrL2pGLkywukpCIp6e/EYO1JxchPGScltUAmJUdSMVKk
YuRISr4/FZGKkS96kJL+ag7WXlSM/LBzUtKPdmDtRcVIkYqRIhUjRSpGvthC
So6iYpT+mahdfyIl50PFyI9gJyXFV1JSZwukpCZvUnI+VIwcScn5UDHyQoWU
nA8VIz/6nZT0JXnUPgcVI0dScg4qRopUjBSpGPlKFCmp80xScg4qRn4CPSmp
yBNPnUsRmnNSMUpf72Ttk4qRzzqJVB03RKq/toW1TypG1nCJVC3iiVSd0hGp
c1ExUqRilO9+KyORqpdMpPrbY1j7omLk5/ETqXNRMVKkYuRIpM5FxcjQI1J1
+kekqjki1XtbrH1TMXIkUuemYuSnJBCpc1MxUqRiZGOMSJ2HipEiFSNHInUe
KkaKVIz8ZQVE6jxUjHw9iEidh4qRI5E6DxUjXywlUuelYqRIxchfkkCkzkvF
yJFInZeK0e8htqz9UjHyRVoidV4qRjkvFaOcQcXIkUidQcXI1/qJ1BlUjBSp
GP0fQhCpGDkSqTOoGClSMVKkYuRvkCBSZ1IxUqRi5EikzqRi5O8YI1JnUjFK
fz5Ze1IxcqtE6kwqRo5E6iwqRr4zjUidRcXIV86J1FlUjNJf98Tai4qRIhWj
3y/P2ouKkSIVI2GOipEiFSNHInU9VIwUqRiZmETqeqgYKVIx8rfjEKnroWLk
SKSuh4qRHxxGpK5BxSj95Veo3RdqUPsaVIwcidQ1qBh5u5lIXYOKUb4XzxCp
GPmzS6T6O7hY+6RipEjFyF9yQqSuScVIkYqRv7ycSF2TipEjkbomFaPf9zqw
9kXFyF+uQqSuRcVIkYqR4+8T+79Ip6W5
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8334373619324617`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"80fc4777-9ba0-43ea-a3f9-e3439f2a9b0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[66]:=",ExpressionUUID->"9199eee7-1472-4ed3-9547-06d5384083a8"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
Hs9FFjVJYf0xIhjlHwhc8qevuq42COV3Az4cXO3VriX2h2YtcN0dV/liVyzn
ZQAP39OKVxSFzwufAf96t0Qt+Ijl0oZK1r8ByIr/gDddKshO6oPtqWcpWX/X
IxvkwGefXnOcl4EsOKFk/dcBWVIEHDphkMjnPo6XvB54avfc7NtVyKo+B3Xi
yv6zHS9moz5opwOfr4gtm7IS9YEfBfznmZWjz1gsF6UBZw3Ply/V+aH8jw6y
8TmJ+qr8Dcydrrn5DPVNY30I/PuRB9TBw7A+zxV4+tz3goFfsb4wAnjo6pXq
rzNI/1OBG/UqUSedwPmhKASWDGkj3dkf66t/AI972Mhi7eRlKH+Pwzrxqeye
vOhvWC5wARYUDigLX4y/L1kFPJGfIc+diPNBfgj45rze0hGnsVx1H1h1z5AS
MApZ+w348I4fcnVHZL7lEfBXk/ZJLxcvQfknHWG/F4UsCwFeqjtW/99mZGXK
EaY/PfB9NHeAPWVNox2vYDnvC3DONE/1pGyS3zxVJ25iGu9YFoHl0gnAZpf2
piTOwd9XBKUyexOF768+AJy2NTqlpi/N/7xUZh9f0/yvAa7yjVaaNcfxlXQ9
yvTRjcbfCbhn89mi8kc0/oFH2XhvRX3T7jvK+kOOzL95lNmzKGTRx6NsPkxZ
gfKbHmP6uQRZORr4coMUi6YHsb5m6TE6H74th/Q/Afji18fRHbshC3OOsfYr
Sf91wE8ej9dOfUr6b5IG/tLk1BRZGLLaEdg356bF+gRkw5I0pu/FyILdacx+
dcb5JbkOfOKcu3THSXw/eVUak/cZsqrdcdBPy60peW5YXzsS+FrvcO3h68j8
RcdZf5Yii3YCH/I5kD3xOtoD2bXjzH5cQ1a+Ae584kH9ib5obzRt0nXiQuXB
6NxjyLzh6azcgCxcAPw5/oRFyQiyf9vTmb0sxPYUl//xJWT1a+BOKQ2lmUEk
f6sTOvGauGXagh0oj2DYCWZv3pD83idY/8Qjy7ecYO+7AZ9XXQDeP2qENtyX
xr/sX3lLGv8WJ3VitYgvWLuYxn8I8Jh7V6OXDkOWzTvJ7JEr2f+NwHNWyKXG
WTjfNWdPsvXFBe0J7xWw46lDjuc1aE+EzU4x+xmK5dJBp9jvz6bxn3uKrdcn
yf6tP8XmyzWyf6eBTz8MUo7vg/oseHGK2ZN1pP+NM9h69BrrywcALzd3kV49
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
wNx51gcakv888IVfM+WBGSR/KXDxm91yUzpPJG3uAutd207ycb8p32ED/ONq
q/ol1J7aA7hzhrHcjvI1hlhg7j7R80mU7znjwvzFdDrvUwLMfQ+jbCTlu5pM
1eP524NdKd8zcCqLd8PpvJfbVNr/27+H1rt1U5k9nkTfe8gA5u5D2ZXRevds
KouPy7Bc2VCix/sLDY/RevefhNa/zPVYzpsNXFRVxEvdRvn+NcARvhPlXXoh
S09IWL7dgfLdRcD4PZRUynfXA5998Tv7/R0679bHlfan+iZRvn+GK1tvP5K9
jwKearHGMfIbfe8kzZXlT07j+6keAbv0bCQyeYWs/Q3swH2AdQwyv9c0sL9/
PVOuZFG+0xV40/ltjq5TsFwWMY3tfwmQlanAtRnh6pGNSP7CaaQvSxfQevdz
GvnbebQ+Ca2m68WKkoEpJ1Mo3+cCzN1naeNK8q+aTvtdW9eR/IeAP22z5F1e
Rd+7uA/88MFfkb05sqAOmLvfJr1A37uwnAHz36Ew5WIpfe9i0gyWT+hH5/1C
gLnzqSNj6XsXKcDxTdpHd3CmfO9d4Kd15YKDFST/F+CX7a5ot56k8TefqRfD
z2l9/qP1fsJMls8+ROt90EyKd8eGkPxJM9l+qJDGP38mjaffa9rvqQE+7NEl
W1ZE8nedpRfPUx5Rx0hJfqdZbP/GgsY/EPjPj4vS4x9J/v3A3J8/s6Xvk0hu
Ar8P2aKeU0vr/UfgTwof+c2mtN9hOluP9/22PaDxHw2M51OG0Pgvm832v0zp
vGPCbJafCqTxz5nN8gOFNP662Wy/aR2Nv8kc8rc3KUn/RcA+h0+WtZpP/p4f
8IOde7ya9iN/bzew9GSgNGgF5fuvA3Pnlavo/ru6Cpi7vz3ZnfL97dz0YnlU
Wba9Ke5HCBzcKD+67i7tdywC5u4Dta6g/Y6dwNz5TZ9qOu98Dfjbpcbasr30
vZs3brReD2qP95f4fHeIh2F1z6bvV4iGu9P8v2yF5bIF7rTf0WAe3XfaDszd
rwvqTPedLgNrLssEC05jOa/CncXDl+l7F63nkjz3U+h7F8Pm0n7Eh+V038t7
Lu2HD75O9722zKV8d888+t7PBeCL3zvw5suwXKAFDpvtIC29h+fHJS08KD/r
OQvPn8uHAKcnbsk+ZYKsmudB/tYeMzrvv9GD1gP5M7rvfc6D9lsuhNN5/1ce
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

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6478944*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6478944*^9, 3.8333952*^9}, {0, 4168.701172}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.833437376738638*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"87ec02a7-f459-4cca-8170-5c283d005581"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Dogecoin", "Subsection",
 CellChangeTimes->{{3.833431807419488*^9, 3.8334318219894333`*^9}, {
  3.8334323889318895`*^9, 3.83343238950811*^9}, {3.8334337088356333`*^9, 
  3.8334337095056295`*^9}},ExpressionUUID->"8e6b6835-b911-404f-bd51-\
823380aa8356"],

Cell["\<\
Tale pa je malo druga\[CHacek]en. \[OpenCurlyDoubleQuote]Dogecoin\
\[CloseCurlyDoubleQuote] je namre\[CHacek] kriptovaluta, ki je nastala leta \
2013 pod prsti Billy-ja Markus-a, ter Jackson-a Palmer-ja. Kar je zanimivo \
pri Dogecoinu je to, da je njegov nastanek prakti\[CHacek]na \[SHacek]ala. \
Ideja za Dogecoin izvira iz internetne \[SHacek]ale, kjer je na sliki psi\
\[CHacek]ek pasme Shiba Inu s prekri\[ZHacek]animi ta\[CHacek]kami. Ta \
\[OpenCurlyDoubleQuote]meme\[CloseCurlyDoubleQuote] po imenu Doge (izpeljanka \
iz angle\[SHacek]ke besede Dog) je \[SHacek]e danes precej v uporabi, zaradi \
\[CHacek]esar tudi pripisujejo vzpon te Kriptovalute -  Dogecoin je namre\
\[CHacek] iz decembra leta 2020 do za\[CHacek]etka maja 2021 (torej v slabih \
5. mesecih) narasel iz 0,004 eur na 0,72 eur. Sicer se ne sli\[SHacek]i ni\
\[CHacek] posebnega, glede na to, da cena posameznega \[ZHacek]etona ni \
dosegla niti 1 eur, a \[CHacek]e bi pred decembrom 2020 v Dogecoin vlo\
\[ZHacek]ili 10 eur, bi vam to prineslo kar 1800 eur - torej 1790 eur \
\[CHacek]istega zaslu\[ZHacek]ka! Kakorkoli, ker je bil Dogecoin narejen kot \
\[SHacek]ala, je tudi tehnologija za njim prakti\[CHacek]no neuporabna. Poleg \
tega se lahko Dogecoinov ustvari neskon\[CHacek]no mnogo, kar pomeni, da ni \
za\[SHacek]\[CHacek]iten pred inflacijo (pravzaprav je fizi\[CHacek]ni denar \
bolj za\[SHacek]\[CHacek]iten pred inflacijo kot Dogecoin sam).\
\>", "Text",
 CellChangeTimes->{{3.8334318315537286`*^9, 3.8334318837797294`*^9}, {
  3.833431919834956*^9, 3.8334322057720194`*^9}, {3.833432258367374*^9, 
  3.8334322716639495`*^9}, {3.8334323366775875`*^9, 3.8334323766996574`*^9}, {
  3.833432421156677*^9, 
  3.8334327461297293`*^9}},ExpressionUUID->"a275f60e-2d3e-4acb-87c7-\
e90500fbe882"],

Cell[CellGroupData[{

Cell["Tabela - Dogecoin", "Subsubsection",
 CellChangeTimes->{{3.833437412129099*^9, 
  3.8334374241015296`*^9}},ExpressionUUID->"3b11613a-aa8f-46ce-9675-\
ea2fe071dae7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BlockchainData", "[", 
   RowBox[{"BlockchainBase", "\[Rule]", "\"\<Dogecoin\>\""}], "]"}], "//", 
  "Dataset", " "}]], "Input",
 CellChangeTimes->{{3.833432760658083*^9, 3.8334327930089245`*^9}, {
  3.8334335414070024`*^9, 3.8334335464627504`*^9}, {3.833433639586629*^9, 
  3.8334336400613728`*^9}, {3.8334338913477936`*^9, 3.8334338929428697`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"aea53ee2-8ee7-4e95-b079-1abe1a4ae86d"],

Cell[BoxData[
 TemplateBox[{
  "BlockchainData", "bbase", 
   "\"Invalid BlockchainBase specification \
\\!\\(\\*RowBox[{\\\"\\\\\\\"Dogecoin\\\\\\\"\\\"}]\\).\"", 2, 38, 21, 
   22403049215223109100, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8334327683280606`*^9, 3.8334327934584107`*^9}, 
   3.8334335474690714`*^9, 3.8334336414591837`*^9, 3.8334337119757433`*^9, 
   3.8334338948197484`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"6509ede3-7aa8-4da3-8061-ec5abd5f8698"],

Cell[BoxData[
 TemplateBox[{
  "Dataset`ExtractRawData", "dataextr", "\"Data extraction failed.\"", 2, 38, 
   22, 22403049215223109100, "Local", "Dataset`ExtractRawData"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.8334327683280606`*^9, 3.8334327934584107`*^9}, 
   3.8334335474690714`*^9, 3.8334336414591837`*^9, 3.8334337119757433`*^9, 
   3.8334338948277597`*^9},
 CellLabel->
  "During evaluation of \
In[38]:=",ExpressionUUID->"6893621e-07b7-4153-afdb-369c973bd160"],

Cell[BoxData[
 RowBox[{"Dataset", "[", "$Failed", "]"}]], "Output",
 CellChangeTimes->{{3.8334327683479424`*^9, 3.833432793474368*^9}, 
   3.8334335474838333`*^9, 3.8334336414731145`*^9, 3.833433711990703*^9, 
   3.8334338948347406`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"a28b52e1-d60c-4ca3-8d23-688e7d5f8471"]
}, Open  ]],

Cell["Iz neznanega razloga tukaj funkcija ne deluje. ", "Text",
 CellChangeTimes->{{3.8334338986890287`*^9, 3.833433923171999*^9}, 
   3.833435868860263*^9, {3.833437395468441*^9, 
   3.8334374000211167`*^9}},ExpressionUUID->"5531d644-c56b-441b-af96-\
c6246bea9370"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graf cene Dogecoina", "Subsubsection",
 CellChangeTimes->{{3.8334374293745565`*^9, 
  3.8334374409105268`*^9}},ExpressionUUID->"d7d66406-d6ba-4da6-a02f-\
8fab96ede583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<DOGE\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8334374543021493`*^9, 3.833437455843053*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"0ef14e89-df66-4908-91bb-a99212876ea0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAKMtzsGn46kHbFbehUJAxPz7CDxIN
/+pBYU7IqLWKMD/RjQRlPwbrQcKMhkqAZis/PT+GofcM60GVkvhvCHIiP2N7
gx+OE+tBwMrT5QAZIz8HjNmOsxrrQeqaL0vXuxs/g4K8514h60FEbjiC4lEi
P31N+DGZKOtB6Di4LHcCKT8xo6+9sS/rQQrTLBdiYiE/vt7zMlA260HU7DX2
UCcgP8nukJl9PetBGw8VBOMqID+s5LrpMETrQWQ/i6VIviI/SmVge8JK60HU
3UlbWRMyP2W6Xv7iUetBncdQq3EGMD9Z9elqiVjrQbdfPlkxXC0/ygTOyL5f
60FqZk4TLg8vP/aeLWjSZutBiewn3dGHMD/7Hhrxa23rQesRSg6vYC0/fXNf
a5R060EkD0QWaeItP9itMc9Ce+tBK6QSWcfVLD+wvFwkgILrQUZTLrOMoy0/
Q1YDu5uJ60HhDWlU4GQrP67VNjs9kOtBS2r0rF93MT+XKcOsbZfrQad65Wh0
n1Q/WWPcBySe60GJ1Y8TV/ppP9UncaS4pOtBbvfRqm0PXT/PwF4y3KvrQayc
XKVRGlc/oT/ZqYWy60HEAdtO7/ZQP/GSrBK+uetBOgjAWOWCYj+XjxRXfL/r
QaVjwzV9ZIA/eeHjSA==
                   "]], 
                  LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7wa+p7jD60GlY8M1fWSAP94011Bx
x+tBawfLqFSweT8+zQvWnM7rQXAEjRujxGY/d0vNRE7V60HwAR1bNslxP2pU
CvXd2+tBKpZz9BxwYz/bMaCW/OLrQWtXU38to2M/JfXCIaHp60GLkmUrAjx3
P+yMPp7U8OtBEpgm9QfEbj+MCkcEjvfrQWiAxcMf7WA/5hLLqyX+60EKh7c8
uNJgP77vp0RMBexBRW2QMkxJYD9ushHH+AvsQYsSkZB6Mmc/nEnUOjQT7EER
NpWQurdqP4RrEvBNGuxBeUv4q2lIaz9Fc92O7SDsQaXMG/x8+WU/hE8BHxwo
7EHlVwDtWkxjP5sRspjQLuxByPnYVMcEZj9tXt5TYzXsQRQmjGZl+2A/vH9j
AIU87EFAZDLOsPlkP+SGdZYsQ+xB6fNRRlwAWj+KYuAdY0rsQeL6iigccWQ/
6sjG5ndR7EGaRp/ISEBkPyMVOpkSWOxBRK008ooIaz/ZNQY9PF/sQWaAqPoC
j2g/aDxfyutl7EE2f4AeJLVlP3QXEUkqbexBaqySomDzaj+Ydw9XQnLsQaVj
wzV9ZIA/ybbNLw==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$277036#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3833395200}, {0., 
                0.008004167750572064}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAKMtzsGn46kHbFbehUJAxPz7CDxIN
/+pBYU7IqLWKMD/RjQRlPwbrQcKMhkqAZis/PT+GofcM60GVkvhvCHIiP2N7
gx+OE+tBwMrT5QAZIz8HjNmOsxrrQeqaL0vXuxs/g4K8514h60FEbjiC4lEi
P31N+DGZKOtB6Di4LHcCKT8xo6+9sS/rQQrTLBdiYiE/vt7zMlA260HU7DX2
UCcgP8nukJl9PetBGw8VBOMqID+s5LrpMETrQWQ/i6VIviI/SmVge8JK60HU
3UlbWRMyP2W6Xv7iUetBncdQq3EGMD9Z9elqiVjrQbdfPlkxXC0/ygTOyL5f
60FqZk4TLg8vP/aeLWjSZutBiewn3dGHMD/7Hhrxa23rQesRSg6vYC0/fXNf
a5R060EkD0QWaeItP9itMc9Ce+tBK6QSWcfVLD+wvFwkgILrQUZTLrOMoy0/
Q1YDu5uJ60HhDWlU4GQrP67VNjs9kOtBS2r0rF93MT+XKcOsbZfrQad65Wh0
n1Q/WWPcBySe60GJ1Y8TV/ppP9UncaS4pOtBbvfRqm0PXT/PwF4y3KvrQayc
XKVRGlc/oT/ZqYWy60HEAdtO7/ZQP/GSrBK+uetBOgjAWOWCYj+XjxRXfL/r
QaVjwzV9ZIA/eeHjSA==
                   "]], 
                  LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7wa+p7jD60GlY8M1fWSAP94011Bx
x+tBawfLqFSweT8+zQvWnM7rQXAEjRujxGY/d0vNRE7V60HwAR1bNslxP2pU
CvXd2+tBKpZz9BxwYz/bMaCW/OLrQWtXU38to2M/JfXCIaHp60GLkmUrAjx3
P+yMPp7U8OtBEpgm9QfEbj+MCkcEjvfrQWiAxcMf7WA/5hLLqyX+60EKh7c8
uNJgP77vp0RMBexBRW2QMkxJYD9ushHH+AvsQYsSkZB6Mmc/nEnUOjQT7EER
NpWQurdqP4RrEvBNGuxBeUv4q2lIaz9Fc92O7SDsQaXMG/x8+WU/hE8BHxwo
7EHlVwDtWkxjP5sRspjQLuxByPnYVMcEZj9tXt5TYzXsQRQmjGZl+2A/vH9j
AIU87EFAZDLOsPlkP+SGdZYsQ+xB6fNRRlwAWj+KYuAdY0rsQeL6iigccWQ/
6sjG5ndR7EGaRp/ISEBkPyMVOpkSWOxBRK008ooIaz/ZNQY9PF/sQWaAqPoC
j2g/aDxfyutl7EE2f4AeJLVlP3QXEUkqbexBaqySomDzaj+Ydw9XQnLsQaVj
wzV9ZIA/ybbNLw==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$277036#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3833395200}, {0., 
                0.008004167750572064}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJyFXAdQFM/TRcxZRBAVlYwISBLMPgMGVJSMSrrjAtyRM4hkFXPAgAlFxYCA
gqCiYk6YlSAYEBEDmHMO3x23vVd1v/rXZ5U1NbuzszOzPa/f655D2zfESaCs
pKTUSvI/p6OSUmHk2NHTV1tg0SXV8VvTrdDp/tP3doaW+JI6K+KjjhWQd33d
3XpL9n54SOJ527SheD0zZlvsTRv8TBSXRa4djuQUrXGLVo5h62fWqg/JKxyB
6IBNXS5/GgGsiP/Uz2AkbPe+qJvtMBxvPQpUMxutkZq/183HyxpcS1fzwblW
cFH27TnkqXw8m3pE2FVHW+H229W+ybZWaBz+XnzMygqxG7R0s89Z4NuqhU09
hluib+9uC/itrBC95GVBSoElW9L8/OdIW5rjd+6HCntfc8Tvctt4qsYc1dfn
dpr6ywyrT9lVZvsPwf3nlz4v0B+CFW8OZ3+7ZI7Zmjd/i7uZo9kn42qvCHNM
rgj+bDHQHN0+OzxY5Ci/Tu0HfqkxNik1Q/EkaUMz/A6atbr27RDodbdVFz0x
hYHmvGXp30zwSMmq/uwsE2Q+e2X5e68x1tcePlmXYYKgYWeH2W83xfTC4Vt/
VJuw10Ntv+UHlJiw1x9++i3aNdIUPzl9+h2/Z8bOa2WRqneqsxkyriVNPZ1g
ypZHfcbOsfA0xSCjQqU9XUxwLDDy5qwwE5TF7Z8YvMgYDV1FLo/5xux9mpf2
2MLG0+PM2ffQOlGd1ofqNH8qRf1d7XtEmaHm3uokYQ8zdn0DBi87N2SpfL3/
zVvY9lvrIez6KI5r1tWcRTZK8rKx7/Yrf+MGM3ZmhBdDO5eMyhkElUbrgy/z
DWAlPjVtbLQhEjJGBepYGaJT2dpZq4KM2OfNHJw4rWYY4Zlh9dj+q+Tlti4r
M9xfDILbh8nP12AQW4+XDm+AvLxYkKrRdN+QfU+XK1cuFKQOQnafC+2jfxvC
wmtx9UDuIMbO9TFyDWf/psN6uF6lFzuxrz6uXH6rrN/WgB0v1T06F9++KTLA
3nFCvzuj9PHBv3Hx4e96WHCs7lpCuB6EM8729avUZtZtACp+XarZNkcHSyrt
jhzfqoNlj5OM7xVps9epPODX4bJJvA4+RfX5W9lVD7n2Wx++c5D3q/o+QK/j
OX22lO1L+bhlOKDD7ENd9n2y/afD3h+zbcPA0qu6bDvF9tROtl912XEpjlNT
z/ZHqrp8Xnws2z31lLx/akf9yfBKl21H9f/1PupXcf0Un6fnqC7DJXm/1F6x
X8V5UXtaL+pX8XnFfqkdXa/u8GfGyWDt/5QDLeYF7zDWxs+tJ7zM7LUxvlS5
05fP2gzuaf3nvuL1QymRRaLdWgyOaaFGzercgzR5ndpTSdfpORlOaDF4OhCT
N1wvKssbwJYyXOvP4KC8DHc01Vl6pR+zL/sx+74fg4+aDB7JS2pPZavFJ+ap
9enPljJ81GT7oX5NJ2q+emLTF213GgqcJvZj/FIfBj/6sO2oLsOLPuh+99+I
65m9MfvvfI9CF3kp83/qbF2GCxpsSc/JcECDHR/Ni+Yvw0f5etG+luHsAPa+
zI9psyXZEeEB2QvZH+EM4ZXL0x5hEYONmPEasvhys2HuG66ZHmt/hDe0zzQ6
1Xab/FqXxQ3CA7pOOEH9+egPPNF5nR7bD41j+ILB1vHZ+iweJm8Paxg31YD5
DkbY8s+9/4gKo//gvmKd/CDhLc2H8LbDQa/7obMHs89t+qi9r+/Jwaxfc6q5
/8tFbTCL/3Gxt1KedfhvSf6C1u189oxdVy4OYkvyF6cWPS5dvmUw+17y5zJ7
G8z2Q+MjfJfZh9w/5ViZfzxkYMDYlQG7PvT9aJ7k56ikdaBx0XV6jvwR1S8f
L13R7r0BbGI+n/ZcJvc/Ow1+zl+nYvgff0QlfXdFv+Sl0TzpTeJ//RS1Jz+T
N7fCsZtQl+F5uqwdE/4o4iLhF/kBRRwi3KM64Rr1p4hXhFOEa4RTMt6khYkX
hyepdpLjI9WpP6r/L9ykfqk/qhMu0nXF9lRS/4rP/QdXW/invE73ZXzrv/ep
TvdlfFSOy3SdShlv/W9JOER1ak/Xqfz/+lN8P9UJ9wgXCf+opHa0PoRXhFNk
L3SdeAfZI/lt8uPUjuyNcJT4E62bon0olnSf7IHskvpRtCMqyZ7pvmKd7JD6
U3yvov9VtE8qFdtTfzRfRR5H+1ORD9E60X0qaX9TSX6CnlP0S4q8kErF/U91
xX7pe5Pforoi3yN7oO9A/REuEf6SP/pfuEx4SfZD4yH/R+8nfCO8JL9IdcJb
8jsy/mLM4Pow2MzZNWDnnTFMOxtmnENZ3Uq6XDYfC8aOLPDCydP1q5cFHL8Y
Z3W/ZYm2Z2Lbdf1jxazXUFYH033S9aSvSTfPavpi+OGYFU7lWMyd4iqvUzt6
jvQ2laTPO9w4EG/cU66/t/TPPfVpmSXDf+XtswbXW/XcYQG37hvTZ/wwR/Yw
tVzzI+aMHcv1Oelr0uekM0lXk54lvUh6kvQx6UrbJRtGb9tgxpakQxX7O+zU
4WnPKUPYkvQ18Q7ql3gEfT/S0VS3PxmsovFKrqOpTnq/9foP76yGmLDzleGg
XA/TvCgOQPNTfD/1R+8l3iHjt//lPaSv6X3/S4fTeyluIOOt8vFQSeOkcuou
ZcMHZ+Ql9Uf3Kf6h2A+VND5qR++n+VOdvguNi/qn9aG6tnK3HdNuDGHjL4rf
l95H71d8r+J4qV/FeIri/GjeZGdkX4p2pvgd6D49RyWNn+IoFH+ifS/Ddwtc
vFZ5bOc6cxYfaN/KeNlQNm73UGVmZ+/P1ng0YEHy/I7WDJ+zZvinDY4tvRjS
ydgaj42Pf9k8YCjjLyzYfXymyO+WQGzJ4Lk8zkZxQsINGR5aMThpxeCkHJdk
/tcSJtyg5Vnv5fhE/ZoF72pV1tbyP7gn81sWOHcqy3ZBkhz/urzoK/QfLcdF
mf+U1+m+jD/I43qEL4rrTvEvwiFqrxjPUvy+FH+j70r2SnEn2o+EAxTfI7ug
cSuOh/olu6Y6lYp4Rn7DanH319/N5CXtd2pH8TzaD7R/FfcJ1cne6TrtB+qX
xkf9Ku5DxTrhMsULFfcRjUcRL+i9VKf3k/9Q3DdUp3HRfOh9irhL/SvikuJ6
0HwUcZT2N7Wn+2QP/wtvFOdP9xXxlcZL/RFOUkk6mepkZ4rtqR2V5FfIr1Gd
nqOS8FbRP9Fz1B/hNLUje6V1UVxfmh/1979wn/qjdaD50XOK76d2dP1/tafx
032q075V9L90n0ra1+SXFfc7Xae64rwU+6V2iutK41PMD9D60bqR3f8vv0/t
Fe2SSsXrtD/oOeqfvqOiXVCp6G8jvXmZ+x4NZvkK8SzFeP9gm+dRF7Tl60Xt
ie9Qe7pO7alOeQLiQ4r8iJ5XvE/vp/v0PuJzVKeSvrPi+BT7pbgU1f/X/Gke
VKf42P83T8V+KQ5FcSq6TutP16lO46Y6rYNiHO5/zZPq9L3J75C/oTwR4SbZ
F9mvon8gvqOYXyI/STyHeAHxasoj0nXiIbJ4lTXLg7hn/yS3bzcOoyK6d6z/
NYrZf6MZux3N7KMxTNxwJHtfunsGfB/OrO9IJh44gvkuo+DT/mYfx/ujGHsZ
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
    "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWxIXSvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
H8mzdvZ8m49Ut/lIdZuP5CfCsufbfKS6zUeq23ykiuYjVTQfqaL5SO9ZA7H5
SBXNR/KDadlzNB+povlIvrGJPUfzkSqaj1TZfKTK5iNpqUGGVjYfyX8La8/m
I1U2H6my+UiaTJOhlc1Hqmw+0p+fWUYkQ7UAIkP9mF7WXs1Hqmo+knUc1l7N
R1IkQ6uaj/Tn156/SB/JLxcM1T/QR1Kkj6RIH8kRDFWkj6R/oI+U3q0sDkUf
yes/MFSRPpIjGJoG7MBQgz6SV+xgqCJ9JEX6SIr0kfLPb18jgqFelYKh6Wcn
F4eij+SnUYKh6XvvWPukj+RYrH3SR8o/P8H9RfpIivSR0hvZrH3SR3Is1j7p
I2mCSB9JkT6S93Y2a1/0kbwoH6x90UdyTNa+6CMp0kfyozo3a1/0kbTcp4+k
SB8p//wg+RfpI3mr4LL2TR9JkT6SHxE6Wfumj+RYrH3TR0pvwbD2Qx/JWxSb
tR/6SOnnarP2Qx/JMVn7oY+kSB/JJ83N2g99pPzz8+x/46WP5Fis/dJHUqSP
pEgfyRdhF2u/9JEU6SM5Fmu/9JEU6SN5/+aw9qCPpEgfyc9tHaw96CM5JmsP
+kiK9JHyz4/Vf5E+kiJ9pPTDzll70EcyBJK1J30kRfpIivSRFOkjKdJHcizW
nvSRFOkjKdJH8lNsN2sv+kiK9JH8IK2HtRd9JEX6SIr0kbyptll70UdKL1NY
e9FHcizWXvSRcjz0kRTpI+V74RyRPpIifSRHIFWRPpIifSQ/4pdIFZ2I1PHQ
R9LskT6SIn0kzy3JUF+GXPyzVIwUqRg5kpLiDSk5BhUj71aSkmNSMUo/Yp9N
TipGfmgxKemrOGxyUjFSpGKkSMXIWwGkpL69pORYVIwcSUnNVEjJsagY+VHK
pKRmAaTkWFSM0u+uOBQVIz+egJQci4pR+gcHWPumYuRHOJOSOu+TkmNTMXIk
JfVfkpLvEh2RipEiFaP07x6w9k3FyJGU9H3zrP1QMVKkYuSfSCQlx6Fi5J1s
UlKRlPRyiLUfKkaKVIz8fGtSUqWSkuNSMVKkYuRISo5Lxcj766TkuFSMfDom
JcelYpTjUjFyJCXHpWKUI6gYKVIx8r4+KTmCipEiFSNHUnIEFSP7GKTkCCpG
ilSMfs89ZO1JxciXF0hJRVLSv4nB2pOKkZ8yTkpqgkxKjqRipEjFyJGUfP9W
RCpGvuhBSvqnOVh7UTHyw85JST/agbUXFSNFKkaKVIwUqRj5YgspOYqKUfrv
RO36J1JyPlSM/Ah2UlJ8JSW1WiAldfImJedDxciRlJwPFSNPVEjJ+VAx8qPf
SUlfkkftc1AxciQl56BipEjFSJGKka9EkZJaZ5KSc1Ax8hPoSUlFLjy1liI0
56RilL7eydonFSOvOolUHTdEqn+2hbVPKkbWcIlUTeKJVC3piNS5qBgpUjHK
d7+VkUjVSyZS/esxrH1RMfLz+InUuagYKVIxciRS56JiZOgRqXNTMVKkYvR7
FDhr31SMHInUuakY+SkJROrcVIwUqRjZGCNS56FipEjFyJFInYeKkSIVI/9Y
AZE6DxUjXw8iUuehYuRIpM5DxcgXS4nUeakYKVIx8o8kEKnzUjFyJFLnpWL0
e4gta79UjHyRlkidl4pRzkvFKGdQMXIkUmdQMfK1fiJ1BhUjRSpGfxCCSMXI
kUidQcVIkYqRIhUj/4IEkTqTipEiFSNHInUmFSP/xhiROpOKUfr7ydqTipFb
JVJnUjFyJFJnUTHynWlE6iwqRr5yTqTOomKU/rkn1l5UjBSpGP3ePGsvKkaK
VIyEOSpGilSMHInU9VAxUqRiZGISqeuhYqRIxci/jkOkroeKkSORuh4qRn5w
GJG6BhWj9I9foXZfqEHta1AxciRS16Bi5O1mInUNKkb5XjxDpGLk7y6R6t/g
Yu2TipEiFSP/yAmRuiYVI0UqRv7xciJ1TSpGjkTqmlSMfr/rwNoXFSP/uAqR
uhYVI0UqRo6/b+x/At/KmSY=
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8334374776208763`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"75b8e18a-b6ba-451f-9f08-572a14028cba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellLabel->"In[68]:=",ExpressionUUID->"59f34ee6-387e-4b30-b826-3e4729da82ad"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
rVl7UaLh2ysOtWbHVz/n++uqtmE2tmvD4x/B02Xz27DfUx3g1j5tw66voZK3
6f/xT4rf25ulS5XebH/lHG9hfAvTNXv5/vrHfH9L+bYsXdKqLdtfEQGm8VFs
r6gz2rL2jW433974gFtctp3p//FWtEzKrRrMrZ3RjrWHDDt5uuheO3Z8aan2
bHtlM25NaHu2vX4at2Vbe3Z8yW1uhagDj79JBx5/EE83pnZg7T3xlg6svSi7
0YG3//5wa907suMZBnRk949oakfe/9/YkbWnlIaOrHzR/OTb6xt14uMf/Tqx
8lEyuRPrbyvWd2L9cfXlTux4uu+dWPlmdO7M2qPivp3Z+JMssTO731Tazux5
017ozJ//L9wiJx9mqZ8P21+Z4MP7v7k+rLzUn/Vh52P5yI8ncezC+7++3GpV
F1Y+61Z0YfsbT/F08QeeLqsjY+WhqpuMnZ92nIzHn8MtOiHj/V+zjJd/NeVs
e41MzspPfQy3ZTHfXnJMzo6veCNn56e278ryV9e5K+tfGEd35fVfdldWf8oK
+faql11Zf0Ur7sbuJ0OHbmx/0ShuaVY3Vn8rD3Jrirqx/oS+Snf2e5a23JLh
3fn437zu7HlR7+fWGbmNFXvw+Nv04PX/UJ6umt2Dna82vwfv/zzqwcf/yvuy
/pa0pS9//sN9+fjfLF82nqTX+fLxn/u+7HmQlOnJzk/RoidrL6kH9eTt3/Se
rH9k3NGTtZfFd/n2spK9WHtZ1bQXa19qQ3qx8seg7sWuj2hbL97/u9WLx/+v
F2u/aTz8WPtSH+jH+ouWFJ4u2ezH2reK636sv6P+7SeMv2B/QufWW2ivt8X4
FWDvQesbrLuG88/i5N7C8XC+Wraht3A9cT5bdbW3yXa+VVsMtpkvNzTsI+QP
zs+K+vURyiOa/00CvwoID/4WgVauAw/46plb7Srur7kELqNPKlvlD84H67/1
Ee4v/H2LpK/Jdj5Y0qcv218xsa/Jdr5evaavyXb+Wne+r8l2vtn4Gdz/9Vf3
jwdp/ruBP/TP8rwG9wxGy3r5s3TVeH92PO0qf/Z7hjP+Jtv5bdFHbmm9fibb
+XNlD3D5yzuTPavT/HdcPxaffjl4Zf0tRz/Ppfnvk/2E8V+K/30/dnxF7f4m
eW6TJ62qr8Xrq+4KDqm2LKNvMc1/jwVr2zpske5HG5f2F8pjtPh4fzYfKzOB
beavVQ4Kk+38ubaLgs1nGqIVJtv5atFiBZuflR5VsPlF5WsFm5/UVB/A5o/1
nQaw+UpLJLj77KWdVi+l+c+F3IrDA9h8qPrFAHZ+umoB7PyM7cH7Aso/r96T
5j9HcssWBLD5a1VBAJ//fBbAztdQOZCNR4jaBrLnTzoskM1HK+fydM0+sP+R
WLvaJur/P+HHs1QIYumS1kFsfl8xBFxqyccPrZrT/HdmEMtf3Z4goT1I878P
g9j1F5cLZvkl8wpm6wFUYcEs/7Qzg3n8u4J5/PeD2flJS4eweJXNQ9h4h2Zg
iDB+S/FPD2HjPZbtIez4kjshbP5aUSKUxaf2DGX3jy44lMVrTOPp4q2hfP3D
zVC23kD1N1QYb0VrGw9k2xsCuEUpA/n9v4lbeQ3ca31J9wd6tOYXt951EL//
+w9i+0umDDKx9R95g9jvq69w635wG10G8/l//8HseLJJg3n8awfz/L/I0w1f
B7PnRSQJY9dL2juMxz8hjN0/mtU8XX8O7Fyy6trelyn+T2Emtv6lfjh7XhU9
udXx4Sw+3cpwHv/pcBav2BLO4pHVjWDpqu4RbH9tbAQ7X8OyCLa/6CRPl77j
VtYawo6vkQ9h+a0fM4SVZ5YlQ1j5JdFzK94O4fHXGMqeB53PUL7+I2oo21+8
aCj7PdkRbtWroez6a+2UbD2KoaPSxNY/RSpZfS/VKIX2O9X/h8CnL944uG4x
rf95rmTtB33VYay+tbQbJoyXYXtAMgJss95OMR/80K5fpSFfcH2b+gD4cYMZ
6qkVaP3b02HC+Bytf6s0XBj/xPaO2Bt8cM7puIqemC5Tgo2eh76uaEDtnznD
hf4Fnp9273BWHxseg/W7R18dFUP1f4URQvuc6v9WI1j9rowYYbJdT6jJGMHa
G/rdI4T2IcX/YITQnkRLyo4U2pNohXQkay+pB48U+r94fN0McNNh4+blWtDG
nSNZ+0l8byQ7X1mpUdCejF1forAMWtVsFGvvaUNHsfwyTBsl9Leo/bcdfOJo
bvcZaZT/t0fx9p8o0iSv/KpuZFQntKZJJGsv6oMihf4n2pLK0yVb+P6KG5HC
+AOt//sTyet/99Gs/WIcMJrd3+Kp3LKNo/n6L8No1h7S/hzN2z+NotjzIOof
xY4nnRzFnjflem7N5Si+/u17FC//naNZ+SrpG83WOykSo/n6N200aw/oLkSz
9XvGL9G8/eMUw663zC+GP/8J3NrcGHa+hrMxrLwWfeLpUscxzErfMez6aVRj
2PXQrxjD+huWU+BWmdXMP1qgJR+4FXXGsvpd3W0sO55u3Fi2Ps+YM5bXfyfG
svpXZh7Lro+q5ji2vVY2jqUbYsax8l20hG8vPTaO1Q/KN+N4+9c+ll0/fedY
dr6W0Txdkh3LymNFIU9Xv+TpOnEcay8bO8Sx9YXiUXG8/s+KY/ef6mAcuz7a
ojje/qmi4u2fdioWr3Q4T1fOU/H496tY/0NvVLHzt1SM5+sf28Tz+IfGs+ul
nh3P8keXH8/iMz6KZ/klLj+et/9ajuftn/DxPP9njWfHM+h4uujBePb70jIJ
LH+ULRJ4/IMSeP2fnsDqb8uOBHZ8yV2+v6LkBFY+qJtOYOenC5nA4jGqebp4
G7fs1gSe///4/lqPiex+MARyi1In8vbP5ons/JTXJ7L2pOY3t94tkc0nWxSJ
LF2SnMjKM8WGRB7/Vb69rpgfz9hwErO43yTWX5ElTWL9NdU6nq69NIn9nuEb
t8g5ibVvpX2SeP93Ik/XrEliv6c/n8Tj/5zE2tOSBpPZ8RS9JrPyVT1+Mm//
ruI2npnM8//jZF7+1ZvC13/3mMLzP24Kj3/5FHZ+olNT2PlJ30/h7d/aySz/
NF2Tef9/bDKPf2kyj/94Ml//beLbqx2msuPrukxlxzdGT+X5v3gqu/6yo3x/
1Wuerq2ewupbQydu0egU3v9dmML7/4e5NS9SWH2tr5bK+suW9qm8/zsylW2v
WMC3VxfwdN2zVJZfxspp7HqK26bx+39YGr//56ax42n38XTDkzS+/qOiml0/
aWtu5RA1216Tqeb93z1qvv7/oZr3/8pNY+WjwmsaX/8eNo2vf585jR3fuGsa
ux7i+9N4+Vd6Ou//NZ/OttcO5OmG6dN5/bdjOvs96Z3p7PyVJdLZ86jxTOf3
f3A6e34sadySrXx/xc103v//C54wZETO5sc4fqJrPIONrxgDZvD3H1K4ZZtm
sPal6hq4iffLiaecafzr1wx2PxhcZ7LjixQz2fiOdMpMdnxlHt9ec2UmO77+
B0+3uMxi7xNI/Gex8SHFpFlse/Vanq67OIv9vvErTxdLMtj+st4ZPP4JGXz8
b3UGi89wLoONz4k+83Rp/UxmZc9M9jxr4jP5+NdKvr3ldCZf/2Th2yvqzmbr
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
qh/efyAMrR4K7hLQfVZwIc1/zwZ3fNJ/fk4sphvz+f7ix+Dnq3e+HziW6r/y
30zydvY3Zg78Q+PfLcERmxYuvfCAxr/DwQ97xvofaoY2zPomzK/Q/Ofub8L7
bmjpg2/CfAxaWea7MP+D1rT4LqynovnPQeBOkDs1+1D86WA3HODC8XzJTrC1
dVT3K43/3wUfyN/VqVd/3F5d8odJvuqURDc+iuJv+oOtnzCGgG+MbZBx/DfV
f9N+sPF42TbwxuXvJwYMRatuWbe3Vgf3cH/tP/A3+dIy9mlog0exSb7i6sEH
X69T/geBndZdq3/qCrV/U4tZfazcDG57umjd4O6YrrleLMwHUf3/G7yorf7S
JAva4vbTJF+Z6HV5wi6q/weA33d7PP7rCKr/k38K81dU/2/4yds/V8ELr5Xw
u3uA2j/FP4XvPVD7p9Ev1t6Q9QOHi+pu6POP2j9Jv4T5Prr/14E9f+0s//cA
3f+XfgnzYWjRd3DNPgunumrQUuffwvwi5X8fsHU04raK8n/ibzbfol/zW+gP
U/6f/y2Un3T/f/nN7g9Fgz8muY95Zsn96ZT/vf6w/XXjwRk1SjVaIUMbV/1h
8+3is2CPTlGJj8Jo/ucj+MY6n/P1ven+r/cXnodDvSfduYf3m7YH+F7yxx7J
hWhDHPiZxPlCrb1o0Yq/wno1uv9PgVMqODgOEVP878F/q+lC3q3A7TW1/wnr
SXF+S98VfC5sZ+rYbLRl7D+2fkOS808oz2n9y3Fw8ui9wX4jaf7f9I+th9E5
iMz/r5el9W9dwDbrPcQxYFrvivNtssVg6j/T+o+jYOqP0/qP12BaT0rxVy9h
tl1vIuoM/nj4zdL6z9DS0eAt2nVvQzuglQvBNP+P1hwGjxpgnVGk+F+AA8tN
7rysBsVfraSZzf91AIfc+Nr9zkyKfySY6kea/1sAxumgAZT/BeC1uTeaGt7T
+pdnYJv5PnGVUmY5dpdyMV3WFkx/PwOtGga2yT/tXHDBYPfmZz0p/n3gtkHz
PrddS/lvBJfb9+T+7Gxa/1GxtNl2vYayNZjWM1P+DwHPsQ5HBaP1meA27y/H
LYtCW/aAfRb9+dxaSfn/CEzz/VT+lStjlj8OsvZYKH4v8Aj3wtKbfGj+Mww8
4FE4ZDHFPxNsu/5JB5421RogxX+/DPs9VemyZjl9Lpju/+ZgGh+n+AeCpz87
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
BA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6199008*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6199008*^9, 3.8333952*^9}, {0, 0.684777}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.833437493779728*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"9d9b836a-410c-4cb1-9546-c2feae8b7e0b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Primerjava Bitcoina, Ethereuma ter Dogecoina", "Subsubsection",
 CellChangeTimes->{{3.833437948972124*^9, 
  3.833437978404684*^9}},ExpressionUUID->"0af1b9a5-ecf0-4039-b7dc-\
ae1bf8f3b155"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", 
  RowBox[{"{", 
   RowBox[{"\"\<BTC\>\"", ",", "\"\<ETH\>\"", ",", " ", "\"\<DOGE\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8334380186514854`*^9, 3.833438030303952*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"c0107354-d14c-48a8-8c51-de1987aa0d96"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAKMtzsGn46kHS0Yt7UpV8QD7CDxIN
/+pBVoA2na8kdkDRjQRlPwbrQTFrzR1gqnVAPT+GofcM60GluMve/ohqQGN7
gx+OE+tBCeTciRIncEAHjNmOsxrrQRVHPjL3BmxAg4K8514h60GHWb1rw/9t
QH1N+DGZKOtBta3e04m+cEAxo6+9sS/rQbAhBfJGRmtAvt7zMlA260HBXMwP
HJdtQMnukJl9PetByoFnGl7FdECs5LrpMETrQXYG2MgAdXtASmVge8JK60HJ
5A/TEap3QGW6Xv7iUetBa7s3PrjeeUBZ9elqiVjrQWw1Fl4y8XtAygTOyL5f
60HAHGR24/qBQPaeLWjSZutBmi4tZ/AJhUD7Hhrxa23rQTG6G95s0IFAfXNf
a5R060HgmMBPU06DQNitMc9Ce+tBIzyt4vZ7h0CwvFwkgILrQZSLZzsj4o9A
Q1YDu5uJ60FCczaJ/GWPQK7VNjs9kOtBNSmhsIH2jkCXKcOsbZfrQUgkAXZ8
ZJtAWWPcBySe60FAUJ8OOx+kQNUncaS4pOtB1t3iZxqQpUDPwF4y3KvrQXUu
IEfuI7BAoT/ZqYWy60G4CKFWRoK3QPGSrBK+uetB1WxZ2R83xkD7cPu81MDr
QXGh2RpBO8pA3jTXUHHH60G7rrtfNhXDQD7NC9aczutBvAp/HUWmukB3S81E
TtXrQbDtUyA+UsBAalQK9d3b60EeFf4YfVa3QNsxoJb84utBpHRko09YuEAl
9cIhoenrQWMKTz7tV7lA7Iw+ntTw60H+sikbm+i4QIwKRwSO9+tBnACjMVbB
qUDmEsurJf7rQYL61Fi3H6xAvu+nREwF7EFP9v2vdImuQG6yEcf4C+xBb5cr
1bp1tECcSdQ6NBPsQc2+wZAhQsBAhGsS8E0a7EHgYF2Qtv3GQEVz3Y7tIOxB
iWUw4vvLw0CETwEfHCjsQS2mKGNBCsBAmxGymNAu7EHttwJH0hfBQG1e3lNj
NexBC/0DeKmsvEC8f2MAhTzsQZBiD+HGi8JA5IZ1lixD7EFrwOARca2zQIpi
4B1jSuxB1cig2Av0wEDqyMbmd1HsQX+EUIqNXsJAIxU6mRJY7EH5v0tva0fC
QNk1Bj08X+xBAE0KQ1toxUBoPF/K62XsQSzkssXhSsZAdBcRSSpt7EErS2UF
tuDQQCTEEa7rb+xBBOXnSUrC2UBoJL8a
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$279725#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6199008*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3619900800, 3833395200}, {0., 
                   26377.160760854385`}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAKMtzsGn46kHS0Yt7UpV8QD7CDxIN
/+pBVoA2na8kdkDRjQRlPwbrQTFrzR1gqnVAPT+GofcM60GluMve/ohqQGN7
gx+OE+tBCeTciRIncEAHjNmOsxrrQRVHPjL3BmxAg4K8514h60GHWb1rw/9t
QH1N+DGZKOtBta3e04m+cEAxo6+9sS/rQbAhBfJGRmtAvt7zMlA260HBXMwP
HJdtQMnukJl9PetByoFnGl7FdECs5LrpMETrQXYG2MgAdXtASmVge8JK60HJ
5A/TEap3QGW6Xv7iUetBa7s3PrjeeUBZ9elqiVjrQWw1Fl4y8XtAygTOyL5f
60HAHGR24/qBQPaeLWjSZutBmi4tZ/AJhUD7Hhrxa23rQTG6G95s0IFAfXNf
a5R060HgmMBPU06DQNitMc9Ce+tBIzyt4vZ7h0CwvFwkgILrQZSLZzsj4o9A
Q1YDu5uJ60FCczaJ/GWPQK7VNjs9kOtBNSmhsIH2jkCXKcOsbZfrQUgkAXZ8
ZJtAWWPcBySe60FAUJ8OOx+kQNUncaS4pOtB1t3iZxqQpUDPwF4y3KvrQXUu
IEfuI7BAoT/ZqYWy60G4CKFWRoK3QPGSrBK+uetB1WxZ2R83xkD7cPu81MDr
QXGh2RpBO8pA3jTXUHHH60G7rrtfNhXDQD7NC9aczutBvAp/HUWmukB3S81E
TtXrQbDtUyA+UsBAalQK9d3b60EeFf4YfVa3QNsxoJb84utBpHRko09YuEAl
9cIhoenrQWMKTz7tV7lA7Iw+ntTw60H+sikbm+i4QIwKRwSO9+tBnACjMVbB
qUDmEsurJf7rQYL61Fi3H6xAvu+nREwF7EFP9v2vdImuQG6yEcf4C+xBb5cr
1bp1tECcSdQ6NBPsQc2+wZAhQsBAhGsS8E0a7EHgYF2Qtv3GQEVz3Y7tIOxB
iWUw4vvLw0CETwEfHCjsQS2mKGNBCsBAmxGymNAu7EHttwJH0hfBQG1e3lNj
NexBC/0DeKmsvEC8f2MAhTzsQZBiD+HGi8JA5IZ1lixD7EFrwOARca2zQIpi
4B1jSuxB1cig2Av0wEDqyMbmd1HsQX+EUIqNXsJAIxU6mRJY7EH5v0tva0fC
QNk1Bj08X+xBAE0KQ1toxUBoPF/K62XsQSzkssXhSsZAdBcRSSpt7EErS2UF
tuDQQCTEEa7rb+xBBOXnSUrC2UBoJL8a
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$279725#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6199008*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3619900800, 3833395200}, {0., 
                   26377.160760854385`}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                  TagBox["\"\"", "SummaryItem"], 
                  RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {CompressedData["
1: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
FfsfQAQ+lQ==
       "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWxIXSvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
H8mzdvZ8m49Ut/lIdZuP5CfCsufbfKS6zUeq23ykiuYjVTQfqaL5SO9ZA7H5
SBXNR/KDadlzNB+povlIvrGJPUfzkSqaj1TZfKTK5iNpqUGGVjYfyX8La8/m
I1U2H6my+UiaTJOhlc1Hqmw+0p+fWUYkQ7UAIkP9mF7WXs1Hqmo+knUc1l7N
R1IkQ6uaj/Tn156/SB/JLxcM1T/QR1Kkj6RIH8kRDFWkj6R/oI+U3q0sDkUf
yes/MFSRPpIjGJoG7MBQgz6SV+xgqCJ9JEX6SIr0kfLPb18jgqFelYKh6Wcn
F4eij+SnUYKh6XvvWPukj+RYrH3SR8o/P8H9RfpIivSR0hvZrH3SR3Is1j7p
I2mCSB9JkT6S93Y2a1/0kbwoH6x90UdyTNa+6CMp0kfyozo3a1/0kbTcp4+k
SB8p//wg+RfpI3mr4LL2TR9JkT6SHxE6Wfumj+RYrH3TR0pvwbD2Qx/JWxSb
tR/6SOnnarP2Qx/JMVn7oY+kSB/JJ83N2g99pPzz8+x/46WP5Fis/dJHUqSP
pEgfyRdhF2u/9JEU6SM5Fmu/9JEU6SN5/+aw9qCPpEgfyc9tHaw96CM5JmsP
+kiK9JHyz4/Vf5E+kiJ9pPTDzll70EcyBJK1J30kRfpIivSRFOkjKdJHcizW
nvSRFOkjKdJH8lNsN2sv+kiK9JH8IK2HtRd9JEX6SIr0kbyptll70UdKL1NY
e9FHcizWXvSRcjz0kRTpI+V74RyRPpIifSRHIFWRPpIifSQ/4pdIFZ2I1PHQ
R9LskT6SIn0kzy3JUF+GXPyzVIwUqRg5kpLiDSk5BhUj71aSkmNSMUo/Yp9N
TipGfmgxKemrOGxyUjFSpGKkSMXIWwGkpL69pORYVIwcSUnNVEjJsagY+VHK
pKRmAaTkWFSM0u+uOBQVIz+egJQci4pR+gcHWPumYuRHOJOSOu+TkmNTMXIk
JfVfkpLvEh2RipEiFaP07x6w9k3FyJGU9H3zrP1QMVKkYuSfSCQlx6Fi5J1s
UlKRlPRyiLUfKkaKVIz8fGtSUqWSkuNSMVKkYuRISo5Lxcj766TkuFSMfDom
JcelYpTjUjFyJCXHpWKUI6gYKVIx8r4+KTmCipEiFSNHUnIEFSP7GKTkCCpG
ilSMfs89ZO1JxciXF0hJRVLSv4nB2pOKkZ8yTkpqgkxKjqRipEjFyJGUfP9W
RCpGvuhBSvqnOVh7UTHyw85JST/agbUXFSNFKkaKVIwUqRj5YgspOYqKUfrv
RO36J1JyPlSM/Ah2UlJ8JSW1WiAldfImJedDxciRlJwPFSNPVEjJ+VAx8qPf
SUlfkkftc1AxciQl56BipEjFSJGKka9EkZJaZ5KSc1Ax8hPoSUlFLjy1liI0
56RilL7eydonFSOvOolUHTdEqn+2hbVPKkbWcIlUTeKJVC3piNS5qBgpUjHK
d7+VkUjVSyZS/esxrH1RMfLz+InUuagYKVIxciRS56JiZOgRqXNTMVKkYvR7
FDhr31SMHInUuakY+SkJROrcVIwUqRjZGCNS56FipEjFyJFInYeKkSIVI/9Y
AZE6DxUjXw8iUuehYuRIpM5DxcgXS4nUeakYKVIx8o8kEKnzUjFyJFLnpWL0
e4gta79UjHyRlkidl4pRzkvFKGdQMXIkUmdQMfK1fiJ1BhUjRSpGfxCCSMXI
kUidQcVIkYqRIhUj/4IEkTqTipEiFSNHInUmFSP/xhiROpOKUfr7ydqTipFb
JVJnUjFyJFJnUTHynWlE6iwqRr5yTqTOomKU/rkn1l5UjBSpGP3ePGsvKkaK
VIyEOSpGilSMHInU9VAxUqRiZGISqeuhYqRIxci/jkOkroeKkSORuh4qRn5w
GJG6BhWj9I9foXZfqEHta1AxciRS16Bi5O1mInUNKkb5XjxDpGLk7y6R6t/g
Yu2TipEiFSP/yAmRuiYVI0UqRv7xciJ1TSpGjkTqmlSMfr/rwNoXFSP/uAqR
uhYVI0UqRo6/b+x/At/KmSY=
       "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
        ValueDimensions -> 1}}, True, 12.1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAUZxkcM4t60HwKQa8Ji0GQPDp6P6S
M+tBHo1p+bR07z9AA57A0znrQbb+e/d3Zt8/FWb9bao/60GLwOn5k77tP9Q9
icljRetB4EvnUf4i6z9E4UVYmUvrQdnGQjgxigRAOc6s0mRR60GRmcrHYKsm
QN+GRICsV+tBL4mxRC2WIkBvtAjc1l3rQRUd3Qk3RSlAhCt3I5dj60EfTOpC
QKwoQEpuFp7TaetBqCb/8ADVJUCW+l8Epm/rQcYXIci53CdAy/vVGFt160Ed
u9K5WuQnQLHIfGCMe+tB7pVdKok4I0Ad382TU4HrQTUqRNSgBR1AOsFP+paH
60H4X7TaRJwlQEAY/g69jetB5bdeUoC6NUDMuFYPeZPrQQ3yjqvJfkhACCXg
QrGZ60FSRGlT22xmQMraE2J/n+tBuzqKLSUvckA9XHi0yaXrQehSKwSFKGxA
mVIJtfar60GAT67aCz5yQHuSRKG5setB+ASeOrbvdEAOnrDA+LfrQffw6YXZ
inhAJ/PGy82960G+NCaW4TGHQCm9CYWFw+tBKdnR0TjYkEDcUn1xucnrQRDY
xgsKnoVAFDKbSYPP60EZXP1DvNR/QP3c6VTJ1etBbAcoTKeVg0DQ/GQO8tvr
QQ6q+v4a/3pAKGaKs7Dh60F+q0WCpPx5QDGb4Ivr5+tB/XWQhmGfaEDAGeFP
vO3rQXxAHlsAnGlAOA0Owm/z60GwiQl31ENlQGHMa2ef+etBiAB5LPJtYEAQ
1XP4ZP/rQbyH5NUVEltAcKmsvKYF7EGRpaNl0CphQFXHj2x+C+xB94qvdiSp
ZEAkWp/KOBHsQZ7QvzfNVW1ApLjfW28X7EHg7SRBL7xzQKlgytg7HexB/6lg
9pBTakBf1OWIhCPsQUsA6on3QWVA/7wt568p7EFNu6edsAhnQCTvHzFxL+xB
VF9oQ4vtZkD67EKurjXsQbZegvKrm19AVjQQF4I77EGnSM1AtJdmQJvwCS44
QexBk3rMuyc2bECReDR4akfsQTPW+vHdx2NADUoJrjJN7EFAtK1nGAtpQDrn
Dhd3U+xBhwt5eMCCbkBQ+UAunlnsQQfOUGMiHnVA7FQdMVtf7EFHxA+/vx94
QDl8KmeUZexBOUWDtbJqd0AL7eGIY2vsQVH6ncUbFHxAjinK3a5x7EE1KtmD
uIeCQD5PMeGwduxBncOL3O0xk0BJz76V
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$279877#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6478944*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3647894400, 3833395200}, {0., 
                   1228.482286628546}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2144", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAUZxkcM4t60HwKQa8Ji0GQPDp6P6S
M+tBHo1p+bR07z9AA57A0znrQbb+e/d3Zt8/FWb9bao/60GLwOn5k77tP9Q9
icljRetB4EvnUf4i6z9E4UVYmUvrQdnGQjgxigRAOc6s0mRR60GRmcrHYKsm
QN+GRICsV+tBL4mxRC2WIkBvtAjc1l3rQRUd3Qk3RSlAhCt3I5dj60EfTOpC
QKwoQEpuFp7TaetBqCb/8ADVJUCW+l8Epm/rQcYXIci53CdAy/vVGFt160Ed
u9K5WuQnQLHIfGCMe+tB7pVdKok4I0Ad382TU4HrQTUqRNSgBR1AOsFP+paH
60H4X7TaRJwlQEAY/g69jetB5bdeUoC6NUDMuFYPeZPrQQ3yjqvJfkhACCXg
QrGZ60FSRGlT22xmQMraE2J/n+tBuzqKLSUvckA9XHi0yaXrQehSKwSFKGxA
mVIJtfar60GAT67aCz5yQHuSRKG5setB+ASeOrbvdEAOnrDA+LfrQffw6YXZ
inhAJ/PGy82960G+NCaW4TGHQCm9CYWFw+tBKdnR0TjYkEDcUn1xucnrQRDY
xgsKnoVAFDKbSYPP60EZXP1DvNR/QP3c6VTJ1etBbAcoTKeVg0DQ/GQO8tvr
QQ6q+v4a/3pAKGaKs7Dh60F+q0WCpPx5QDGb4Ivr5+tB/XWQhmGfaEDAGeFP
vO3rQXxAHlsAnGlAOA0Owm/z60GwiQl31ENlQGHMa2ef+etBiAB5LPJtYEAQ
1XP4ZP/rQbyH5NUVEltAcKmsvKYF7EGRpaNl0CphQFXHj2x+C+xB94qvdiSp
ZEAkWp/KOBHsQZ7QvzfNVW1ApLjfW28X7EHg7SRBL7xzQKlgytg7HexB/6lg
9pBTakBf1OWIhCPsQUsA6on3QWVA/7wt568p7EFNu6edsAhnQCTvHzFxL+xB
VF9oQ4vtZkD67EKurjXsQbZegvKrm19AVjQQF4I77EGnSM1AtJdmQJvwCS44
QexBk3rMuyc2bECReDR4akfsQTPW+vHdx2NADUoJrjJN7EFAtK1nGAtpQDrn
Dhd3U+xBhwt5eMCCbkBQ+UAunlnsQQfOUGMiHnVA7FQdMVtf7EFHxA+/vx94
QDl8KmeUZexBOUWDtbJqd0AL7eGIY2vsQVH6ncUbFHxAjinK3a5x7EE1KtmD
uIeCQD5PMeGwduxBncOL3O0xk0BJz76V
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$279877#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6478944*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3647894400, 3833395200}, {0., 
                   1228.482286628546}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2144", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                  TagBox["\"\"", "SummaryItem"], 
                  RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {CompressedData["
1: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
UIDXzRbgeCDHoXqnyQ9iS66JMsf7wMmjVkRbHRfHM90b72O1Bx6X54H9UugB
vJ8CsYaOO77vMwfjjLeXXE974X0g6xaktw95Y16+7oHxgfDCepn8fJytJeya
ysV93qc8qNlwiOo4iYfjbZ/8OpOL83SbN/bPXy8Yq8dqeZTCxXrygTd8uzmu
zeYbF+tWdR9Yd3u5MJ2s99D+sOV1dIo3PDq4s+V3nbx+8+fi/NDl4vnWyZ9T
ysX1o5CL67LlXLyuM+4YVzM9sN1/PLC/guR+WeqF51vnBaKsL63H33vi8d7y
z2BPXD+e9gTNm65EcrEnrvOjPXH9uE8+jqwHkX92e8rj0BPXlfGeuN496Ynz
5bgHXt9ZD/jdlE9dSNa56PsmD+yP6Z6ovzs42hNurVMjDnzxxHbreGHes/YG
7pgr1CaaN65LEuT7ttYL81OaF16fF3ltxyeYW7xwPLzxxPXTKQ5+fhYHx+kH
Ns4jKRsO/97YoqfDwXlf4oLjwIqJ71dlASPiieb80wzI9T5a8PWpM0yyuFGd
x3DEfKLhhPNOZQ+YXfVpKRLtwX2YXGew33q6+pqLE4jXjBT+snJEOv5UqRPw
1EbXtqs5QfyBc1GLVu6BuAdHzC4e2AOoTZtvj/TaxX5boHXe0nyzfTc8Page
tWz8bkipK4iacXc33MncVtvWbQvnv5AJvMoWWuemSn6V2ELWlGbNvYW7cH9x
2i7k/6Uau3CfbNsuODpdS5x6Zzcs3vIqymSjPe5f2dhjv010gmuTTxI3GHtg
csbZgpwFTjCW8KNE2jFxvyGBhfB91Eomyovz4Uz4sntEdZOeE+yvmsG4sJiF
dFIGsCB4gYtYFM6Cu2mPpHdOMoFTHStens0Cx7SjkniWK5jJXtgqdgFhQiGI
t7uCR3cr0zfAFW66d7e2XnaFqmXxFOYPFxhMNdSKue8C+Y47qOdfuyC8GzGd
CVNLqmpntDMgg14iaYpkwOCBT/mBpk4ga3ct0mHCqdvHKWoxzrCiQkNbod0Z
v9fxhdy3rAHtUnCGaVEnxMu0GUAdl1rg2uwEvZwNxCwrJ/hgTm99ecYJNg/p
C386OgHz4YgY091OMHKuU+1Scr86bb4KN2o5gY/6BrN+e0cI1Z6teaPEAc7e
mKtlyXGAiUsDNVVW7IEQo9b8zpsOcKJgonRMpwNcW7ialZSzBywHHFsSWhxg
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
h/z2aI4Y/gfbCMXe
       "], CompressedData["
1:eJxdnU2u7MxxRD8DHgjehXfA+s3MJRjQyCsQPDDgkQfy/uGIpv3xpARBeAG9
V7dvNLtOsXjI/tf/+O9//89/+uOPP/7+z/qfv/7X3//nH9Lf/oL0b/+iP6y7
I2vv5/kzVj75xXxuTMRx1kWc+peIa14MlXtMDrWrONTJw6F+P+eLcZJD5d4c
qtbAUPWMwFA1nv0w1oOhasbFULXu4lB7F4f6/bpfvHNyqHiSQ0UdDpU5OFT5
x/5/PM9zUPt5xkbt55kTtZ9nDdR+fr8eY14OdWJyqHuKQ8U+HCrX5FA1UPsZ
z4PaFQu1nzECtZ/xe/O/uM7Dofa6HOrMxaHuUxzq1uVQkZND5U0OVQe1648b
tZ/5Owa/OAdrn+th7XMla587WPt0cYh3s/YZi7XPHKx91sPa5++j8GdcT7D2
NS5rX/Ow9rUWa197svZ1Bmtfp1i73gPWroFY+/p9Ir9Ym7XvZ7L2PQZr3/Nh
7fv3d7+4grXvfVn7Ppu177tY++//Q9SUxKGyWLs/hBjKRz+GOr+X/EW93xhK
RbN2/4YcSkNzqN/89MUbrP3EYe36u6xdH0jWfn/NfXE8rP2OZO13Bmu/67L2
+5smv6ijg0Pdydr1kln7jWLtv88YYl3WHs9h7TEWa485WXv8ZmvEYu0hMnAo
Dcah/F/E33H0xVysPWqwdv2RtQtsrD1/0PjivKw912btegNZe2pe4VC/wxmR
SD0ZROrJJFJPFpF66iFSTw0iVQcOkerjiLXXIlJPbSL11CFSNS8QqaeCSD2V
ROqpIlIViVT9PSLVhzNqvzqaUft9FpF6n02k3ucQqYpE6n0ukXrfH/vFJFJF
FCLVnyrUfscgUu/vAGUkUu9YROodm0i94xCp9/3tvxhEqj7NRKoikXpHEan6
uBKpdw4iVWsRIvUKqKxdrbL290344iFS77xEqucY1j6TSL2ziNS7HiL1rkGk
KhKpqoZIfSd6xE2k3nWIVE91rH0FkapIpF6RnLWvIlL1Q4jUuweRet9D8ouL
SFUkUv0pYu37EKlaIhCpWl4TqV5As3YtVVm71ois/f1kfHEQqV6OsHZN/Kxd
AGbtv3cX8RKpnutZu+Zc1q7ZjbW/H9A/oz7erF0fJNauI5i160hi7XcRqS6L
tZuxHOoSqVdTKmt/54kvFpGqSKQag6w9BpGqgYnUG4tIvXo/WXscIlWRSL3v
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
Vcc6kboO9aQwyFn7oZ7k+ZVIXZd6kiORui71JEXqSfZSidTfbX8cinpS/Gxi
DpVE6s9Z4FDUk+K3M4qhgnpSrKCeFL+PLIYK6kmORKqWV0TqCupJitSTFKkn
/SQS1p7UkxyJ1JXUk8xXInUl9SRF6kmK1JMUqScpUk9yJFJXUk9SpJ5kWZhI
XUU9yTMMkarZikhdRT1JkXqSIvUkRepJitSTLCkTqauoJzkSqfo/iFRf/kTt
+6GepEg9yYcCkeo7ew6Hop7kSKTuh3qSV49EqtbaROoe1JPi3X5FpJ7kSKT6
BqPiUNSTFKkn2eAmUjWJEKla8hOpikTqHtSTfHcKkbon9aTw3hZrn9STvBVA
pO5JPcmRSN2TepIi9SRF6kmK1JNC+CFSfbsVa1/UkxSpJ9lnJ1L3op6kSD1J
kXqSIvUkRyJVwCFS96Ke5KOGSN2bepIi9SR71USqTsOIVJ+VsfZNPclbTkTq
3tSTwjefsfZNPck6P5GqSKTuQz1JkXqSIvWkeKmASD3J1+yIVN8Dx9oP9SRF
6km+yYBI3Zd6kiL1JEXqSYrUkxyJVE2DRKo/cqz9Uk/yzQ1E6r7UkxSpJzkS
qTuoJylST7KPQaTuoJ4UviOQtQf1JN9jQaT692HtQT1JkXqSIvUkHTbUkxSp
JylST3IkUnWUEak7qSf5zg8idSf1JEXqSb+jl7Un9SRF6kniOvUkY55I1cFO
pO6inqRIPUmRepIjkaojgUh9r6UhUk9SpJ4Uvk0TtZ+HepIjkeptftR+HupJ
XpkQqTrdJVLPQz3JtxoSqYpEqi9ULA5FPclXYYnUM6gnKVJP8hFJpJ5BPcmR
SBV9iVSdSxCpvmk1OBT1JN8GRKT6Z6J2RSL1TOpJitSTFKknKVJPUqSepEg9
yZFIPZN6km9OIlJ1FkqknkU9KbzFxtoX9SRF6kmORKpv4WXti3qStxCJ1LOo
JylST1KknuRIpL5LfMSmJ53d9CTfSczad9OTzm56kq9Esfbd9KSzm550dtOT
zm56kqYYIvWcpid5WmDtp+lJ5zQ96ZymJ53T9KRzmp50TtOTzml6kiKRqlM6
ItX3VbP22/Skc5ueZDix9tv0pHObnnRu05PObXrSuU1POrfpSec2PelE05NO
ND3pRNOTTjQ96UTTk/zJZ+3R9CS9uUSqTtKIVN9lztqj6Uknmp6kN4FIPdn0
pJNNTzrZ9KRXjGAkUlUrkeqb3Vl7Nj3pZNOTfLGUtVfTkxSJ1FNNTzrV9CSd
3xOpp5qe5KvOrL2annSq6Umnmp6kI5RIPdX0JP07IvU+TU+6T9OT7tP0JN/6
Hxyq6Un3aXqSL+ldDtX0JCGDSNWvR6Tep+lJdzQ9SVM5kaqFKZGq5SSRekfT
k/QBJVIViVRNv0Sqr5cUh2p60h1NT7qz6Ul+EAJrn01PurPpSXc2PUnTBpGq
Uxoi9c6mJ737NYhNT1IkUv08Bta+mp50V9OTfD2fta+mJ93V9CRFIvWupifd
1fSku5qe5JNh1r6annR305M0axKpikTq3U1PurvpSXc3PenupifpeCVS/XQK
1r6bnnR305N8psHaT9OT/Kw01n6annRP05P8WC7Wfpqe5CdPsfbT9KR7mp7k
hxyx9tP0JD/Wh7Xfpifd2/QkP0GGtd+mJ/lZHaz9Nj3p3qYn+fEcrP02PcnP
p2Dtt+lJ72GE2PQkP3SAtUfTk3zXPWuPpidZOWHt0fQk30rN2qPpSTeanuS7
dll7Nj3JChFrz6Yn3Wx6km+JZO3Z9CTfBMjas+lJN5ue5PvNWHs2Pck3XLH2
anrSfZftiESq76Jh7dX0JN9Gwtqr6Um+cYK1V9OTfG8Aa6+mJ8XT9CRr6Kjd
Ojhqt3iN2n0cFYdqepId38mhmp5kq/VwqKYnxdP0JAuUqN3mImq3QYja7eqh
9nfzHbHpSdbCJodqepK9qMOhmp5kEyg5VNOTLLugdksnrH02PcleBWufTU/y
ziZrn01Pitn0JF+0Zu2z6Um+TMvaV9OTYjU9yVcEWftqepIvibH21fSkWE1P
8jvC2lfTk3y9gbWvpifFanqSt7ZZ+256kndvWftuelLspid5o5C176YneWuM
te+mJ8VuepJ3YVj7bnqS9x1Y+2l6UpymJ/kUl7Wfpif5HI+1n6YnvWsCxKYn
eeHO2k/Tk7xyZe236Uleq7H22/QkL0dY+216UtymJ5l8rP02PckTLmu/TU+K
2/QkTyusPZqe5A8Sa4+mJ0U0PcnvGWuPpif5RbP2aHpSRNOTfDSz9mx6kiKR
KgwSqZFNT4pselJk05Mim54U2fSkyKYnKRKpkU1Pimx6kv8qa6+mJ+n3I1Kj
mp7kh3Kx9mp6UlTTk3TOSqRGNT0pqulJWhQQqe+VVEYiNZ+mJ/nZYKhdBxmR
mk/Tk+yWJodqepIikaq1CZGaT9OT9G4TqTmanuTLVKg9R9OTcjQ9KUfTk3I0
PSlH05PUOZGao+lJOuiI1BxNT/KT0lB7zqYn5Wx6kq8BsPbZ9CS9YCI1Z9OT
cjY9KWfTk3I2PUkkI1JzNj0pV9OTcjU9KVfTk8RTItULRta+mp6kjyCRmqvp
SbmanpSr6Um5mp6Uq+lJuZuepDUQkap1K5H6nuAhNj0pd9OT/Pg61r6bnpS7
6UnWn1n7bnqS1stEqiKRmqfpSQIMkZqn6UlePbP20/SkPE1PytP0pDxNT8rT
9CSt4onUvE1P0rxIpOZtepIf5sfab9OT8jY9yUsT1n6bnpS36Ul5m56Ut+lJ
eZuelNH0pIymJ2U0PSmj6UkZTU/KaHpSRtOTPO+z9mh6UkbTkzKanuRHG7L2
bHpSZtOTFInUzKYnZTY9SadWROqrxSA2PSmz6Ul+wiJrz6YnZTU9yYY+a6+m
J2U1PUlneERqVtOTFIlUtUqk2jlg7dX0pKymJ2n+JVLraXqSIpGqtSaRWk/T
k/SSiNR6mp7k500Gh2p6Ur1XORCJ1HqanlSj6Uk63yVSazQ9SeQmUms0PUmR
SNVbRKTWaHpSjaYn1Wh6Uo2mJ/kFovaaTU+q2fQkrWuIVD99k7XPpifVbHqS
1nxEas2mJykSqZqridR3t+6Lq+lJtZqe5IeAsvbV9KRaTU/yTSSsfTU9qVbT
k2o1PalW05O0rCNSFYlUb4Ww9t30pNpNT6rd9CTNEkRq7aYn1W56Uu2mJ9Vu
epJmKyLVj0Rl7afpSXWanuSPGGs/TU+q0/SkOk1PqtP0JC1yidQ6TU+q0/Qk
RSK1TtOTBDYytG7zkbxqZ8+3+Uh1m49Ut/lIfiIse77NR6rbfKS6zUeqaD5S
RfORKpqP9M4aiM1Hqmg+kh9My56j+UgVzUfyjU3sOZqPVNF8pMrmI1U2H0mn
GmRoZfOR/FNYezYfqbL5SJXNR9JimgytbD5SZfORqpqPpEiG6gSIDPVjell7
NR+pqvlI1nFYezUfSZEMrWo+UlXzkaroI/nlgqH6A30kRfpIivSRHMFQRfpI
+gN9pPRuZXEo+kg+/wNDFekjOYKhacAODDXoI/mMHQxVpI+kSB9JkT7Su/7n
UPSRfFYKhqafnVwcij6Sn0YJhqbvvWPtkz6SY7H2SR9JkT6Sz4YPa5/0kdIb
2ax90kdyLNY+6SNpgUgfSZE+kvd2Nmtf9JF8Uj5Y+6KP5JisfdFHUqSP5Ed1
bta+6CPpdJ8+kiJ9JMdi7Zs+krcKLmvf9JEU6SP5EaGTtW/6SI7F2jd9pPQW
DGs/9JG8RbFZ+6GPlH6uNms/9JEck7Uf+kiK9JE8aW7Wfugj5bsE/OKlj+RY
rP3SR1Kkj6RIH8kXYRdrv/SRFOkjORZrv/SRFOkjef/msPagj6RIH8nPbR2s
PegjOSZrD/pIivSRfBFrs/agj6RIHyn9sHPWHvSRDIFk7UkfSZE+kiJ9JEX6
SIr0kRyLtSd9JEX6SIr0kfwU283aiz6SIn0kP0jrYe1FH0mRPpIifSRvqm3W
XvSR0qcprL3oIzkWay/6SDke+kiK9JHyvXCOSB9JkT6SI5CqSB9JkT6SH/FL
pIpOROp46CNp9UgfSZE+kteWZKgvQy7+WypGilSMHElJ8YaUHIOKkXcrSckx
qRilH7HPJicVIz+0mJT0VRw2OakYKVIxUqRi5K0AUlKfXlJyLCpGjqSkViqk
5FhUjPwoZVJSqwBSciwqRunfrjgUFSM/noCUHIuKUfoLB1j7pmLkRziTkpr3
ScmxqRg5kpL6m6Tke4qOSMVIkYpR+nsPWPumYuRISvq+edZ+qBgpUjHyVySS
kuNQMfJONimpSEr6dIi1HypGilSM/HxrUlKlkpLjUjFSpGLkSEqOS8XI++uk
5LhUjDwdk5LjUjHKcakYOZKS41IxyhFUjBSpGHlfn5QcQcVIkYqRIyk5goqR
fQxScgQVI0UqRr/nHrL2pGLkywukpCIp6e/EYO1JxchPGScltUAmJUdSMVKk
YuRISr4/FZGKkS96kJL+ag7WXlSM/LBzUtKPdmDtRcVIkYqRIhUjRSpGvthC
So6iYpT+mahdfyIl50PFyI9gJyXFV1JSZwukpCZvUnI+VIwcScn5UDHyQoWU
nA8VIz/6nZT0JXnUPgcVI0dScg4qRopUjBSpGPlKFCmp80xScg4qRn4CPSmp
yBNPnUsRmnNSMUpf72Ttk4qRzzqJVB03RKq/toW1TypG1nCJVC3iiVSd0hGp
c1ExUqRilO9+KyORqpdMpPrbY1j7omLk5/ETqXNRMVKkYuRIpM5FxcjQI1J1
+kekqjki1XtbrH1TMXIkUuemYuSnJBCpc1MxUqRiZGOMSJ2HipEiFSNHInUe
KkaKVIz8ZQVE6jxUjHw9iEidh4qRI5E6DxUjXywlUuelYqRIxchfkkCkzkvF
yJFInZeK0e8htqz9UjHyRVoidV4qRjkvFaOcQcXIkUidQcXI1/qJ1BlUjBSp
GP0fQhCpGDkSqTOoGClSMVKkYuRvkCBSZ1IxUqRi5EikzqRi5O8YI1JnUjFK
fz5Ze1IxcqtE6kwqRo5E6iwqRr4zjUidRcXIV86J1FlUjNJf98Tai4qRIhWj
3y/P2ouKkSIVI2GOipEiFSNHInU9VIwUqRiZmETqeqgYKVIx8rfjEKnroWLk
SKSuh4qRHxxGpK5BxSj95Veo3RdqUPsaVIwcidQ1qBh5u5lIXYOKUb4XzxCp
GPmzS6T6O7hY+6RipEjFyF9yQqSuScVIkYqRv7ycSF2TipEjkbomFaPf9zqw
9kXFyF+uQqSuRcVIkYqR4+8T+79Ip6W5
       "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
        ValueDimensions -> 1}}, True, 12.1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"DOGE\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["TimeSeries",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAKMtzsGn46kHbFbehUJAxPz7CDxIN
/+pBYU7IqLWKMD/RjQRlPwbrQcKMhkqAZis/PT+GofcM60GVkvhvCHIiP2N7
gx+OE+tBwMrT5QAZIz8HjNmOsxrrQeqaL0vXuxs/g4K8514h60FEbjiC4lEi
P31N+DGZKOtB6Di4LHcCKT8xo6+9sS/rQQrTLBdiYiE/vt7zMlA260HU7DX2
UCcgP8nukJl9PetBGw8VBOMqID+s5LrpMETrQWQ/i6VIviI/SmVge8JK60HU
3UlbWRMyP2W6Xv7iUetBncdQq3EGMD9Z9elqiVjrQbdfPlkxXC0/ygTOyL5f
60FqZk4TLg8vP/aeLWjSZutBiewn3dGHMD/7Hhrxa23rQesRSg6vYC0/fXNf
a5R060EkD0QWaeItP9itMc9Ce+tBK6QSWcfVLD+wvFwkgILrQUZTLrOMoy0/
Q1YDu5uJ60HhDWlU4GQrP67VNjs9kOtBS2r0rF93MT+XKcOsbZfrQad65Wh0
n1Q/WWPcBySe60GJ1Y8TV/ppP9UncaS4pOtBbvfRqm0PXT/PwF4y3KvrQayc
XKVRGlc/oT/ZqYWy60HEAdtO7/ZQP/GSrBK+uetBOgjAWOWCYj+XjxRXfL/r
QaVjwzV9ZIA/eeHjSA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7wa+p7jD60GlY8M1fWSAP94011Bx
x+tBawfLqFSweT8+zQvWnM7rQXAEjRujxGY/d0vNRE7V60HwAR1bNslxP2pU
CvXd2+tBKpZz9BxwYz/bMaCW/OLrQWtXU38to2M/JfXCIaHp60GLkmUrAjx3
P+yMPp7U8OtBEpgm9QfEbj+MCkcEjvfrQWiAxcMf7WA/5hLLqyX+60EKh7c8
uNJgP77vp0RMBexBRW2QMkxJYD9ushHH+AvsQYsSkZB6Mmc/nEnUOjQT7EER
NpWQurdqP4RrEvBNGuxBeUv4q2lIaz9Fc92O7SDsQaXMG/x8+WU/hE8BHxwo
7EHlVwDtWkxjP5sRspjQLuxByPnYVMcEZj9tXt5TYzXsQRQmjGZl+2A/vH9j
AIU87EFAZDLOsPlkP+SGdZYsQ+xB6fNRRlwAWj+KYuAdY0rsQeL6iigccWQ/
6sjG5ndR7EGaRp/ISEBkPyMVOpkSWOxBRK008ooIaz/ZNQY9PF/sQWaAqPoC
j2g/aDxfyutl7EE2f4AeJLVlP3QXEUkqbexBaqySomDzaj+Ydw9XQnLsQaVj
wzV9ZIA/ybbNLw==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$280029#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6199008*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3619900800, 3833395200}, {0., 
                   0.008004167750572064}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAKMtzsGn46kHbFbehUJAxPz7CDxIN
/+pBYU7IqLWKMD/RjQRlPwbrQcKMhkqAZis/PT+GofcM60GVkvhvCHIiP2N7
gx+OE+tBwMrT5QAZIz8HjNmOsxrrQeqaL0vXuxs/g4K8514h60FEbjiC4lEi
P31N+DGZKOtB6Di4LHcCKT8xo6+9sS/rQQrTLBdiYiE/vt7zMlA260HU7DX2
UCcgP8nukJl9PetBGw8VBOMqID+s5LrpMETrQWQ/i6VIviI/SmVge8JK60HU
3UlbWRMyP2W6Xv7iUetBncdQq3EGMD9Z9elqiVjrQbdfPlkxXC0/ygTOyL5f
60FqZk4TLg8vP/aeLWjSZutBiewn3dGHMD/7Hhrxa23rQesRSg6vYC0/fXNf
a5R060EkD0QWaeItP9itMc9Ce+tBK6QSWcfVLD+wvFwkgILrQUZTLrOMoy0/
Q1YDu5uJ60HhDWlU4GQrP67VNjs9kOtBS2r0rF93MT+XKcOsbZfrQad65Wh0
n1Q/WWPcBySe60GJ1Y8TV/ppP9UncaS4pOtBbvfRqm0PXT/PwF4y3KvrQayc
XKVRGlc/oT/ZqYWy60HEAdtO7/ZQP/GSrBK+uetBOgjAWOWCYj+XjxRXfL/r
QaVjwzV9ZIA/eeHjSA==
                    "]], 
                    LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7wa+p7jD60GlY8M1fWSAP94011Bx
x+tBawfLqFSweT8+zQvWnM7rQXAEjRujxGY/d0vNRE7V60HwAR1bNslxP2pU
CvXd2+tBKpZz9BxwYz/bMaCW/OLrQWtXU38to2M/JfXCIaHp60GLkmUrAjx3
P+yMPp7U8OtBEpgm9QfEbj+MCkcEjvfrQWiAxcMf7WA/5hLLqyX+60EKh7c8
uNJgP77vp0RMBexBRW2QMkxJYD9ushHH+AvsQYsSkZB6Mmc/nEnUOjQT7EER
NpWQurdqP4RrEvBNGuxBeUv4q2lIaz9Fc92O7SDsQaXMG/x8+WU/hE8BHxwo
7EHlVwDtWkxjP5sRspjQLuxByPnYVMcEZj9tXt5TYzXsQRQmjGZl+2A/vH9j
AIU87EFAZDLOsPlkP+SGdZYsQ+xB6fNRRlwAWj+KYuAdY0rsQeL6iigccWQ/
6sjG5ndR7EGaRp/ISEBkPyMVOpkSWOxBRK008ooIaz/ZNQY9PF/sQWaAqPoC
j2g/aDxfyutl7EE2f4AeJLVlP3QXEUkqbexBaqySomDzaj+Ydw9XQnLsQaVj
wzV9ZIA/ybbNLw==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$280029#1"]& ]}}, {}}, {
                DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                 AxesOrigin -> {3.6199008*^9, 0}, 
                 FrameTicks -> {{{}, {}}, {{}, {}}}, 
                 GridLines -> {None, None}, DisplayFunction -> Identity, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                 All, DisplayFunction -> Identity, AspectRatio -> 1, 
                 Axes -> {False, False}, AxesLabel -> {None, None}, 
                 AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity,
                  Frame -> {{True, True}, {True, True}}, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[
                   Opacity[0.5], 
                   Thickness[Tiny], 
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                 FrameTicks -> {{None, None}, {None, None}}, 
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                   GrayLevel[0.5, 0.4]], ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                 Method -> {
                  "DefaultBoundaryStyle" -> Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultMeshStyle" -> AbsolutePointSize[6], 
                   "ScalingFunctions" -> None, 
                   "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                 PlotRange -> {{3619900800, 3833395200}, {0., 
                   0.008004167750572064}}, PlotRangeClipping -> True, 
                 PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
               GridBox[{{
                  TagBox[
                   TemplateBox[{
                    RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                    RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"23 Jun 2021\"", "SummaryItem"]}]}, 
                    "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2468", "SummaryItem"]}], "\[SpanFromLeft]"}, {
                  RowBox[{
                    TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\"Output dimension: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["None", "SummaryItem"]}], 
                  RowBox[{
                    TagBox[
                    "\"Minimum increment: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
                  TagBox["\"\"", "SummaryItem"], 
                  RowBox[{
                    TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     TemporalData[TimeSeries, {CompressedData["
1:eJyFXAdQFM/TRcxZRBAVlYwISBLMPgMGVJSMSrrjAtyRM4hkFXPAgAlFxYCA
gqCiYk6YlSAYEBEDmHMO3x23vVd1v/rXZ5U1NbuzszOzPa/f655D2zfESaCs
pKTUSvI/p6OSUmHk2NHTV1tg0SXV8VvTrdDp/tP3doaW+JI6K+KjjhWQd33d
3XpL9n54SOJ527SheD0zZlvsTRv8TBSXRa4djuQUrXGLVo5h62fWqg/JKxyB
6IBNXS5/GgGsiP/Uz2AkbPe+qJvtMBxvPQpUMxutkZq/183HyxpcS1fzwblW
cFH27TnkqXw8m3pE2FVHW+H229W+ybZWaBz+XnzMygqxG7R0s89Z4NuqhU09
hluib+9uC/itrBC95GVBSoElW9L8/OdIW5rjd+6HCntfc8Tvctt4qsYc1dfn
dpr6ywyrT9lVZvsPwf3nlz4v0B+CFW8OZ3+7ZI7Zmjd/i7uZo9kn42qvCHNM
rgj+bDHQHN0+OzxY5Ci/Tu0HfqkxNik1Q/EkaUMz/A6atbr27RDodbdVFz0x
hYHmvGXp30zwSMmq/uwsE2Q+e2X5e68x1tcePlmXYYKgYWeH2W83xfTC4Vt/
VJuw10Ntv+UHlJiw1x9++i3aNdIUPzl9+h2/Z8bOa2WRqneqsxkyriVNPZ1g
ypZHfcbOsfA0xSCjQqU9XUxwLDDy5qwwE5TF7Z8YvMgYDV1FLo/5xux9mpf2
2MLG0+PM2ffQOlGd1ofqNH8qRf1d7XtEmaHm3uokYQ8zdn0DBi87N2SpfL3/
zVvY9lvrIez6KI5r1tWcRTZK8rKx7/Yrf+MGM3ZmhBdDO5eMyhkElUbrgy/z
DWAlPjVtbLQhEjJGBepYGaJT2dpZq4KM2OfNHJw4rWYY4Zlh9dj+q+Tlti4r
M9xfDILbh8nP12AQW4+XDm+AvLxYkKrRdN+QfU+XK1cuFKQOQnafC+2jfxvC
wmtx9UDuIMbO9TFyDWf/psN6uF6lFzuxrz6uXH6rrN/WgB0v1T06F9++KTLA
3nFCvzuj9PHBv3Hx4e96WHCs7lpCuB6EM8729avUZtZtACp+XarZNkcHSyrt
jhzfqoNlj5OM7xVps9epPODX4bJJvA4+RfX5W9lVD7n2Wx++c5D3q/o+QK/j
OX22lO1L+bhlOKDD7ENd9n2y/afD3h+zbcPA0qu6bDvF9tROtl912XEpjlNT
z/ZHqrp8Xnws2z31lLx/akf9yfBKl21H9f/1PupXcf0Un6fnqC7DJXm/1F6x
X8V5UXtaL+pX8XnFfqkdXa/u8GfGyWDt/5QDLeYF7zDWxs+tJ7zM7LUxvlS5
05fP2gzuaf3nvuL1QymRRaLdWgyOaaFGzercgzR5ndpTSdfpORlOaDF4OhCT
N1wvKssbwJYyXOvP4KC8DHc01Vl6pR+zL/sx+74fg4+aDB7JS2pPZavFJ+ap
9enPljJ81GT7oX5NJ2q+emLTF213GgqcJvZj/FIfBj/6sO2oLsOLPuh+99+I
65m9MfvvfI9CF3kp83/qbF2GCxpsSc/JcECDHR/Ni+Yvw0f5etG+luHsAPa+
zI9psyXZEeEB2QvZH+EM4ZXL0x5hEYONmPEasvhys2HuG66ZHmt/hDe0zzQ6
1Xab/FqXxQ3CA7pOOEH9+egPPNF5nR7bD41j+ILB1vHZ+iweJm8Paxg31YD5
DkbY8s+9/4gKo//gvmKd/CDhLc2H8LbDQa/7obMHs89t+qi9r+/Jwaxfc6q5
/8tFbTCL/3Gxt1KedfhvSf6C1u189oxdVy4OYkvyF6cWPS5dvmUw+17y5zJ7
G8z2Q+MjfJfZh9w/5ViZfzxkYMDYlQG7PvT9aJ7k56ikdaBx0XV6jvwR1S8f
L13R7r0BbGI+n/ZcJvc/Ow1+zl+nYvgff0QlfXdFv+Sl0TzpTeJ//RS1Jz+T
N7fCsZtQl+F5uqwdE/4o4iLhF/kBRRwi3KM64Rr1p4hXhFOEa4RTMt6khYkX
hyepdpLjI9WpP6r/L9ykfqk/qhMu0nXF9lRS/4rP/QdXW/invE73ZXzrv/ep
TvdlfFSOy3SdShlv/W9JOER1ak/Xqfz/+lN8P9UJ9wgXCf+opHa0PoRXhFNk
L3SdeAfZI/lt8uPUjuyNcJT4E62bon0olnSf7IHskvpRtCMqyZ7pvmKd7JD6
U3yvov9VtE8qFdtTfzRfRR5H+1ORD9E60X0qaX9TSX6CnlP0S4q8kErF/U91
xX7pe5Pforoi3yN7oO9A/REuEf6SP/pfuEx4SfZD4yH/R+8nfCO8JL9IdcJb
8jsy/mLM4Pow2MzZNWDnnTFMOxtmnENZ3Uq6XDYfC8aOLPDCydP1q5cFHL8Y
Z3W/ZYm2Z2Lbdf1jxazXUFYH033S9aSvSTfPavpi+OGYFU7lWMyd4iqvUzt6
jvQ2laTPO9w4EG/cU66/t/TPPfVpmSXDf+XtswbXW/XcYQG37hvTZ/wwR/Yw
tVzzI+aMHcv1Oelr0uekM0lXk54lvUh6kvQx6UrbJRtGb9tgxpakQxX7O+zU
4WnPKUPYkvQ18Q7ql3gEfT/S0VS3PxmsovFKrqOpTnq/9foP76yGmLDzleGg
XA/TvCgOQPNTfD/1R+8l3iHjt//lPaSv6X3/S4fTeyluIOOt8vFQSeOkcuou
ZcMHZ+Ql9Uf3Kf6h2A+VND5qR++n+VOdvguNi/qn9aG6tnK3HdNuDGHjL4rf
l95H71d8r+J4qV/FeIri/GjeZGdkX4p2pvgd6D49RyWNn+IoFH+ifS/Ddwtc
vFZ5bOc6cxYfaN/KeNlQNm73UGVmZ+/P1ng0YEHy/I7WDJ+zZvinDY4tvRjS
ydgaj42Pf9k8YCjjLyzYfXymyO+WQGzJ4Lk8zkZxQsINGR5aMThpxeCkHJdk
/tcSJtyg5Vnv5fhE/ZoF72pV1tbyP7gn81sWOHcqy3ZBkhz/urzoK/QfLcdF
mf+U1+m+jD/I43qEL4rrTvEvwiFqrxjPUvy+FH+j70r2SnEn2o+EAxTfI7ug
cSuOh/olu6Y6lYp4Rn7DanH319/N5CXtd2pH8TzaD7R/FfcJ1cne6TrtB+qX
xkf9Ku5DxTrhMsULFfcRjUcRL+i9VKf3k/9Q3DdUp3HRfOh9irhL/SvikuJ6
0HwUcZT2N7Wn+2QP/wtvFOdP9xXxlcZL/RFOUkk6mepkZ4rtqR2V5FfIr1Gd
nqOS8FbRP9Fz1B/hNLUje6V1UVxfmh/1979wn/qjdaD50XOK76d2dP1/tafx
032q075V9L90n0ra1+SXFfc7Xae64rwU+6V2iutK41PMD9D60bqR3f8vv0/t
Fe2SSsXrtD/oOeqfvqOiXVCp6G8jvXmZ+x4NZvkK8SzFeP9gm+dRF7Tl60Xt
ie9Qe7pO7alOeQLiQ4r8iJ5XvE/vp/v0PuJzVKeSvrPi+BT7pbgU1f/X/Gke
VKf42P83T8V+KQ5FcSq6TutP16lO46Y6rYNiHO5/zZPq9L3J75C/oTwR4SbZ
F9mvon8gvqOYXyI/STyHeAHxasoj0nXiIbJ4lTXLg7hn/yS3bzcOoyK6d6z/
NYrZf6MZux3N7KMxTNxwJHtfunsGfB/OrO9IJh44gvkuo+DT/mYfx/ujGHsZ
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
       "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWxIXSvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
H8mzdvZ8m49Ut/lIdZuP5CfCsufbfKS6zUeq23ykiuYjVTQfqaL5SO9ZA7H5
SBXNR/KDadlzNB+povlIvrGJPUfzkSqaj1TZfKTK5iNpqUGGVjYfyX8La8/m
I1U2H6my+UiaTJOhlc1Hqmw+0p+fWUYkQ7UAIkP9mF7WXs1Hqmo+knUc1l7N
R1IkQ6uaj/Tn156/SB/JLxcM1T/QR1Kkj6RIH8kRDFWkj6R/oI+U3q0sDkUf
yes/MFSRPpIjGJoG7MBQgz6SV+xgqCJ9JEX6SIr0kfLPb18jgqFelYKh6Wcn
F4eij+SnUYKh6XvvWPukj+RYrH3SR8o/P8H9RfpIivSR0hvZrH3SR3Is1j7p
I2mCSB9JkT6S93Y2a1/0kbwoH6x90UdyTNa+6CMp0kfyozo3a1/0kbTcp4+k
SB8p//wg+RfpI3mr4LL2TR9JkT6SHxE6Wfumj+RYrH3TR0pvwbD2Qx/JWxSb
tR/6SOnnarP2Qx/JMVn7oY+kSB/JJ83N2g99pPzz8+x/46WP5Fis/dJHUqSP
pEgfyRdhF2u/9JEU6SM5Fmu/9JEU6SN5/+aw9qCPpEgfyc9tHaw96CM5JmsP
+kiK9JHyz4/Vf5E+kiJ9pPTDzll70EcyBJK1J30kRfpIivSRFOkjKdJHcizW
nvSRFOkjKdJH8lNsN2sv+kiK9JH8IK2HtRd9JEX6SIr0kbyptll70UdKL1NY
e9FHcizWXvSRcjz0kRTpI+V74RyRPpIifSRHIFWRPpIifSQ/4pdIFZ2I1PHQ
R9LskT6SIn0kzy3JUF+GXPyzVIwUqRg5kpLiDSk5BhUj71aSkmNSMUo/Yp9N
TipGfmgxKemrOGxyUjFSpGKkSMXIWwGkpL69pORYVIwcSUnNVEjJsagY+VHK
pKRmAaTkWFSM0u+uOBQVIz+egJQci4pR+gcHWPumYuRHOJOSOu+TkmNTMXIk
JfVfkpLvEh2RipEiFaP07x6w9k3FyJGU9H3zrP1QMVKkYuSfSCQlx6Fi5J1s
UlKRlPRyiLUfKkaKVIz8fGtSUqWSkuNSMVKkYuRISo5Lxcj766TkuFSMfDom
JcelYpTjUjFyJCXHpWKUI6gYKVIx8r4+KTmCipEiFSNHUnIEFSP7GKTkCCpG
ilSMfs89ZO1JxciXF0hJRVLSv4nB2pOKkZ8yTkpqgkxKjqRipEjFyJGUfP9W
RCpGvuhBSvqnOVh7UTHyw85JST/agbUXFSNFKkaKVIwUqRj5YgspOYqKUfrv
RO36J1JyPlSM/Ah2UlJ8JSW1WiAldfImJedDxciRlJwPFSNPVEjJ+VAx8qPf
SUlfkkftc1AxciQl56BipEjFSJGKka9EkZJaZ5KSc1Ax8hPoSUlFLjy1liI0
56RilL7eydonFSOvOolUHTdEqn+2hbVPKkbWcIlUTeKJVC3piNS5qBgpUjHK
d7+VkUjVSyZS/esxrH1RMfLz+InUuagYKVIxciRS56JiZOgRqXNTMVKkYvR7
FDhr31SMHInUuakY+SkJROrcVIwUqRjZGCNS56FipEjFyJFInYeKkSIVI/9Y
AZE6DxUjXw8iUuehYuRIpM5DxcgXS4nUeakYKVIx8o8kEKnzUjFyJFLnpWL0
e4gta79UjHyRlkidl4pRzkvFKGdQMXIkUmdQMfK1fiJ1BhUjRSpGfxCCSMXI
kUidQcVIkYqRIhUj/4IEkTqTipEiFSNHInUmFSP/xhiROpOKUfr7ydqTipFb
JVJnUjFyJFJnUTHynWlE6iwqRr5yTqTOomKU/rkn1l5UjBSpGP3ePGsvKkaK
VIyEOSpGilSMHInU9VAxUqRiZGISqeuhYqRIxci/jkOkroeKkSORuh4qRn5w
GJG6BhWj9I9foXZfqEHta1AxciRS16Bi5O1mInUNKkb5XjxDpGLk7y6R6t/g
Yu2TipEiFSP/yAmRuiYVI0UqRv7xciJ1TSpGjkTqmlSMfr/rwNoXFSP/uAqR
uhYVI0UqRo6/b+x/At/KmSY=
       "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
       ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
        ValueDimensions -> 1}}, True, 12.1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.833438058278713*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"45fafab7-3d49-4d9c-bd31-07503f9701e3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.833438062938698*^9, 3.8334380629469786`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"d16f8e07-4eb4-4a2c-9556-84e2a6ddc535"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
qVeGPhWYr36ALbMUr2rcwB3nkv5vXwX24xul/t+rQHu9kvqXraLH2Hd7sHvz
dal/1Ssyfq5I/e9VkfWtA+qpLbEi88dw6f/3VKR9DRj3/qm46aWj8cM+Sv3P
XIn9zn2wKbgSx/tK/99dcePUMob546X/n1aJ56lgsHtnJZ5Xikn9v1WJ/jdS
6n+GyuxHG0n9r1yZ83UC27tUZr03SP2PV3wq7G7a6MxYr2ZHZdojJ1h/ozLP
/23A5h+V2Q/0EP0VqrD+RoGdHavwvC79jXdSFb7/q+jfWoX9w0XRf03x7ENX
0tauFP1fq1DfdtFftirjPUn0h1dlP3Nd9MdV5fmU/c+mquzfBov+K1XZn0wQ
/Z8UF5p/IO19uNg/KJj7tUjs3y6Y59uZYv/xwfSvp1L/1wfzfLxF+p9LinFf
OFX6nw/BvL+Q85Y3sJrHWL5gkNvVHaxrU43rrSD+P7Ya9QeK/6+rxnrWD+cj
x3nFi/3mmx91kfz3rhrrteRrbUk94zm/5P+WesbrZcl/oxRP7tk8PjpR8t9q
Pf03HPO7zig+GvzNPSlV6r9XccLmo9blIVL/ildnPBWV/NesOu8LXkn+G6G4
9uQY54fDkv9WVGe8r5D8d6o6z88nJf+9ru6rt2BTkRrMZ6z/xhqs9wOl/g+t
wXx7QfQvrcH1mEW/U3HKijahD76I/pc1fOdDqX8FazL/Sn6yN67JfHtG6l90
TcbjVal/Sb7nM0n+O16T/jFI6t8zxd9vlwnt5xL9+WpxPTdEf4NarN+yXu9A
xa5VgfEvNoh+Wy2ez6S/MB2tRXsGSv5/XIv3e29Ff57azN9PRX89xZfWrjQf
7gfW9q/N569L/Ztfm/VV3m85VJv9tAnz2x/U5noHiP6cdbh/bUR/nTqsJ0Xl
/Geuw/PYY9E/R/GYvNnTvy6V/m9/HeqZKvX/rzqsD3ul/vvV5X6z/tesy35G
znOm3or9f9/mbH1e9M9U/O/V61ZjLun/9yqe7/1Xl/kU2H23LutNpPT/Wetx
v1tL/6+vR3+bLPWvp+IRH0cn+68T+0+vx/P9A6l/u+vR37ZL/fuzHt+vl/4/
U33W/3iwuariQ287xDeS84KtW332R8Ml/qcqrh7Zx9ropcR/Sn2ex3pK/P9R
n/cbMRL/mhCP8eOFDtboWxL/lRQnd70W2HOT1L/OIexfdJL/poSwPraU/Lc9
hP3MKsl/10OYf45K/vuuGN8rbkj+K9+A9o9AfnZ1UIz77Oxy/zVJ8YyUTLrd
a+X+a0sD6rHivsvsUozvJRswbvvSgP1oV7n/K9OQ9T0J94ne9g2ZL+rge4Bu
QkPaT76nmDY29J2PcR9s/a0h8+8guf/82JDnZbnfd5dqxPV2kfvPsEbMp6fB
hphGjP/ccv9tV4zvR6OwXvvFRryvCJL7z38Ue0a3MeTKJff/gY3Z316BHn3r
xtSbUfSPacz8v1Pu/9Y25n3r36L/XGPWP7mf9P6teHyr6oZ+/cA6/1DaVyf3
/y1CWT9HyP2nRfHxWs2tSa3k/nNVKO/r9HL/edrHGrn/fBvK+6UEuf8sZlDn
kXnxyX/nkPvfpgbuv1m+fww38HzQVe7/lxt4Xq0l99+nDOz/l8r99ysD70u3
yvePwkb672j5/mEwcj02sHOIkflmn9h/iWJ8PwuX+/80I+tbmNz/vzBS72Gx
f4Em9I/P8A9HIx8Xw/cG96Am9JePGNcu9o2H4vug4VgT1vdq+J5nedqE9x3+
YLu2qcfYJkcV64tTYFdIU9/912ToH9iU+zcC8+kXKr6Vnt8aOhVsPtKU9/+f
wbZHTdkvPQE7czdjPdyB+b11mzGfDgHr+jXj863BpnnN2N9tAVsPNuP3lZGY
z+Fuxv4sTr5/5mhOfyoo3z9rN+d9x3CwIbI588EAsGV2c+bHvKI/tTm/T2zH
uOt+c56/XoA1fi0YL2XxvL5GC+5vEbA5ogX7Ibd8/5mhGN+/8mHc6WjBfusn
xr13WjCfXAPrsrT0GBuuv5V82g49pmotOd4JbO3RkvXsM+ZzJLTkfv8Eu3e1
5P1UVjyvvd2S58UGGDdkbMX8mEXsX6UV89NjvN/etRXj5Yz4v7UV/a8e/E+T
0or98WPx/5uKq1Q5HOiogXHzz1bc/1Py/adia66/KeZ3dlKM77Wb5Pvn5Nbs
d57J959tramnrvj/763Z31TD89ZvrdkPTpTvn+Xa0P7TJP+Z2rCf3gPWTlSM
76/Mf5vb8PvAIfn+ebUN/X+TfP/6rBjfG3PJ96/Sbbk/Jon/9m3pT5J/9bFt
Gb+B8v1rQ1vmux54v+1yW+5XBfn+929b5rdZ8v1LF0Z/my3624bR/7vJ969x
YfRXq3z/Sg7j/t6R/H/BN35Uvn+9D2O/m1n0B7RjvEyW77+t2tEeY+T7/+h2
jMeMYPuadsxn4+X7/9l2XE8W8f+/2/H+YKB8/y/RnufDMPn+2bw997sj/Ms2
sj39eZj4/8r2/H0vif9f29Of5Xup7k17nhcWgk1Fw5l/Z4GtTcJZnzKK/w8L
5/nTT/x/WTjvi4qCtSfDuX55n8ETzvdXF/8vZOJ5Kl78P9TEfNNT4n+wifV6
D/ZDs8TE71PZwfoTJp6XJ8rfPzw3MV8+kb9/yN+B/pgOdjbsQHu8Fv+P6sB6
k1/0L+rAeO0l+n/pwPOk9APWJ77xB5L/83Zk/skm+b9+R+5fbsl/AzoyH2kl
/y3oyPhvLfnvcEfaZ4XY/2FH9gdbxf65OjE+7on+up1YH26I/r6deD4vJfaf
24n9gE7y34FOtE9Wif/0TqznotebvTP3M1D01+rMfmqn6O/Tmef3BLH/LMWT
zOfijX5gx77O7OdlP933OrP+5RT92bow38r8hupdaP92or9XF8ZPe7F/Yhfq
7yb239OF9yNW8f87Xdgfxoj/Z+7K+B0q+oO7Mr80F/3duzJ/1hH907rSn3qI
/p1dWX8Gif5bXWnfJNGfoZvHOD25nvXERNFfuRu/n04X/V26sT++K/aP7+b7
/iv6d3Rjvjgo+m90Yz26IPp/KM4zuLO7TD2pfxW6sx4vk/rfsTv748KoJ5rJ
3Xl+uCv1b2t3rqeM1P9r3dlfb5P6/7U7z/d/SP0v28PnL+gnvOE92C9dlPof
18Pnr1L/NvVg/IyS+nelB78vZ5H6/0nxf+vSNJb6H9ST+ULm07bryfsmWZ9h
fE/O55H4X9+T9UTqp/1ST95vHcHzrg89aT/Ro9H1YrwI69v0ov3Oif6xivH3
TsGif10vztdW9J/vRf8dBva+68Xva9K/6EpGsF8UNrWMoN6Von9UBP2vn+hf
HcF+MUL0n4ngeWuw1H9vBPvtoZL/ivemPaT/sjTrzfyRKvpH9GZ9Gyf2X9Gb
/i/9oObX3ozHdLH/697092Kiv0gf+lNX0W/sQ3svh72dQ/twf2xW6F+quEv4
08D7o8A6Zx/ml91g08s+1L8abC0YqfJX3ly6iHNgR2PFyT3y289eBbujI2nf
C1OhPymSep+ADcd9/BFseaY4c4lbaW3DpkF/PjPnywx2NTDze1hVsCZK8ayj
eQ05PuD3epviebfLW0/lxLj5qJnzfwDbHisOK1bP3jxrIvTn6av263CIJmOm
GdBfT3G9GRp37DCM6/r35d/LpIJN8xVfSryYFvNuJvQf6sv5BoEdD/ryfevB
7pz92I//BdbWUXy617P0K9nBBrPivfcbGerenA79c/rxPGIX/fv7cb74BOj/
6z/O9yBywEU8r8nen/XoPFhfsz/ryQ48b+7dn/c1cRi3zexPvfXAzr2KV1Sr
5gz4iee9dxUvfPwucF8O0Z91gMoveZsY+gSJfv0Axud3sLWn4iJrTqaHL8V8
jukDaL/eGHfvHsDz5weMa/8cwPirhHFDpoE8v2YW/VUHsn+7AbZ3G8j+qBvY
NVVxtMsV+qCN6N85kPvfSPT/oThk8aX46NNgsyaK+XqM6K+k2DMyuzPZJvo7
R9F/joK9UxSnOIq5g7aAddujeB5tIPqvR7Gf9xP936MYH+JPjvKDGJ+/4ffu
DoPYT4h9tJMU/366gfN9Z7BhyyD2y5NEv0vxu5WvklvuEP1fBtH/LaK/TDT1
9hH94dH0j9Gif0I0fx8r+jdG0x9miv7fFBey/RtqlnHnx2i+P1HsX2qw8vfS
wZqq7+B/ujDFeaIKmA+XQHyZYgbzPnYf2GofTPvnx/OOi4N5HvuEcfc/ivtu
eR1Zvw/GtYFDeF+SCDa0HsL+MRZsGTOE9pPn7WsV37p37efvVrDrnOLY5t60
D9FgzbshjNcIsN5/qMf47XEFw37JH+YWQ9nvX8d6bJah7A+OgJ2rhrJeSr7w
nla8/+m5yKMvMK57q/julxehc9+J/mLD6C/fRX9TxZrvJ+KTJB85hg9jfqgE
di9XPK5+WV3WrqL/1DDm2wai/5XislkKO8eWEv2FhzO/5hH9BsXty2Yy1C4p
+ocM5/uu4v2apcMZb28l/6Up3nOluu6uF2x+MZzvz4Xf2wqMoD99Ff2NFGsy
Ga3DHoK9g0Zwvm+if/EI5oO9+L3p2Aiev7PAX6xPR9A//hH92pH83lEA4+6Q
kTxf1QJrByo+P+Fn4MzFYMNCxTddWc2PYsCWIyM5/ySw/dFI5l/J367cFo9x
4Oks9r8zYFxTz8J8mR2s72ehPxSS/DdP8djyt+MbfRb9By30h49gp1vxqXB/
Q/pbsX+OUeq80fLMz+958Htd7VGML5nfFDmK+Sqj6J+tuOGmorrq20V/6ij2
dxvE/vdHsX/4Q+zvN5r90U2xfw3Ff74JsK8+K/aPGM340Yj+GaN5n/+36HeM
Zjw8Ef+/O5r++Vr8P8sY5sfcor/aGNbzamBbjzHMb0XAzoQxPJ+VkvjfpXiR
93ja+nyi//YY+mMZ0Z9xLPuRCqK/ylj2763Ajq5j+b7uYn/rWOb/FmL/lLHM
f93E/jfH0p/9JP/9VFw7rrZh9gPRX3Gcxxi5KsjZ+qnUv07j6M+ZJP9NGcf1
fBD7b1Mc3OB0aK7ckv9+H8f9+Sz6v41jPXkr+svFsJ/YL/pNMYyfg6J/Ygzr
xVnRvzmG/jwH81uvxvD7wSypf59juF8jJP+XHs98NE/yf/vxzHc1pP7Fjuf9
xDSwZcN4xvt8sP3yeJ7POqE/cf07nvXmDcY1pWIZz8/A+rax9J8reN48Lpb2
LId+w5Ycy+8JidL/XIilv3wGe9/7fv9V6n/ABNaDhpjP1GoC91eet46ewHgK
xrhjzQTW71Vg99kJrFcRYO3fE2jP/mBDiTjuhx/Y0jyO/ZJX9I+Mo31l3LUy
jv4j69GcjmO/a4Q+/Zs4xmt5sLnoRNp7kuhvMpH5Qtg5bCL3+7b0f8smsp8q
hnHdyYnc3ziwyTOR+aiZ9H+FJrH+BUn/FzqJ+aCq9H+DFa9u8CUyz1fRv2QS
67Nb9J+YRPv/EP3PJ9He38D2/JOZL9thPlfDyZx/C1gzaDL76/BZ0L9oMvNd
MbD5F8Vzz95J/xwMtj2ZTPsfEP15p3iM++58S7v4AOytP4XrzYDndQOmsJ8p
DDYtmEL/Lwe2Hp7C/rI22PFwCvuj3GB3rnjWDzNYWzee/cYAsKFvPJ8fCrbM
jWe8mMD2A/E8n80Eu9Lj6c8HwZocVurdL/prKV4/8H7owTOiv4+V/W622dA/
y0r/yj8H+vdZWY8zz4X+e1bWg6vzoD/bVOanwmBT9ams7xnA1l5TGT8RYEfi
VPpjxfnQv2cq++f4BdB/ZyrtMRRsyDyN58PsYEvwNNa3kmB792m0V42F0D9t
GuvHG7Bm1zSev8Jt0H9rGvubHIuhP0MC+5UUPG+rnMB6Ux3rdXZJYHwMAHvj
FZ8dXsu6fILo35HA/FdH9N9IYLz2Fv0/Eugv7cX+FaazXy6H/XZ3nM79TANr
J09nf5EENmydznq5G2y5Np354hvY/nU64yMS73OVTeT+7Ie9NKZE7ndRjOvj
EhnPnzBu3pTI+LyCcduVRL7viej/lOjrz0V/0AzW9yf4va7dDP59UxXRP17x
i/6NdY6don/9DNrjhNj/0gz2Q5fB7g8zWB9/AWt1M7lfv4INbWayP+4k9h87
k/nzudh/3Uz+/ck6sf95xT+879M3FoG9Ne9n0j/aiv1LzqI/5AabW87ieD2w
bdQszrcU7Fw9i/loDdh7Zhb7gQJ4n847i+fNJ1iPqfhsztcf49ZmsxnP9cGO
EbPZX3zA8+4Vs/m+ARjX/jqb54eJYMNrxbuPPY4/Jeu1FJnjMZ6onllzqzvY
bpxD/5wAdg1VfCzoU3pcpOhfNof+ni76nYovzsppqDl8EfS/nMP5x4FtBed6
jC1eFTA8CEF8OBvPpb26gr3Rc7l/6Xhel6S4zvh/0i7XwrjpuO/3I8HWZ//P
jnzz6A/Fk6C/wTzG3zywNmoezy8esME2j/u5Bmw5Oo/6LoPtj+cxPz0Cu/LM
9xibXPn6s0IAWFN/Pt/3CevV95/P+RdJ/M+fz/WNFv2H5nO+SNH/QHGz+9l0
iYUwnzfnAu53KFhXZwHnN4NNZsW1op8nW2aArXMUd2xawtpooejfv4D20ON9
7r8WsP8aIfkv+0KurwbsZai5kM/Hiv17L6S+afi9fabiy8uLmBcOEPvvXUj7
hIj97y1k/xaGfKvPauPfU0XhfWa9jfeltcG2njben3cT/59u4/5HiP/vtnG/
QsG6P230j+xgU6ZFXF8a2Fp1EffnIdjRbRH3r57on7qI+yP+pN3pe/4A2PCH
4qMFXqUFJIEtmsV8Xxz2015psS/ewK7Oi+mPYj9N/GL6i+y/fvti2nOe2P/6
YvrfDbDtu+/5k2L/8kl8f3Px/w5J1NcYrJuUxP3qKP6/JYnxNFH835XEfLRV
7P8lifrfgN1llnC+F2Bt+BL6Xy3x/wlLGK9Fxf83LmH8Nxb//83H90T/xyXc
j1ni/0FL6U9nwPqwpb56vgT6Y5bSv5aBbXYfLwI7Ly7l+raCvf8spb/lXQr9
gcuYv+osg/7Wy5gvU8HWMcvoj62WQ//aZdSfdQX0n1tGe7UDa98to94UsMF/
OfW9A1taLOf7Xq+Cfstyxtvw1dC/ajnt+wqsObOc63m4BvrfLud+ePF7c7EV
tE9NjNua+rgp2Dl8Bf2tIubzLl/B9RYD606toL5jeN70agX3f9pa6C+8kuvP
kwz9hpXy/nGt7dA/ZCXne4xx7VIff8G4Ic33e90G6H+h+EH5PPaWRTZCf4FV
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
85e//Wqolj4roLfiybaBJx/WP2P4H045n6M=
         "]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQPW3C/kbtw68dayekHnxkedQBKNTgBuSLz2dKUNt7
GMTfUADkb7r1Z3/PNzD/wSwg/0Tlf3nXlwdBfIGjQD6QZkiwB/Md3gP5is//
1pe8BvMLJI+8dvRTZXZo1DoA4i9wBvJd7rIruGrvBvEv5B6B6Gfw2gfiM8wA
8nXtWA/4HN0L4hscAvLvSzA1nFYB6094A+XXCoDNnyB2FGL+52tg+QMORyHu
/3FwP4j/IQvI32fIwuCZD1avMBXIf5nwd776abD6gP1A/vJJjAsCug+B/f8S
ap7xbYj/hY9Bzf9z2GHRls+yRscQ4QUAWpuFBQ==
         "]], 
        LineBox[{{3.727852128333395*^9, 10867.771526999999`}, {3.7279008*^9, 
         10551.799805}, {3.727941334456987*^9, 10867.771526999999`}}], 
        LineBox[{{3.7281385155329294`*^9, 10867.771526999999`}, {3.72816*^9, 
         10690.400391}, {3.7282464*^9, 10005.}, {3.7283328*^9, 
         10301.099609}, {3.7284192*^9, 9813.070313}, {3.7285056*^9, 
         9664.730469}, {3.728592*^9, 10366.700195}, {3.7286784*^9, 
         10725.599609}, {3.7287648*^9, 10397.900391}, {3.7288381988335733`*^9,
          10867.771526999999`}}], 
        LineBox[CompressedData["
1:eJxVmWd8k+UaxkOBLjpSOlBZYQgIgpEiYi00BRfgwSAgFIEGK8i0AUE5CDas
sgSCoj0Ix4aDHEBWLNNSIGWP0qbQSVe6R0Kb7tJ5nve+7n44fvH3537Wda/n
ydsBX4R/ushBJpPldJHJpP9HleaGOT6wBm/UL4oveOeOSvyTvIfgaa92VdW6
E6veEnz9zW6yB9/eklgbyvZNITclNuwU3CvaQXM3kNh8XrBM+m96vMSyXMHH
f+piUF8ku9L5oTU4ZGV76L5msmtGC4551npjRT2xfp7gck1bdOkQk8SmSMGR
p7oqvh5LbDfy+NcnEyuyHuI8+bbrEqu7P8J50z3JrnvjEewzsoiNIY+wXtwS
2s+yRfD6ma15R7XE8rNsD3QjVmU8wnmTZhNrHRLAnpW0nuH1BMwvjCI2f5aA
/c47E8s2Cd5f2x7kepDOpzwlOG5gU976njdIf6rgp/HNQefbrpL+DsHv5Tgp
tlXEkv7XHsMf28eT3T7jMeYHxJFd8YPgkRO6mxJOkV19QrDrRy39+yiukf4n
j9kfd2i8sfUx4rXuELFlSCLOP932N+mfnojxvTrIrvo+kc8TTutrjyVi/9jV
ZDckCf73FEfdzRhi84vO9cbReNngJOSDKhn6pwkOd+tiqk8n1qwTHHbxRcT4
0eQP/X+S4P+97yH+CYLzXnLQnVpPdntDEp8vl+YrBphhX15IdvVUM/w11B/x
X2uG/ys+oPgZo5kfhiL+DwSPi5RZAt5E/OvMyFftKsS/XzLOb7JT/mo/Skb+
5WI9w+pkxDtegfw/nAz/Ru5B/t9LxvnGT0T+Vydj/12LiDW9n2D8B27E+vef
cH0l0XxT+BP2lwvZ7QefwD+VTlSPits8fmEN2dWVzN7BZNe99BTrL84iu3Hi
U15/GrFlxVP4cynWl0cxR40lVsXz/KaTyH/rU+i/vgH575uCeK86jPwPSuHx
LtC/TPD9f3b0X+RIrDyQAv8qo2m85noK/LFsDrG+jNeb/jvF09QzFXo39EX9
B6by+Xqj/r9KRXwMBmL1/lSc74dViP/VVOTDvaW0nrE4Fesnb6P6sHimYb3Z
R4nlAYIbLnezDBpHrPoyjfvL1TjSvzcN+sbdJzZcSUP+tuVRvpsLeL0oJc2X
uadz/VTSeOXb6ciHER+QXbMwHfX/zVpi/e5OziI2XUzn+hlG+W7PS+f6nUt2
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
VdVtqDe5nfbX9m63BpdOr44Y+hrZDe+3Y3yQA7E5vJ31DCCW/daOet/Rn1h5
W3DdiaYb1sHQX9mO/K7sQP6/1IH4lfQhNk3sgL/ftVM92FcIDvjFTTY/kOyK
qA7k2y9didXxgpvuymVFQcQ6awfi0x/1afSV2YIvlDtbHOXI/yDmaY7E8mWC
JT2XfYhVBwR/7NfYf+cp2l97XbDUT6r3EhvKBEv+2HcM+nt2sVE9LjkL/eMF
S/mtSYH+rwRL/TVbB/37BUt6PXYj/lcFS/1ksAbxLxYsxedmMLHd08FGeqIn
I/4BgqV6+vlzxP9LB8w/fR7x3ytYivfKKOT/FQecR5mG/C/g8X8EUX7K3bvi
fIFFyP+3BUv9w30q2bULBUvvk8hR1A8Mu5mf3ab8MV/k+V/Oovkyi2DpfXO5
D7HStRv885IfsWaMYCnff+qL+l/QDesNH0ps2tEN66UoUf8xgrcebuwI8SBW
5AiW7t++YbS/2qm7De8DLdl1bwqWvjcVRED/52xv2gv92wRL77FJ64nlRsFS
vhsaoP+ZYCmf/fNQ/90cbXQfr9mM/jfKEeupdxGb5zhCb/g26N8iWMrXayeg
/4xg6T57Ug396YKl/vLNEfKvvosT9KxFPzGNECzVS9dNxPZZgqX+sTCRWKET
LNVHbSWx+k/BUv86vp5YlyJY6j9V4bj/2p2QP8e3E1uGOdvofffZCsR/hjPn
H+vf6Iz9XhuI+B8XLP0eGYD9DMnOqJ+xD9H/WgRL91moA+WHbIiLDe8hV2Kl
WrDUn75ywf2/3gXxHjWBWP+HYLqPPel9YUoULPXr7iuJ7U0uyIeEAGLFIFcb
3Q9nTxOr/+EK/yXfItZ954r5xdMukP4jgqX7+85JYssj5vqZxPIGnr8ngVil
6GGj3/8b7tN62imCpft1Vz7eP2t6wH+/lhGbf+fxV96g+bIHPRC/3o/Irqzt
gfzY9w3ZNX3dbNQf7VuI9R8Klvr7FzHEplVuyC/zZWL7ITf4qyCTWHGX7Ttu
Eqvtguk+7kXvNd0r7vDnvNvExvfcEb+cOcSWr90xf+tc6D8oWHp/hERD/y13
5OuUA8Ta5+7I10HHiA29PGz0fpgbQWwO9oB/Ykugf4UH5se8QvspfxUsvQc/
2kSsMXnAf1N20HtUX+HB9X+P2OTjifhcPEpsn+CJek5cTaxY6ol61N0hVv/s
ifOvXYDvf9c8Ud/b++H9X8rrZVbg/e8lh7/uDKbf4/JAOeojNBC//xfLoa8i
kr7vaPVy6FkWgO8/sXLk8y+O+P5dJIe/yxJovMzTC/lUfA6//99hfusr/P4P
88L6GQ74/r3HC/t/Mhzfvy97oZ5m9MbfP/K9UE9yGf7+4dYT+2U8wPevsT35
/P40XqfpiXzbvQbfv3b1RPwO2Wk/ywXmwtH4+0cez29xwt8/XLzh3+vl+P7l
7436iwvC9//53ji/6gb0b/dGPB1i8fevGG/Ea703vv9ne8P/Efj7mMbRh+ux
N51fr/TBed/VE5vm+iCfHPfi+/dWH/i7djnpUZzzgX4F/p6mzvRBvXk703hd
V1+cf6YK+kf6Ir8uNZLdMtsX62Ul4/vfZl/o+dYb3/9O++L8Fc3Qn+aLelFO
wt9/ZH7wx4T9xObhfvDfyDE3Sf8sP/g3Pw76I/xQ3zf7kF1zkucfOESsf+qH
/PjQTH+/MbWxPaPkNukf2gvnPed/R7X7SdPUEYI7/377P6PGYNw=
         "]], 
        LineBox[{{3.7708377712626762`*^9, 10867.771526999999`}, {3.7708416*^9,
          10817.155273}, {3.770928*^9, 10583.134766}, {3.7710144*^9, 
         10801.677734}, {3.771019324580986*^9, 10867.771526999999`}}], 
        LineBox[{{3.7720046884690056`*^9, 10867.771526999999`}, {3.7720512*^9,
          10256.058594}, {3.772133906436362*^9, 10867.771526999999`}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQrbVG9cEJqTeOtRNSDz6yPOoAFHL4BOS3rWZWuNR0
CMQvkJF+47jp1p/9z96B+QvcgPx8HsYDtlePgPgXCqD82IlgPsNsIL8q5M/9
iexg8wyOAvn3JZgaejeD5RPeA/kvE/7O7zUG8ydIyrxxnPj5n31S2GEQ/4Az
kK/4/G/9N00w/0OuDMT819FgvsIMIN+ijeGBmjuYH3BIBuK+axD3NryRgbg/
bwWYv0FM9o3j8kmMCyZNB/MfOMhC7Nt2GMwXyAbyxeczJVzYBDbPYaosxH1X
/cHuK9gPlRfrBvMXvATy9xmyMNxVOupgw7Bm6zdZRPgBAIL/it0=
         "]], 
        LineBox[{{3.774646071915893*^9, 10867.771526999999`}, {3.7747296*^9, 
         10051.704102}, {3.774816*^9, 10311.545898}, {3.7749024*^9, 
         10374.338867}, {3.7749888*^9, 10231.744141}, {3.7750752*^9, 
         10345.810547}, {3.7751542845581656`*^9, 10867.771526999999`}}], 
        LineBox[CompressedData["
1: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
         "]], 
        LineBox[{{3.808033982978294*^9, 10867.771526999999`}, {3.80808*^9, 
         10245.296875}, {3.8081664*^9, 10511.813477}, {3.8082528*^9, 
         10169.567383}, {3.8083392*^9, 10280.351563}, {3.8084256*^9, 
         10369.563477}, {3.808512*^9, 10131.516602}, {3.8085984*^9, 
         10242.347656}, {3.8086848*^9, 10363.138672}, {3.8087712*^9, 
         10400.915039}, {3.8088576*^9, 10442.170898}, {3.808944*^9, 
         10323.755859}, {3.8090304*^9, 10680.837891}, {3.8091168*^9, 
         10796.951172}, {3.809151184589271*^9, 10867.771526999999`}}], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQHSTdVa+Z9MaxdkLqwUeWRx2AQgW+QL6fKrODYv4R
EH9BOZBv0cbwwGoqmH9hIZC/fBLjgnc/DoP4DGeA/Imf/9kf+wOWN/gG5J+o
/C+v+hzMT1BIfuMIUmfBCDZ/glcyRL8ZN5h/oATIrwr5c3/lB7D6D/OSIeZl
GYDlFU4mQ8w7LwjmB3yGyq/aD1bfIJvyxnGfIQvD1DVg/gb3FIj6/YvA/AeF
KRD3m90D8wXmAPltq5kVGKTA5jkcg+q/ug8sX/AByL8vwdQw8fYRh32li/4I
pCLCBwCUU3+R
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxUnXlcjN0XwMcuS8YSITWRbC9GSCHNIEvIZC+lKYSiRkpa1AjZGaKQaiyR
kLFvpSmUtcZSlqhJocxgErL3O8851x+/95/383Xvc+c595577jnn3vtk6RM4
bWFDHo8nbc7jcf+H/2QF/XXiUeesRFP6NxUBK78Dz5t0u5lD1ypHYE33ATrx
++7rzxpC3nLMmwL8YsarHoknkIWhwO1cWs77YlLDsfQg8MOwbZ6Hwms5VtwD
vmtS+qb7qD8cq78Cnwr4euALscFioE48MOBwg8wmvzgWOAPf1fYOCzH+wbEk
GHjLMJsdv8XYnjwZ2K90+ebtC/D3VLeBN5T38HG2+sKx9jNwRechX6bK6jjm
dxPqxIN/+CZ2nf6NY9F44PKEn2HT2yLLlgMfnhOwZOiRrxwrE4E7ZVb1m3AO
f09zCzgjOa502KjPKL8B+KS9SDh+B7KwyyDov6rnJ396IEvHAs/K3BlW2Ybk
DwC26h219YoOy9V7gc/KjV5e7Yq/Z8gFjn+X88rtGrLgA7BZz9MFg5TIkk42
OvHCBu0vh1xC+eRi4O4n5jr0ckBW+QPbCCKyfs0n+fcAx+ufNb/pj8/z1RwX
fh55+RqWi94DD/1k5zT+M76frMNgnfhW133j/2qRlaOA3dSNA15NIfkXAz+N
3bz871GSPw74Xf3M8duDP6H8WcCn1IqiU8kGlP8dcJNjoxSZtR9Q/rZDdGJx
mwvLTJvoUf4RwE9W86Yl2n1E+RcC9/uW8CquGdYXKIBV+WOdz/3QofxXgbde
jxky3xVZXgm8w6y61daR2J7KeKhO/LlZo8KsZtie1g749u424qLF2B5/PvCc
kV8nrC3B+qJtwC0TGwy4HY8suwSc6H6xuJPRe5S/HLhP46BNPXa8Q/lb2urE
OenhP5Ksq1F+W+BdD2bWmrXFcqEU+GP4ks28Y69R/s3Aepvfx7r2foPynwe2
99JnfT+E9dWlwANOxd506Ijzx9B8mE7ccarDI+1FrC8YDJznssrI5Q+yxBN4
+XHnuR7zkeUbgJOir+mfdqtE+c8Ad767aaXJI2RtCXDvhdPGdJVXoPxN7XTi
8ff1taZvkEVC4Pjd1wprHmJ9mTvwvbY2ikWdkJXrgI2Wv9EnuSJrMoCj27do
K2uOzHsOPLRZ87dVy7E9YSN7nXjSnK7ze2VqUf7+wNkG513vfpaj/LOBP3z9
uKOuL7J6DbDu7evAiBhkwwlgtzJ15bid+LygGHigZJq0weQylJ83XCdeuS2+
kcOTEpS/L/Bo9/kao4MvUf4ZwF2/Rfgk9cX+10YBa4pzckrHYvv848BPJkx6
86E5loseA//8lOOfcBHfX/YH2H2CuuqzL46PstcInbh29m2Pzk9Q3zSuwL1c
Pob2boH6zYsEbjRm1qVwF5wfwqPAT4yjpxSnkf5rgAv7B/dsOJP0/yfwkcoi
+6aVWK62GqkTG0zNf7mdxPljcAH2HXTmx2VbLBeEAS/hBa5pfAv1U3IYePiD
hh+MjyPLHwCP2+P9svUhbF9VB3zH/syGb2eQtZYOYD8MP7zXybA9/mTgVwmD
S0x+4u+JVgLz0l7n9X+L9WVK4Jx86a3js1C/lXeBH8wN6ZZOv6f5ApxmZ5zp
/hGZZzEK+sfd6FXP5cjCicARMTdX1vGwPekK4G3iXuuMr5L8ScDL3Q2HTgtI
/nzgtS8CP4y9Q/LXAD9qMPHZpTicvwIzR504atqHxzV78XnJOOBVvVt82TQS
68tlwD+No17zfmJ91X5g62XpH3dOofl/E/hmtdVczwJ8P/4n4MtumXNMD+F4
ijqLQD+v7ek5fBLN/zHAj38Y/hPnYblyGfC1fteksin4+5oE4BbPw7omdiP5
c4Gr1mnECQasL9QDj3R5uNPjL7K0o1gnvpp1ZJD7eLQnChHwxAMmru3/YP+q
/YBjd905nlSO5YbdwKaR++M67cPnBdnAPUp+RPllYrmkGnhIzDZd2Vd8Xt5+
tE48Pypg8V0XLFc5AOe3zk4McMNy7SLgNsbfrGMrsZy/Czi5+euRB9QojygT
ONQ3ptxjDPan7C1wgq1ZfNMo7D8lf4xObHkyr11xHpZrhgOv1pxz+2pP+r8Q
OGPCZMmNS2T/dwC78+/+suuCz0uvAF+Zkdo/YzmNfwXwC3tOgZHVrceCP2E0
aaRSj/1pGAbs/MHpfLfHyAIf4HuLK2s3HyP7vxX47ILtbzxDyP5f5Or3HHnw
aQqySgvcUb17TaMXyNoWTtCfzRsuqJqDzB8KnNxq+67Zi2j8vYAjE//qx7dA
lm0C7r5lSI0xjafyHLCxf98tuQNo/F8BL+r9cVVcGTKv+TiduHRW+DLbWSiv
0AZ4X9SmVbrfpP8ewGOHXF37rDP2jyIWGJyjI523YH21CtjINiP66SJa/14A
3/fxqV2+jPS/yXidWLgg5MQ7K2TJQODlGd6xeXGk/27AbofO3e++G1m1dvy/
9RJZewq4maHjBMlvmv/PgNPyJg3bJMb1W9Rwgk78ek6nSw95yLL/gJ9Iu8Tu
aE7r/yzgHy8GT2o4g9Z/OfCi//YXuMQi804AV2XmDXB1QP9CWATsqpxaOfER
+lPSeuDjv3hHbGuwXNFnIpRnDVXNjPmO8k8H9syWDltagmxYDbwkuNmZwU2Q
BWnAZgW//YwV9Sj/I+BbOwaF9rdsIOLk/w1894+x05q/jThWWTvrxMobkWEN
bBtyrJUA617bdlF3xXJ+BLDzvKT5ItvGHItSgdspj8af+orlskLgyjZNkyN2
ICt/AG+yCu98Kwjb0/SYpBPbWoAHdAZ/n+cCHNuVM7BYX7gK2Do/6VHOcGxf
egi4m0NU4OMUZMV94Mo62z/PpyKrvwE796n6tmscskEwWSfm339YUXexGceC
ScD5A6DHZEYcS0KAT3upul7sz0f5U4BH2DasuXq9Lcp/B3jlVPOOfq1NUf5a
4PQxAbFdhR1RfvMpOvFecHd3bjZB+ScAfwuvy4/42gHlDwJ+OgQcwl5YrjwA
/KvJNe+S0di+Jg/4zm23Z4+NjVH+GuCaxRUbL+zFcmFXF51444C0wH217VB+
J2DLuK0H1ntiuSIQ+H5L1Q6XJCxX7wNO/nQsb1Iovp/hBvB4976B4+cgCz4C
3zC0HdTzM8ojMZ2qE5+L+KyS+CPLRwPbP8wYffd0J5R/KbD67KMjHc53Rvnj
gXdMD7ZKKEPm5wAbJB2q2rshi3TAcRUu1dIkc5TfRAL+IecAfxSg/I7AKSP/
e7I/vjvKvwS4m/uCEWWFVij/buAtfxbWVTawRvmvA78c12hVy5vI0irg83E5
rp+79ED527mC/oD23zqDrB4JfDYJOuBeL5TfF9hjR+7X3gfwecFO4AvDvucu
6IssuQb8unrP2VZt+6H8b4AHc//V/ofyt5mmExfP0g+89q43ym8PvF7netm8
SV+UfwGw0Q/lonMt+qD824FXOw6dd7UPti+7DBw8bve3pvU9Uf7XwEE/2lRf
aoOsaTUdxne9++PMwyT/MOBIbjiu4vsLvYHPlMMLbiX5twCvj4QFowjfR3EB
+LI5vNEqLFeXATvmvbywLhLbNxjN0ImPJt4UqD4jC4YA+9ZVeh8sxt+TzANe
EmhYf2cG/p58I/BMYd/j7SXIqrPA8kuimNfvkLUvgUeUTd2WUIC/x282Uyee
KmrvfWM6losGAZtaT29y2AZZNhf4wQhYwEciK9cDz5jWS7lJgs9rTgPPzEk7
4qIl+V8Az557Jls/D99X2HgW2EvortM9sFw6ADjd+ErnABmN/xzgUY5bYR6i
PqljgHeUlXxZVGaJ8p8EfvQr72nyRGTBU+AleYeq9Te7ofwNZoM+Qvh5vSPq
p7wf8NdFjtPG5iGrZgK/H8U7PiUSWRsN/PnRFB++HbbHTwcWzP/oPjoZf1/0
BJjrnoB2yLK/wI0tuYgP6yt7z9GJdyaWN42k+aCZBpw9Biz8EGTeamCn1ke9
v0+wQPmPAfeXNrz0MR7LpQ+B68/ChOUhK34Bc8vZkWE439Q93cC/0ngc2xmP
8hmmAl+44RU3tAW2JwgHzpO4nD+hMkP5jwCrrf2fjHmC9eUFwHY2O37nKPF9
Vd+BbwlUQYvPIGu7u4M/4Deldvt0HA/+FOCTK1rdnpdC8ocCqy1nHH/+mOQ/
CByzAibAURwv5T3grd9d7oefwXLNV+BdGfsiz2Uh8wRzwb9b+2zf6DpkofNc
Fh/tRZYGA/c5J7bufAVZkQzs5rp2ielfmv+3gav8IOLthu9n+Ayc6gIK2oj0
v5sHxC/gbl0JJ/0fD7zqwKEeV/T4vHw5cJsDgw+dn436qUoEzqro0O3OQpr/
t4DduOXdHO0F3wAs5RaIzf1R/i6e4I+d/OmxzAnLZWOBJ5SHd8hohvZEGQC8
7NbfsxG7kDV7gTlzMVGP9oR3A/ja5W1NDSvRngg/AHPmcWprZGmneTrxnoUb
53u+pPkvBgZnxHRFAs1/f2BvG5jBd8j+7QFeigYK6wvUwKVxG9a7r8D2JO/n
sfxAL3wfeQcvmJ8VqYk3eWT/RgFL32i6l4ShPNrFwOUt447HnCH544DPvV9x
wSQCWZTl9c9+kvzvvNj8KEVWtpWCP9Fl4CurpthfmhHA7TqAxSrC3+P5Ajfz
2jvZ5D6yUAG81fl94yEP8XnpVeAbj/st7OyD5YpK4KZcA5EDUX5jb534+wyX
COf9g1B+O+DYOzNy0iptUP753sxeuyNLtgF/WTprdUb8EJT/EvDfMT8/6NQD
UP5y4FYgrutx7F9tSx9YTzkDHor9ybcFfvfreM2jU2T/pMD3PSfdbpaE4ynb
7MPmqxBZeR54jBl4UO4oj6YU+BGvtKFROslvNF8nBmdS+kZB8g8G5tyPKedI
fs/5LD93E1mxARh6d1SVG76P+gywz8Fi8DhwfA0l8//pF41/0wWs/32RJUJg
7YG2qVliZLk78LbeH1pfl5H9Xwf898mqausakj8DOGrrFX8je5xP/OfAwRdM
ft0zRhY1Wgj2yBNWbDucX7L+C5l8d/F55WzgkDjTxrM+0vq3BhhWj8f93iDz
TgLD27ZqqMPnhcXAnPqMao7lUp4v+G+cu81DVvQFnpgkt85tiu+rngE8IXt1
NztarwxRwHPShsIShCw4DtxFPVcgdqX1/zHwn28h0AXI8j++LN9I65Wq1yKY
j73atLzwlua/K7Cq0butvadg//IjgbnhqJxG8/8oMJf+C9qH4yfTANufv73y
ejTWV/5cxPT7JI2/1WLwZ6A45Sf+Hm8qMMzmp+0+0/wPAz5RWDRLf5rm/2Hg
lAfphUXxyIoHwGHV1oOa0/iq64DrLUEiNclvuYTNl9dk/yYD/4q39+wYh/Zc
shI4M17RJjwe+1uuBFZuUpVXm5D9uwv8KNCrWcFzfF77BRhGc7PFDRp/Cz+I
n9vajsx6ROM/EXglp1Cryf9ZATz3cWZFh9X4fsokPzafJiJr8v2Y/nmT/J/9
mH+xnfwfM3/w/xbzAtdYIUvH+TN/aT62r5AB76j8bPEokOzffmBOHWLHIxtu
Am8t4Rog+T/5s/dfiyzpvFQnvt3MIXFmNLJ8DPDONuG2J6JI/mVLWbwzl/Q/
AdgB3Ne3DuT/5AJXrk1+kN4GWaRf+m/9J/k7LgP9HAAjcpH0XwTMh+ZHkb3W
+AEXbHxUqp2EzNsDHMYpbAn5P9nL2HpUR/pfDfyia6S3TQjJ3z5AJwZvTTN2
Dum/A/Dp3bBA/KHxXxTA7Lc9zf9dwNzqHbwOyyWZwAWdXV909SD/7y3wHVDH
LoGk//xAFs9Kyf8bDlzzxdkt1hSZvxBYBurR+QzJvyPw/+ab7ArwWvXdg06z
aPwrgH255Wsclmtay3Tix6XalnG0XvHsgFNOnHrmVUzj7wOcOJP7Fxr/rTI2
n8qQFRdlzL80w/mg1gIf/D7obcZCsn8tlrP1gdZLwdDlbH2Toj2WeC1n8fxL
Wv82AV+s/fNk1Sacn6pzwKdgOb8VhfW1r4C9OQf2OPn/zYPAnkD3ReaQ/28D
zC2/xweT/fcIYv5AKs3/WOAbC9KlM2ywXKMK+uff0/pfAryu9dTTu3siC5us
0Ik74QKPLB0IXGS0uPvSOcgKN+DMJiCgL7J6LfBVf1jh3iEbTq1g69M2ZMGz
FWx/oh3J3zAY7O9ncaHvBXw/+X/AWdPiLbfPRFbNAl7etbW2v4zsnxzYKqFe
EdWV1r8TwNxypYmh9a8omLW/i8a/HvjeQaeLta/I/+8TAvEhmH/jDzT+04Er
uOmlpfGPAi6+tWyIvI7GPy3k/+y59BHwja+9PXY0JP/ndwjzj/rT+Fuv1InD
8/sM39USyw2SlSz+saHxj1jJ7Bmtl5JU4O/TQSGsaP0rXPlv/iKrfgBz6iIw
kP73CNWJN3R8XlD3mOa/C3B6DRcQkPyrgGdx6lpP8/9QKHuffjT/7wP77w89
cKgC7a3mWyjzVz1p/luu0okbcgNK8aJw0iq2/m2k+R8CjOEa2TNFCnCvQc1P
mu1HVt8B3hn1a7hsANm/WmDO/RxP8bTAPAz8dTPosWyyfxOAQxrub941mexf
EPB5cI9fpCOrDgDPMu5/Nmkq2f884KZr9ozZ0orsfw1wrB2M2G6UR9Q1HN5v
gfmPtTnoT8ucwll/DcZyZSDw2zBZaPFHLNfsA+bCc49Aiv9uhjN/0ZzW/4/A
zd9W1UT8wvpS0wid+Mj02aPu1XZH+UcDpw5yHz9zOvn/S4H7Bs+bn9Ab2RAP
fG9RmPlLB2RBDvCOdOuNVwuRJTrgfLn+68fT5P+bRMJ6/2H0iqSV2L7KETjj
ok/08wfI2iXA/X5lNP97DJm/G5jbPhxWj+up6Hok2w9dgSyrAr7UGwIWN8p/
tFsN/TfwZ4tH/2G5ZuRqFh+8o/hvEfC+dhO/2FC8JtwJDNGYesVpZOk14JTt
+a1m5GG8pngDfPHKIAfviV1R/jZR8Hxrmzu3w7C+wR74Z6/Lc1xvYPuCBcCT
HpgvbrISWbIdmEsXzq2k+PcycMXGC987iCj+fc09f86iT/f5FP+2itaJCyd+
6urVkuLfYcB9h++6F/0My0XewG2K6+3vb0CWbQGeWbpd5i7B91FeAFb4/re/
IABZUwacxjMtVK5B5rWQw3ox2Sao40qSfwgw9NZWpziMb6XzgDsO3RtbfhhZ
sRE4+rkDLJlYX30W+OlhmUOL2VhueAn8Uae275GO8a6g2Rqd2Kz5nYbWfIr/
B635tx+N5fK5wNFHNrY6YYrlqvXAUFumy8By7WngKc7iSwkdsH3+C+C04wv9
V+8k+RvHsP07V5J/QMw/+0byzwE+sHmG6dw5FP/HAP/xM+bfz6HxPwXcCabL
9BWoj8KnMWz9lVP+p8FanThgCJeRwfmh6AdsuueJ0WJi9Uxgq+LX03mZpP/R
wN9zYcGh+SlIX8v82aMU/z4B9kYHkeb/X+AGOWYOUYH4vKr3Olh/Be9H8a4g
a6cBj92y9N2vTcj81cCjx9Q37jQJWXQMOLhPRt9fBTT/HwJz4lQ4Ufz/C9ir
zz1+/n6yfz3Xg/4Zg4MTTPNfAiyumX/f8x7N/3DgjV9Knq4ZTPbvyHoWfz4k
+1cA3A87gOzfd2CTbnfeOB6h/Ff3WLAXoA5Px5D/NwXYLzM4ztSK7F8o8Ome
4MH1J/kPxrL1tj3Zv3uxzH5akv37CtwPDRrlPwQbmD9F7YmcgaF2eXgwsix4
A/PXV1L+L3kDi9/o/TS3NzD/fzjZ/9oN/9ZLyn9226gT43bVeRr/8cC14O16
5ZP/txyYW76LmpH/l7jxn79D9v8WMKYD+WT/DRtZvLad4p8um3TiZZyDcJbi
n7HAHgJuBMj/Ddj0b7zJ/90LXH3pdKN3rcj/uQHcnwtoi8n/+QA8567NzTMF
yLJOm2H+RUIE6k7+jxh4hAw83mRkjT8wt3y5r0PmxQNDtN/Wlvw1oRr4K7ib
drMo/nkPvAnc5ZaDKf7psAXeZwI42A7k/4wCHnzzzICAHuT/LN7C4mFT9OcE
ccAt0EBgvCbJ2sLizXsY78vfbWHz6RDmE1Rtt+rEb6S2DWLdMJ+gHQE81Kun
xbVmg1F+X2Aum7EmBFmk2MrW32TML8iuArdJSg6dPwXLlZXA+oEwAxORNcbb
YL0b7WEfUYH1efbAMa/z9147KkT5529j+Y8c/H3pNuA6Llydic8rLgH34RLc
q4ai/OXA20PAY5MNQ/lbbgd/6Un88NsJI1F+2+0s33MMWSIF7rU47kavDWKU
fzPws5jSrmP+G4/ynwde0cao7NcSZG0p8Ijl9vPWdMD6fKMdOvH0ef0OXps3
DuUfDHzVL7nH5zNOKL8nMJcO3rULWbkBOKRRk9I7/ZA1Z4D/FlVcLypG5r0E
njloT1TuNmeUv6lCJ+b+naeciPILgftJtuTcGI2scAe+MpPfyLNoAsq/Drje
rbZi4HwsN2QAh27o0MhKge0JngPPGtcjZXYXZEmjnWy+NMb68v7Aq0afdtzk
hqyaDdw9z39ekRe2r12z85+9QHn5J4Hf9O2Y3WcayV8MfDPMbk31UWQZbxeL
/5JJ/r7ADY62MtN0IPlnAHvPzPrt0gvr86KBV7Xa8ee/Q1guPL6LxX+XkKWP
gW1C+1tanEdW/NnF3t8Kx0fdKw7iq0UPR5iYkfyucSw+uYPlgkjgoJzOv/9s
RXkkR4Hfmre7XjcXWa6JY+9rjaz6Gcf8bXdsT2u1Wyfmtkc79MJy/lTgc+eq
kloUI4vCdrN8qhmy7DBw+eMDmbfHISsf7Gb7D6OQNXXAXco/iJtT//O674F4
bndxWbvPWC6cDHyx35ccGw8cL+lK4NTMWaNDTaai/ErgoYn53sLNrij/3T2s
f0yRDV+Am/U65DU3ZzrKbxEP8YD8fH2D9siSicBHjt22fC1Blq8A7pg1vUHd
B2RVEvDTdmBhR81B+fOBx1vUNlizbzbK/xnYyMRsHj8Yy0VmCeB/GcOEl2O5
bBzwz+a/y9+9mIXyy4Dfup/nLbuLrNkPfPnt9r8J3si8W8CHdw1vMGUVsvAT
8KOTSy0+90GWdt4L8dlfq1GhF5AVY4C3Fb2tn3kWWb0MuHy0ec62Lvj7hoS9
rH89sFyQC/zWavd1fiiyRA/c1nVyKW84vr+84z6duN2GpYJXQinKLwIOdupj
OeegF8rvt4/Zg6z5KP8e4M55rwTutxei/NnAG7Mk6pXXfVH+auAIl/CyVTmL
UP72+8GfLT+T4lSA9TUO+1m+s9UClH8x8LfCx3LxZWxfuGs/a1+C9aWZwMKF
WnlHz8Uo/1vg4eG/S63/LEX5+Yk68Wp3p+jFRciG4cDv7LuXpeb7o/wLgTvE
DVPf/44s2QHcs2GRY/NWWF9+BTjt2A51SnoAyl8BnLe+keVz40CUv/UBnXjx
gx3ZwRtkKL8dMHd6obslssgHuGnfirJj7siyrcCB7daq7yYuR/kvAv/332UL
VZcQlF8LvC7FTn59IjKvZRLEnyY59cWdwlD+oUl0niHh2SqU3wt4csc6i+ey
lSj/JmDPLR2VH5KR1eeAXXqPVR/sEYryvwIeYLc2O+UisqB5MvTHDBvejGHI
Eptk1v8CZLkHMD/EQt6B2lfFAptsu5Bd2xrfT6sCbtjqXsqnJsj8EuDdHebw
Hs9FFjVJYf0xIhjlHwhc8qevuq42COV3Az4cXO3VriX2h2YtcN0dV/liVyzn
ZQAP39OKVxSFzwufAf96t0Qt+Ijl0oZK1r8ByIr/gDddKshO6oPtqWcpWX/X
IxvkwGefXnOcl4EsOKFk/dcBWVIEHDphkMjnPo6XvB54avfc7NtVyKo+B3Xi
yv6zHS9moz5opwOfr4gtm7IS9YEfBfznmZWjz1gsF6UBZw3Ply/V+aH8jw6y
8TmJ+qr8Dcydrrn5DPVNY30I/PuRB9TBw7A+zxV4+tz3goFfsb4wAnjo6pXq
rzNI/1OBG/UqUSedwPmhKASWDGkj3dkf66t/AI972Mhi7eRlKH+Pwzrxqeye
vOhvWC5wARYUDigLX4y/L1kFPJGfIc+diPNBfgj45rze0hGnsVx1H1h1z5AS
MApZ+w348I4fcnVHZL7lEfBXk/ZJLxcvQfknHWG/F4UsCwFeqjtW/99mZGXK
EaY/PfB9NHeAPWVNox2vYDnvC3DONE/1pGyS3zxVJ25iGu9YFoHl0gnAZpf2
piTOwd9XBKUyexOF768+AJy2NTqlpi/N/7xUZh9f0/yvAa7yjVaaNcfxlXQ9
yvTRjcbfCbhn89mi8kc0/oFH2XhvRX3T7jvK+kOOzL95lNmzKGTRx6NsPkxZ
gfKbHmP6uQRZORr4coMUi6YHsb5m6TE6H74th/Q/Afji18fRHbshC3OOsfYr
Sf91wE8ej9dOfUr6b5IG/tLk1BRZGLLaEdg356bF+gRkw5I0pu/FyILdacx+
dcb5JbkOfOKcu3THSXw/eVUak/cZsqrdcdBPy60peW5YXzsS+FrvcO3h68j8
RcdZf5Yii3YCH/I5kD3xOtoD2bXjzH5cQ1a+Ae584kH9ib5obzRt0nXiQuXB
6NxjyLzh6azcgCxcAPw5/oRFyQiyf9vTmb0sxPYUl//xJWT1a+BOKQ2lmUEk
f6sTOvGauGXagh0oj2DYCWZv3pD83idY/8Qjy7ecYO+7AZ9XXQDeP2qENtyX
xr/sX3lLGv8WJ3VitYgvWLuYxn8I8Jh7V6OXDkOWzTvJ7JEr2f+NwHNWyKXG
WTjfNWdPsvXFBe0J7xWw46lDjuc1aE+EzU4x+xmK5dJBp9jvz6bxn3uKrdcn
yf6tP8XmyzWyf6eBTz8MUo7vg/oseHGK2ZN1pP+NM9h69BrrywcALzd3kV49
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
wNx51gcakv888IVfM+WBGSR/KXDxm91yUzpPJG3uAutd207ycb8p32ED/ONq
q/ol1J7aA7hzhrHcjvI1hlhg7j7R80mU7znjwvzFdDrvUwLMfQ+jbCTlu5pM
1eP524NdKd8zcCqLd8PpvJfbVNr/27+H1rt1U5k9nkTfe8gA5u5D2ZXRevds
KouPy7Bc2VCix/sLDY/RevefhNa/zPVYzpsNXFRVxEvdRvn+NcARvhPlXXoh
S09IWL7dgfLdRcD4PZRUynfXA5998Tv7/R0679bHlfan+iZRvn+GK1tvP5K9
jwKearHGMfIbfe8kzZXlT07j+6keAbv0bCQyeYWs/Q3swH2AdQwyv9c0sL9/
PVOuZFG+0xV40/ltjq5TsFwWMY3tfwmQlanAtRnh6pGNSP7CaaQvSxfQevdz
GvnbebQ+Ca2m68WKkoEpJ1Mo3+cCzN1naeNK8q+aTvtdW9eR/IeAP22z5F1e
Rd+7uA/88MFfkb05sqAOmLvfJr1A37uwnAHz36Ew5WIpfe9i0gyWT+hH5/1C
gLnzqSNj6XsXKcDxTdpHd3CmfO9d4Kd15YKDFST/F+CX7a5ot56k8TefqRfD
z2l9/qP1fsJMls8+ROt90EyKd8eGkPxJM9l+qJDGP38mjaffa9rvqQE+7NEl
W1ZE8nedpRfPUx5Rx0hJfqdZbP/GgsY/EPjPj4vS4x9J/v3A3J8/s6Xvk0hu
Ar8P2aKeU0vr/UfgTwof+c2mtN9hOluP9/22PaDxHw2M51OG0Pgvm832v0zp
vGPCbJafCqTxz5nN8gOFNP662Wy/aR2Nv8kc8rc3KUn/RcA+h0+WtZpP/p4f
8IOde7ya9iN/bzew9GSgNGgF5fuvA3Pnlavo/ru6Cpi7vz3ZnfL97dz0YnlU
Wba9Ke5HCBzcKD+67i7tdywC5u4Dta6g/Y6dwNz5TZ9qOu98Dfjbpcbasr30
vZs3brReD2qP95f4fHeIh2F1z6bvV4iGu9P8v2yF5bIF7rTf0WAe3XfaDszd
rwvqTPedLgNrLssEC05jOa/CncXDl+l7F63nkjz3U+h7F8Pm0n7Eh+V038t7
Lu2HD75O9722zKV8d888+t7PBeCL3zvw5suwXKAFDpvtIC29h+fHJS08KD/r
OQvPn8uHAKcnbsk+ZYKsmudB/tYeMzrvv9GD1gP5M7rvfc6D9lsuhNN5/1ce
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

         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
rVl7UaLh2ysOtWbHVz/n++uqtmE2tmvD4x/B02Xz27DfUx3g1j5tw66voZK3
6f/xT4rf25ulS5XebH/lHG9hfAvTNXv5/vrHfH9L+bYsXdKqLdtfEQGm8VFs
r6gz2rL2jW433974gFtctp3p//FWtEzKrRrMrZ3RjrWHDDt5uuheO3Z8aan2
bHtlM25NaHu2vX4at2Vbe3Z8yW1uhagDj79JBx5/EE83pnZg7T3xlg6svSi7
0YG3//5wa907suMZBnRk949oakfe/9/YkbWnlIaOrHzR/OTb6xt14uMf/Tqx
8lEyuRPrbyvWd2L9cfXlTux4uu+dWPlmdO7M2qPivp3Z+JMssTO731Tazux5
017ozJ//L9wiJx9mqZ8P21+Z4MP7v7k+rLzUn/Vh52P5yI8ncezC+7++3GpV
F1Y+61Z0YfsbT/F08QeeLqsjY+WhqpuMnZ92nIzHn8MtOiHj/V+zjJd/NeVs
e41MzspPfQy3ZTHfXnJMzo6veCNn56e278ryV9e5K+tfGEd35fVfdldWf8oK
+faql11Zf0Ur7sbuJ0OHbmx/0ShuaVY3Vn8rD3Jrirqx/oS+Snf2e5a23JLh
3fn437zu7HlR7+fWGbmNFXvw+Nv04PX/UJ6umt2Dna82vwfv/zzqwcf/yvuy
/pa0pS9//sN9+fjfLF82nqTX+fLxn/u+7HmQlOnJzk/RoidrL6kH9eTt3/Se
rH9k3NGTtZfFd/n2spK9WHtZ1bQXa19qQ3qx8seg7sWuj2hbL97/u9WLx/+v
F2u/aTz8WPtSH+jH+ouWFJ4u2ezH2reK636sv6P+7SeMv2B/QufWW2ivt8X4
FWDvQesbrLuG88/i5N7C8XC+Wraht3A9cT5bdbW3yXa+VVsMtpkvNzTsI+QP
zs+K+vURyiOa/00CvwoID/4WgVauAw/46plb7Srur7kELqNPKlvlD84H67/1
Ee4v/H2LpK/Jdj5Y0qcv218xsa/Jdr5evaavyXb+Wne+r8l2vtn4Gdz/9Vf3
jwdp/ruBP/TP8rwG9wxGy3r5s3TVeH92PO0qf/Z7hjP+Jtv5bdFHbmm9fibb
+XNlD3D5yzuTPavT/HdcPxaffjl4Zf0tRz/Ppfnvk/2E8V+K/30/dnxF7f4m
eW6TJ62qr8Xrq+4KDqm2LKNvMc1/jwVr2zpske5HG5f2F8pjtPh4fzYfKzOB
beavVQ4Kk+38ubaLgs1nGqIVJtv5atFiBZuflR5VsPlF5WsFm5/UVB/A5o/1
nQaw+UpLJLj77KWdVi+l+c+F3IrDA9h8qPrFAHZ+umoB7PyM7cH7Aso/r96T
5j9HcssWBLD5a1VBAJ//fBbAztdQOZCNR4jaBrLnTzoskM1HK+fydM0+sP+R
WLvaJur/P+HHs1QIYumS1kFsfl8xBFxqyccPrZrT/HdmEMtf3Z4goT1I878P
g9j1F5cLZvkl8wpm6wFUYcEs/7Qzg3n8u4J5/PeD2flJS4eweJXNQ9h4h2Zg
iDB+S/FPD2HjPZbtIez4kjshbP5aUSKUxaf2DGX3jy44lMVrTOPp4q2hfP3D
zVC23kD1N1QYb0VrGw9k2xsCuEUpA/n9v4lbeQ3ca31J9wd6tOYXt951EL//
+w9i+0umDDKx9R95g9jvq69w635wG10G8/l//8HseLJJg3n8awfz/L/I0w1f
B7PnRSQJY9dL2juMxz8hjN0/mtU8XX8O7Fyy6trelyn+T2Emtv6lfjh7XhU9
udXx4Sw+3cpwHv/pcBav2BLO4pHVjWDpqu4RbH9tbAQ7X8OyCLa/6CRPl77j
VtYawo6vkQ9h+a0fM4SVZ5YlQ1j5JdFzK94O4fHXGMqeB53PUL7+I2oo21+8
aCj7PdkRbtWroez6a+2UbD2KoaPSxNY/RSpZfS/VKIX2O9X/h8CnL944uG4x
rf95rmTtB33VYay+tbQbJoyXYXtAMgJss95OMR/80K5fpSFfcH2b+gD4cYMZ
6qkVaP3b02HC+Bytf6s0XBj/xPaO2Bt8cM7puIqemC5Tgo2eh76uaEDtnznD
hf4Fnp9273BWHxseg/W7R18dFUP1f4URQvuc6v9WI1j9rowYYbJdT6jJGMHa
G/rdI4T2IcX/YITQnkRLyo4U2pNohXQkay+pB48U+r94fN0McNNh4+blWtDG
nSNZ+0l8byQ7X1mpUdCejF1forAMWtVsFGvvaUNHsfwyTBsl9Leo/bcdfOJo
bvcZaZT/t0fx9p8o0iSv/KpuZFQntKZJJGsv6oMihf4n2pLK0yVb+P6KG5HC
+AOt//sTyet/99Gs/WIcMJrd3+Kp3LKNo/n6L8No1h7S/hzN2z+NotjzIOof
xY4nnRzFnjflem7N5Si+/u17FC//naNZ+SrpG83WOykSo/n6N200aw/oLkSz
9XvGL9G8/eMUw663zC+GP/8J3NrcGHa+hrMxrLwWfeLpUscxzErfMez6aVRj
2PXQrxjD+huWU+BWmdXMP1qgJR+4FXXGsvpd3W0sO55u3Fi2Ps+YM5bXfyfG
svpXZh7Lro+q5ji2vVY2jqUbYsax8l20hG8vPTaO1Q/KN+N4+9c+ll0/fedY
dr6W0Txdkh3LymNFIU9Xv+TpOnEcay8bO8Sx9YXiUXG8/s+KY/ef6mAcuz7a
ojje/qmi4u2fdioWr3Q4T1fOU/H496tY/0NvVLHzt1SM5+sf28Tz+IfGs+ul
nh3P8keXH8/iMz6KZ/klLj+et/9ajuftn/DxPP9njWfHM+h4uujBePb70jIJ
LH+ULRJ4/IMSeP2fnsDqb8uOBHZ8yV2+v6LkBFY+qJtOYOenC5nA4jGqebp4
G7fs1gSe///4/lqPiex+MARyi1In8vbP5ons/JTXJ7L2pOY3t94tkc0nWxSJ
LF2SnMjKM8WGRB7/Vb69rpgfz9hwErO43yTWX5ElTWL9NdU6nq69NIn9nuEb
t8g5ibVvpX2SeP93Ik/XrEliv6c/n8Tj/5zE2tOSBpPZ8RS9JrPyVT1+Mm//
ruI2npnM8//jZF7+1ZvC13/3mMLzP24Kj3/5FHZ+olNT2PlJ30/h7d/aySz/
NF2Tef9/bDKPf2kyj/94Ml//beLbqx2msuPrukxlxzdGT+X5v3gqu/6yo3x/
1Wuerq2ewupbQydu0egU3v9dmML7/4e5NS9SWH2tr5bK+suW9qm8/zsylW2v
WMC3VxfwdN2zVJZfxspp7HqK26bx+39YGr//56ax42n38XTDkzS+/qOiml0/
aWtu5RA1216Tqeb93z1qvv7/oZr3/8pNY+WjwmsaX/8eNo2vf585jR3fuGsa
ux7i+9N4+Vd6Ou//NZ/OttcO5OmG6dN5/bdjOvs96Z3p7PyVJdLZ86jxTOf3
f3A6e34sadySrXx/xc103v//C54wZETO5sc4fqJrPIONrxgDZvD3H1K4ZZtm
sPal6hq4iffLiaecafzr1wx2PxhcZ7LjixQz2fiOdMpMdnxlHt9ec2UmO77+
B0+3uMxi7xNI/Gex8SHFpFlse/Vanq67OIv9vvErTxdLMtj+st4ZPP4JGXz8
b3UGi89wLoONz4k+83Rp/UxmZc9M9jxr4jP5+NdKvr3ldCZf/2Th2yvqzmbr
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
qh/efyAMrR4K7hLQfVZwIc1/zwZ3fNJ/fk4sphvz+f7ix+Dnq3e+HziW6r/y
30zydvY3Zg78Q+PfLcERmxYuvfCAxr/DwQ97xvofaoY2zPomzK/Q/Ofub8L7
bmjpg2/CfAxaWea7MP+D1rT4LqynovnPQeBOkDs1+1D86WA3HODC8XzJTrC1
dVT3K43/3wUfyN/VqVd/3F5d8odJvuqURDc+iuJv+oOtnzCGgG+MbZBx/DfV
f9N+sPF42TbwxuXvJwYMRatuWbe3Vgf3cH/tP/A3+dIy9mlog0exSb7i6sEH
X69T/geBndZdq3/qCrV/U4tZfazcDG57umjd4O6YrrleLMwHUf3/G7yorf7S
JAva4vbTJF+Z6HV5wi6q/weA33d7PP7rCKr/k38K81dU/2/4yds/V8ELr5Xw
u3uA2j/FP4XvPVD7p9Ev1t6Q9QOHi+pu6POP2j9Jv4T5Prr/14E9f+0s//cA
3f+XfgnzYWjRd3DNPgunumrQUuffwvwi5X8fsHU04raK8n/ibzbfol/zW+gP
U/6f/y2Un3T/f/nN7g9Fgz8muY95Zsn96ZT/vf6w/XXjwRk1SjVaIUMbV/1h
8+3is2CPTlGJj8Jo/ucj+MY6n/P1ven+r/cXnodDvSfduYf3m7YH+F7yxx7J
hWhDHPiZxPlCrb1o0Yq/wno1uv9PgVMqODgOEVP878F/q+lC3q3A7TW1/wnr
SXF+S98VfC5sZ+rYbLRl7D+2fkOS808oz2n9y3Fw8ui9wX4jaf7f9I+th9E5
iMz/r5el9W9dwDbrPcQxYFrvivNtssVg6j/T+o+jYOqP0/qP12BaT0rxVy9h
tl1vIuoM/nj4zdL6z9DS0eAt2nVvQzuglQvBNP+P1hwGjxpgnVGk+F+AA8tN
7rysBsVfraSZzf91AIfc+Nr9zkyKfySY6kea/1sAxumgAZT/BeC1uTeaGt7T
+pdnYJv5PnGVUmY5dpdyMV3WFkx/PwOtGga2yT/tXHDBYPfmZz0p/n3gtkHz
PrddS/lvBJfb9+T+7Gxa/1GxtNl2vYayNZjWM1P+DwHPsQ5HBaP1meA27y/H
LYtCW/aAfRb9+dxaSfn/CEzz/VT+lStjlj8OsvZYKH4v8Aj3wtKbfGj+Mww8
4FE4ZDHFPxNsu/5JB5421RogxX+/DPs9VemyZjl9Lpju/+ZgGh+n+AeCpz87
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
BA==
         "]]}}}, {{}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, False}, AxesLabel -> {None, None}, 
     AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{3.6199008*^9, 3.8333952*^9}, {0, 10867.771526999999`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.08090169943749476]}}, Ticks -> {{}, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"BTC\"", "\"ETH\"", "\"DOGE\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "360"], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.833438064573399*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"ad48b90c-8116-406d-9540-c75902b4fe09"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normaliziran pogled", "Section",
 CellChangeTimes->{{3.8395814143978024`*^9, 
  3.8395814342540116`*^9}},ExpressionUUID->"bd016494-fb06-47a2-8fea-\
6bbfd7078898"],

Cell["\<\
V slede\[CHacek]i analizi bom predstavil vrednosti Bicoina, Ethereuma in \
Dogecoina v normaliziranem pogledu - to pomeni, da bo \
izhodi\[SHacek]\[CHacek]na (za\[CHacek]etna vrednost) predstavljena z 1, \
slede\[CHacek]e vrednosti pa glede na spreminjanje le - te.\
\>", "Text",
 CellChangeTimes->{{3.839649217898181*^9, 
  3.839649335026513*^9}},ExpressionUUID->"5c32b2cb-2251-4b31-b592-\
d037a5893be9"],

Cell[CellGroupData[{

Cell["1. Bitcoin", "Subsection",
 CellChangeTimes->{{3.8395831885558753`*^9, 
  3.8395832032457905`*^9}},ExpressionUUID->"46b11da4-0278-41ba-9289-\
928576b4194e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DataBit", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "ResourceFunction", "[", 
      "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<BTC\>\"", "]"}], "//", 
    "Normal"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8395819654028883`*^9, 3.839581974099967*^9}, {
   3.8395823380638905`*^9, 3.839582342820262*^9}, 3.839583057180871*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"34bdea2b-2d60-48e2-a22e-c937f64a194e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DatumiBit", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DataBit", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "DataBit", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.839582023923021*^9, 3.8395820299859266`*^9}, {
   3.839582317807458*^9, 3.8395824117040615`*^9}, {3.8395824426859245`*^9, 
   3.839582611088895*^9}, 3.8395826897660937`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"7dec3457-9001-4f13-b132-dc0ee7daf21a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VrednostiBit", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DataBit", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "DataBit", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.839582635287939*^9, 3.839582678189706*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"122cec23-43f5-49ec-985d-8137ab538a3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VrednostiBitNormirane", " ", "=", " ", 
   RowBox[{"VrednostiBit", "/", 
    RowBox[{"VrednostiBit", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.839582715131796*^9, 3.8395827657179656`*^9}},
 NumberMarks->False,
 CellLabel->"In[18]:=",ExpressionUUID->"139a34d1-6c34-45ce-878f-bab54e5155a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeries", "[", 
  RowBox[{"VrednostiBitNormirane", ",", 
   RowBox[{"{", "DatumiBit", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8395827786086187`*^9, 3.8395828251687536`*^9}, {
  3.839582911369872*^9, 3.8395829498059807`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"0f8dd165-c62a-4a2b-ba84-54f1617fe34d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAA5x53sGn46kFfD0uA+f/vP8olQuY9
/+pBNu7NBpZY6D9wp9gopQbrQUnWqL8/ieg/meDw0o4N60FgdZgI757gP1oS
TsZVFOtBM6tVqgw44z/fvnbGrxvrQTqO/78GKt8/5yIhLowi60E1c9n5Xy3g
P7IBl6L7KetBoRLaAM8F5D8W2VFgSDHrQZpgnzojLuA//GeOhRc460FAg3h0
VQDhP6Zxlrd5P+tBbGjcV2yv5j/SMiBRXkbrQcETXpEdGe4/l+zuMyBN60HL
PlzwKXnrPx8hiSN1VOtByihl0URk7T8qDaV6TFvrQULLseKJF/A/+XOM3rZi
60EVyWN1L+j1P2DTuIv+aetBXjSF11+a9D9K6magyHDrQe66WotpOPU/93vg
wSV460GhgQAmMaP4PyfF20oFf+tBl2f7ufw5+z8biaLgd4brQaRWg2IyDQBA
p0Wuv8eN60FSf4sfx98EQLa5OwaalOtBdz6eIhqCBUCIqJRZ/5vrQZBtWz/o
ghhA3U5vFOei60HDozwNee4TQMrtjhisqetBR6cK/J0qI0B7B3opBLHrQS76
+gTtpiVArtjmod6360FQRRHmdPYxQKUkHydMv+tB8eDM/bklQ0A0aZz1lsbr
Qe4NryawljhARmWbK2TN60Fn1+2NiFUuQBzcZW7E1OtBXNua6oY2MkB0CrIY
p9vrQd9V4NnK5ypAZTFDDGfi60E/UdnnHKItQBnTnwy66etB1mByXSvSLEBQ
LH50j/DrQeRICEVi1itASwAo6ff360HSFY8/R2ocQMiLU8Xi/utBjnP3Sx5k
H0DeD8TqqgXsQalb6biQTCFAtw4AHQYN7EFw/W9a2AAoQBPFvbbjE+xBsbJa
1g/BMUAz9kZdVBvsQbMjPm/8OTdA6x8VTaIi7EGMyBO5Pj01QCYBZaRyKexB
AMHrp386MkAkXYAI1jDsQfHfslx7gy9ApXAd1Ls37EE3CLxNfZQxQL58/+h+
PuxBWJUu0pZWNUCbA60K1UXsQdzkqZJJFi1A+kHck61M7EGF72mqmAs0QB37
1ikZVOxBO+HQXgLUM0DYrBYJYlvsQXYaPwYH9jlAFhbYTy1i7EEtRlcxUqs3
QBj6ZKOLaexBxof3rJTiPkCclXNebHDsQdMVT/y7pkZAcCAAcQt07EFUNjKy
XNpNQJMYqhI=
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$192777#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3839529600}, {0., 
                59.70595385982293}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"02 Sep 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2539", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBgQN+/CFib1JlAgAAADcAAAACAAAA5x53sGn46kFfD0uA+f/vP8olQuY9
/+pBNu7NBpZY6D9wp9gopQbrQUnWqL8/ieg/meDw0o4N60FgdZgI757gP1oS
TsZVFOtBM6tVqgw44z/fvnbGrxvrQTqO/78GKt8/5yIhLowi60E1c9n5Xy3g
P7IBl6L7KetBoRLaAM8F5D8W2VFgSDHrQZpgnzojLuA//GeOhRc460FAg3h0
VQDhP6Zxlrd5P+tBbGjcV2yv5j/SMiBRXkbrQcETXpEdGe4/l+zuMyBN60HL
PlzwKXnrPx8hiSN1VOtByihl0URk7T8qDaV6TFvrQULLseKJF/A/+XOM3rZi
60EVyWN1L+j1P2DTuIv+aetBXjSF11+a9D9K6magyHDrQe66WotpOPU/93vg
wSV460GhgQAmMaP4PyfF20oFf+tBl2f7ufw5+z8biaLgd4brQaRWg2IyDQBA
p0Wuv8eN60FSf4sfx98EQLa5OwaalOtBdz6eIhqCBUCIqJRZ/5vrQZBtWz/o
ghhA3U5vFOei60HDozwNee4TQMrtjhisqetBR6cK/J0qI0B7B3opBLHrQS76
+gTtpiVArtjmod6360FQRRHmdPYxQKUkHydMv+tB8eDM/bklQ0A0aZz1lsbr
Qe4NryawljhARmWbK2TN60Fn1+2NiFUuQBzcZW7E1OtBXNua6oY2MkB0CrIY
p9vrQd9V4NnK5ypAZTFDDGfi60E/UdnnHKItQBnTnwy66etB1mByXSvSLEBQ
LH50j/DrQeRICEVi1itASwAo6ff360HSFY8/R2ocQMiLU8Xi/utBjnP3Sx5k
H0DeD8TqqgXsQalb6biQTCFAtw4AHQYN7EFw/W9a2AAoQBPFvbbjE+xBsbJa
1g/BMUAz9kZdVBvsQbMjPm/8OTdA6x8VTaIi7EGMyBO5Pj01QCYBZaRyKexB
AMHrp386MkAkXYAI1jDsQfHfslx7gy9ApXAd1Ls37EE3CLxNfZQxQL58/+h+
PuxBWJUu0pZWNUCbA60K1UXsQdzkqZJJFi1A+kHck61M7EGF72mqmAs0QB37
1ikZVOxBO+HQXgLUM0DYrBYJYlvsQXYaPwYH9jlAFhbYTy1i7EEtRlcxUqs3
QBj6ZKOLaexBxof3rJTiPkCclXNebHDsQdMVT/y7pkZAcCAAcQt07EFUNjKy
XNpNQJMYqhI=
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$192777#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3839529600}, {0., 
                59.70595385982293}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"02 Sep 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2539", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1: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
KGLtnxwSZux9erN+G7F/sGx9YBAJ5SUuvc/tJOHFW/6vTjSR8NYejTqzURJG
tXWHJs2Q0PbebDxpmvDbouSYnrY8bnueVEd2VcKp5uDOQ9VK+CLcc8gwUQl5
5Y5ees6ljKUS/hHX5JQxUehn8bYqZWx1p1KF5FUw50LesHSNMqoxyLtZrVXw
SlfZcpuSMsJtz5J+U2VcM992uNFaGXujri8G5SpjBabxN6oqo6TrPopXnzLu
7+SAp3PKOKLDqvVUQwU7FrfENFBVcHnkAteEqwoO9UlFN2xSQbZb88Nv8on9
X9QNhHiqYrpR523xfhVUdlG7uKNBGW/oe7LsF1NB6egmLk4eFay9w1fWJaWC
a8Y382f/UcZjT6lCjvtVMCVrhhlzTQVFojjVXYVVMeWu+cN6AzVUX7GMJ8ep
YWyV98wxNzWMyy9trSSpITru5N56Qg13vec2S1VTR7M415FsFg3kcRVQcekj
6sD9oOvzJ7Wx/6J9fWOMFhbqkycSxKgYpkwPZTlOxQ137ugsTFLxsuxNySeb
qHjgcPT7Dn4KDoVZuru/10Y755tJDaNU9PppsPVfGBUteC9H5fpTMTZtpzRP
EwW1rLxMlo2omKd0YJ7/CBWr8aPmuTwqrpQ0xc3P0tD22aZyTVM6Fkd801cQ
oqP/50cM6wkazsadEpmhEPNb6q73T6tp2PlLEX48p+GuLr8MNhk6uvV235Qm
5rGTM6Cd0kbB4SNtC1Ubqeh35VRm3AYq/i489qUih4pyLzlUIog5jdN5ie/M
RwqKD/7X5niCiq5H6kTvbafiuaIhlrqPVCw++ZjLZ5WK9tLX/sSzEXPz4vnP
B13ouFVDu/PDPWIOetBqoreXgYom7vaF7XT0jV11Z7Fi4PhN9qbFLwx0CRh8
fV5LF0uWI3TD9uvhFR+FM0eq9PDJD9W2m8L6eOXMnLNKvQGqnhNc4jlsjMWK
hoKvI/Tx/JeS23SSESZd8fwYrmyIFhuuUYXv6mFZQ+RaEUVifWuvmf8VPRQL
pLTHqxjiJdkAIc4z+sghIKjhyaqP0VRPunq8PvrHvtdvWmuAykfjX5j9MsTt
XeWOPieMcFg4Xq852xCppQfUqd/0McN7XY32NwP87LS2QXBIH+Ho4spyoC4e
e7LN4PEnPQwrr3tn9pyBO2j/HprRdJD9u25NpbMeUisH6l5y6SHXvqC/wsl6
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
    "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKB2zU3QvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
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
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8395828046477447`*^9, 3.8395828268049707`*^9}, {
  3.8395829415214624`*^9, 3.8395829512653656`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"2bd6914f-cdfb-46cf-812a-3abaefbe0a10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "%22", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[23]:=",ExpressionUUID->"76823e15-934c-4bcd-8db6-eeb2567025ee"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
xauWMJsnTsT8PPDvggzrx5memH8H+GVmvxHrTT0w/yXwE+6lI2b73DH/G/C1
iGCNS81o1n/X5Zz5n47GBm7G7bmjrv/7e8MPplM08HiCeeA0p/6mPAUH86eC
TyrL3HoH4fayC+DwIREDG+bi9swGcEj7mg2/uZMxv+oNeJ8JcDEf8XkS5meD
ZZfXmN1sRovmgE08LBzDY3F/6WZw0IrSMR3D8PiM8+BMbWn09yl4fvYrcHHA
pt+Zbm6YX/kmPJ8dZkzS0cM8Qgew5c2ckex4bJcEgadpuNfmn0YrNoJvWudM
7bcfj8c6Aw4SxQ7+zEVzn4NfFp/PcVbg/RUwbsH9syri9lXF44vtwdGPR/iO
CnTF/DPBHksyvSZ34vGZG8AmiZy6Zw0TMP9J8NCWuX1dF+D+/Cfg58793QQH
0aLf4GZjf79v2nh+6ZBSmK+VL89x1sH7wQgE6zDPu6TYodlJYNmQdSceKOP9
4R0H750ZO75uD+WXgitnpCorteL1S3rAp/uVbrobRv0/WALr29FjbU24eH2s
6eCxE7Ypv87E6+euAaf6nn8YsoTyHwX7NMWcGWCK7eIasHnkmUV1TmjZD/Bv
q0tpv82xXpmWt+H9YYDTyL+rsJ7dfcEGQ+vNPIywnb8K/EpPsCB6AVokArcV
Xlu8bTTeT+l9cOA2kUPQPKr/LvCGe2NSVT/i+GGb34Hnf+rOQ3fK0DxvsO5l
m+/7n+P5hPHguudDOkUH0ZIDYOfGv2lh0WjFPfCH+4/Hm6rg8VlfwbnqPucy
76K5JmUwH69arxN0EbcXTAGnLyxPtzPG8SzmgzOWfQqLCkHL9oOPXxs/cK42
zhfMu+DMqCd2Q6bjfOLeDp7oMyKoph+2843Lof81NKzZxjj/iDzBM+PrE49F
4nwtjQbLxihqojpxPmTsA+9zcqgffArNvgN2uMY5Xa2H+/PawDXXVvWeHIjn
ExrelXPW793y162O5j938Jn9e+a9raD5LxKcdvS28/3NuD1rz91//x5YEKNR
g9tzS8HLQx+OunuH5r8WcFNex4+a8ZS/f8W/v7eedjWH5jfZBHDadVlNii/e
L+Yy8PASnRvb9bB/3LPA3yb4zt6Rhu38G+CUoUmspe00/30AW9/LHWPOw+2l
zHswHm4UeiXIcD5luIAtBm3kjd6K52OHg39cOXazbwK283aB/dIcDv+yQAuv
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
97xScM+4Sc7W4yh/C3i6XW7JxzY8nqT/13/rtWmbZqhR/gngrWW3fh38j/Iv
A39j2vQ+p/HGzQIr6pPfH6fnseAG+FkzT33SAPr9/8M/r9ruZHMRvxfImN+g
vz8J4vosRDNdwFe8Kl5PnEbfP8LBpxgX4q/vRfN3gfem+DVU+eH3E9FV8AL2
8tNKifg9RvoOfHj77wNTWPi9haHTCe87A0J0HxnR9x9nsOVE/3nXlOj750Lw
3MObo478xO9TwnSw/ZKnKtO20/evy+DVNkVj67diu0IGfvd1jSKyGM3S7IL6
W3N4bMBBS8w/BtwaaMPyv4wWzAd3eE6vTsjE44m3g3dJpAcSYrBddhF8uZZx
8upANPMN2IzRnLJfDbd3V/8u55wpHbXgjR+aPxLcZcHcfCWSvv+FgrcsDD7x
s9oM828Fv3r7yziBvi8zLoDjCyN03JZiO7seXO3qN1mQT9//+v6A+Sbm/qbT
R7BdOAJ8Ie7QrzffcH9JCPiPR7hCsAHbFZvARauPPd3Wi9+3WefASrVHZlmE
0vfvl+Bny/OecKfT92+ln7DefpG6mEvfx8XDwE/Zw+9FKuP5ZbPBGxMVg+rt
MA9zIzhOW6p1eQHa/TR4wCfHnUf18f7wn4FrJrmp+2vg/RD9Bf8OspnXJ4O+
f9t1w3p7jfncX0loxkzwtSl1g82fo9nrwW1/Y1yF5/H4vELwR17CgLA31P+P
wbwh+heX/sDrk/wCR961vPzNlr5/2vTAfL+r+6ru//o/AKx28L1I5xOauw4s
/7AxVS+Mvn8e6/n3/1fWENvxkL5/PgI33l11+64bff/s/re9huHhOfco/+Be
OWeGyq+453Q97v5g+d2r82qlaH4i+JRjZqr8CeU/At505FTV4v2U/wH43NLv
R06KKP8P8NH+dVkFxyi/xS85Z1+R35wzhpTf59e/f88VucWcRfkTwEXDpXEd
SmjJIfCz0EfPvfvj/VBUgb/mVtpojqH8neBd98rHcP/3/dfst5xTKXytU033
TzAVfMV1Y5/JdD7xCrDN+5OFln+o//PB97ubJrv7U/574KNhr20/rMd29w7w
fzeXf/4+hf7+YdAfeP/3KL8l24oWTQZ3af49FjAXLY0F/+FbOGXS/oz94FkX
bOQDk+j7dzn4lPPbeKsUqv8vYOn32TOuBaOFA/7CemKMwZRdc7DeJR7gjaXf
L+20pfqPAgdUzlpamYxm7QUf0pz4xskNzb0N3hngE3R9I1ogBxs2nB/8lsan
2IDRxjFIvLrb2hctmwj2Cds+fBIHzYwEW3pfGRIegHbPBl9NP3+voB7HI/8W
2P7awPFHrqNFn8A9BpMe9P8P759Ur08bR0fFIlVNB82YAG78WrVlqhWavRS8
wNt8n24L5c8Ev/rlc3ldJ+W/DmYdrOmOLaf6bwbbuiS4Rh+h/u+n1MaZwX/V
OO40ff8fD77toLlwRin1/2KwWWl53x4m1X/GP4eNCy43p/mvBMw+8+J9swfV
fxNY7UyP4+dk+v6vrdzGGZHT8PbONJr/nMB5HoN2cjfT/LcA/G7M2RdiU0vM
nwbu6VNn0nyS8heDLfn5oTX09xEMGdjz+tfd/espv4ZKG0eR4V8R9oLqfzS4
v++NARnULgwDiwrH+n2WUf1vA285/vbbrA80/xeBC6quOfz3hOr/NXilBrNh
eDyNf7W+bZz5wy6fM6X5SeAInrX7njBHj/LPBY+bY6quPojybwFvXjSkjd+P
8ovBZ6dlztSZRfnrwEWseZYdXpRfRRX6N3mZRJX+HkM0HKz+Y/n9qAE0/oPB
Y034lRcMaPxvAg8/dvvhSjsa/2fBDwx3ls4LRPNegCU3J648e4n+/qOPWhsn
2yjHYz7NJ5KhYGmV3/gtR2j+mwWuOdZ180kN/f2PACzLyQ3pR38PxD0F1hKp
l3QdpPxPwbqzlnzp2kf5/4CtNr9b63qc8tuqt3E2tsT/9zWH8s8ACxdcPlo5
k/Ing4fHmFdGRVP+E2DLAfsf5DZS/lrw3oIIyfpqyt8LLpg/tMKjjfLb/NfG
Saxr4m/vovxcsM+p7ykWnZR/LXhEj/FnpxFYT8IC8Myr2yscgnB9IXkI7qiJ
aVxZilb8BN9cEdYyPhXNstKAvKw1+6+q2mB+P3DRgIh4EQstWA1O1X11buYN
tPgwuDbE0VHXEv/eQ1YNztmT12pahu3M72C70Q7z+nhjuztLs41z8G3x7zpr
bOdPA088Fib+wEGLVoLVf9atuu+Nlh4Ev0883BOdi2ZUga+5Z+jct0Wzv4GN
gxaxec1onqlWG2dJo8rEyz/QQi+wfEyf4ZeH4vklceCGnqnJVY5oRR74t3yP
ansQmlUBbmk2SaqagOYqwEoFP1vv5KMFA7Xh+m9WfIwNw/WbeBJ4l0vjMaMP
lD8GbDPDbu/sKsqfCz7iHMZYYkj5y8CmSdWqfTXQ/M/g8uPaxW9N0CIjHcj/
ZYpO9lfKzwGvveyoO30JtjOiwOlZXbJkEZqdA9ZP7Gsf1J/+/kXyr/2E5/nK
cbg+FbaC7f9MTnGgv7eR6Pdr42y4sbBrbTBa4QYW5BfVXregv3+JALtPn6PG
XY/m7gbPfaDmsdOOfv+7CfYQBMmzGbT+/78W7jueyveNA/ipUFQipSFFiKyM
iiI5skc2GUkSITs0hBRFKUpDKKWBrKjIijSESiq+tEShOpUG2f0+Pdfvz/fr
HM65zv0897qu++mB+exnSFt/pPm/oACHLXfN98LgPlr/a8Ldp83q6vfS+t8D
zlZX+B4jTPs/iXDgEtUA1h7a/ymD51+5smKoj/Z/PsDpizLn3VhD+Z8Zghz2
ttDwxtf8tP+zCv4UqOfg0Mh8nusW2NQqM+4Rh/IfCbBr2yqL0UDa/y6Bdael
70zxovzHezjyqKMoXwPtf02bifvTwFVrTIPyHyvhVKltg/xhlP9yhe9oP5WP
T6X9r3h4vLAhanCA2R/ruAGblKwplWdT/uMdnB/coi4hSPkPXiEO2+v59eVG
35n3B6jCA1H7Z/Ur0f7/RnhiglPjrTu0/38QfvdGcu1/txmzimCn956JExfS
/v9reMOHzkxRyo+58sxC/9O/dtmRdtr/U4I/h7UPVYhQ/I6w57n9SVHzKf4D
8Nvs3S/KTlH+pwAWq+KSDqZ8mkUbzG01Mj32Ke1/T5rNYc/pPdNuHkHxK8D2
YQ9m59jS/p89HJ/7ifXgKe3/RcP5+4p53P/S/l8ubCaa8TN6IuU/WuAtwyee
+1hT/oclzGFbyC179ySHcZMs/CrvmZbaZiZ/wrKFJbUczLJfUfyR8NbIvw4s
A8r/ZMPfMic1DL+g/M9z2Nq7t+aEIuV/x+DCseCVgR6U/5Weg/vZXSI2rIKx
mBV84z+Z9kwhJt9rEf7v9dg/VtJ1TD436gosEy8wwhfK1CcUNsH5kqsFaoKZ
93cMwydeFF5WFddg4peay2HHnXN5GrSEqdfRNod152coC12l+p9d8M1HIbyz
JBlnZMI3nn3Q8TpH+e/HsPB2pVfR0szfswbhs4u8Bbljmc9TWjyPw+aaISDn
MoGxqykcruyiKhtN9Q+hsFdko3oDL/P9qzPgJbuiK3XeMP+vrx62fV9q7h7B
fF+xfvizULTa42TmdYtF8zls5aJtsspUTxFlBCe6Ta1d1kL572D4uSXvI4FP
FH86vHbX8PjYdub3FqiDd9+wWVXcTPnvn3Bg6YOHOrep/mGBCIdtpzJaoKPC
5NMy9OFJrStry60o/gBYubznQRUPY1YqzLPF95fQYar/uA+PsZ5ncilQ/cd3
2MCktL8knfn8xHkLOGwBPZ57C64w/796HZzsW1S2eQfjPl/YSrmm2DyX8n9n
YHWPI8YzTlL+7y58M1ev34C+bxQHrqoXurixi3GhsCiHfdhzrklEE+X/tOG3
r1xO9k6g+i8f+KxCje7p6VT/dRKOY7e5bK5kHHAH5sSN6pb8ZZzxCX4dckLn
YjbFL7QQv2/IS7OKUYpfC664uI/Ps4n5/ZW2wbZP5fYJz2Psehxe4rJ/+s0F
TPslVsAe1peEt8gyru6GL96IKAvrY97fJ7CIw3aR8Dx55jnTfmIasE3r2bp9
KlT/shWuHbauT+mi9j8Gpyfmm4o+Z75P4W24LVBjJGWY6t+6YB2jCpvpR6j9
+cU47MHtkUmqBRS/OvzjxeXyzZsofjfYm0stROM8xX8EtgjkcvB/S/HfguWj
D0/9cIjifw+fG220/i5L9R9TxTnsvbZ/BbilGbuugA9+2SbPc5fafxPcOfu+
sqoa3f9xsLPgoJOKHOO+YvjY+mEnjTyq/3gLT1iX/SNCj7HFlMUcds6BeUeV
bSj/qwKHT+z2DW+g9neGuZc/4i8fpfaPhT35V3z6zE/tfx3+3L9pQMGOsfYr
2Cvu57laijeAW4LDVp2XIVq0mu7/ZfBAj1aRvyzF7wCzQ/aWNy+i+A/8898q
Yd9Mij8f/riuKVCVrh/X/+BHShdLrr2g+CdK4vqsfZgjm0Lxy8MegtPnJC+k
+O3g2gUvo/exKf59cKDWGEuzluK/BseL1cjvuco46iXsftph+ewrVP/zF55Q
4CxgmkH1P0ul0F+XntmUspPa3wYOH3KQLHGn9o+ALzjvrLxgSvFnwf5BpkL1
QdT+zXBECA+v3TrGTaPwgbk3VYp6qf5HegnGV940PgFuit8S7rTV/SKpT/U/
e2D+mzEtkW2U/74MZxko1ZUdpfqHp/BU7pFbpdU0/g3BdUpfxOdPpfy3pDTG
v/cndOsmU/57PWzllu8TVErj/044Kcv293mqhyi8CIcXbZQ21KLxvxE+/t3p
uIQjY4E/MM8sdmz2DMba4jIc9n5Bz1rPHzT/MYFXd92/+q2Z5j8hsHBhr30k
zTeazsMaDj3bz9H3YdXDN+R09JXHqf7jN3zN7J3W2QbK/y9civiDDO29H1D8
hrB7r5anpgrFHwRPlzglFLOa8v9pcPrS+kdNyhT/Q3hHuqHGG3OK/wfMmZbG
K0zfN0pElsM+KX1vVfkZGv/14AiX9rkm9Pt0+MP5+fY64v40/p+FVxducrhN
8Wjfg3u78vwDhin+b/Dl/JpnCTw0/5krx2H/1lsh0ZNN8evAO5bUCoRQfp7l
C+cccolNoXy/0ul/rydsmPSH5lOuNTAfj5sZtxqN/19gjWSrPbc7GVfPlsf9
OvCtXn8N1X+shf2fxjmapjMW84b1BmNtp4sztkiGQwoG1qSLUv9fBbc0vx+f
pk33fy9sFHKpLovqOzpmKqA/yb3Hlfn/+o818AGb20Kvk6n+wxPea3rkY4Yv
jX9J8FtBiWfdYVT/VQ73vO42yllH9S8f4eiqqaK52lT/IaDIYRe7DI3F69H8
ZzVcrbj54lAjY1d32PiaVIn5Eqr/OwqfaNYRvKlP9S+l8JoVc8oTdRj3dcKz
FqlfjeCj+r/pyzA/6t4jeTCJ2l8N5tm9Pn97EeV/N8MLQ/qTsmro+j8MW2+q
dmDL0fV/E45kRxjH0PUi0AHf0aqUcE+g9udTQn/0puTaEqrHCFgOH3rWZFTd
y8zfM1zgJEG/t1MUqP77EOzf90LEpZnqn4phba/X/NbalP97Az+++9lAJYnm
/5OV0d5misN/wmj+qwwfVd+Qc9qS8t9O8JfRCc27Byn/HQOHC7knqCfQ/L8Q
Vnv+tfCNBuW/2+EJLU/2plC+PYpLBfeT+KTtSROo/kMRVlqhrtt5i/n8jg1w
/6+eGeZGVP+xH1555plKQhTVv+TBk8eHQ2/HUPyt8LxRE5118VT/MkGVwzYv
3x96X5Hil4PTzLzVhV9Q/tMOPjxD/IFEIsUfBXNnVHh9yaX4c+C+cPnyS/VU
//YCzh1ce8FUhnH1ODzzYGzjagOq/5dZjv7mw40RcUvm9xWzXv5vPeeXq8tH
+d+9cOUls8a0Zub9UVfhGLvZhk2RjAufwU2Wpr3X6ffvGIHTlG+qlgfR+m/J
CsS/Rk6vfDvFbwG/tFUQ8/t//c9uOGenS0AP/b4Zl+Ci+GMP7jVR/vcJvLxt
9SR2FsU/BGuNG4eFv6f4JVaiP/GXP+7MovyvGfyqpqLs52pq/zD4yMT0uMoP
FP8FWC5F4UIo5Zf7GmCdBW9nPQ9nLDYAmy4xbt9xhOr/xNQwv4o13es9g9rf
GF5srVSosZzafwfc0/3C6Sy54xxsXvqj9Mcotf8jOG5Iq6aG6um0f8HTg178
eZFD/Z+oOoe9UyHroP9q6v8NYLXNwe1Or6j/C4R7fl2rlaDzCqw0uG5XwrT3
VE+h9AC+NNad3/qE1n99MCvntvMeM7r/56/C9XHKx/oNrUerdeGNcec1DKie
rM8PTohLbJejek2xFHham5zc+wQ6/1ALX2elnQ3hZRz1FVaOUHul/Y3u/zmr
MZ+RX+VydRHV/7FhsWv6y3VGaPzbDrO+yWzI30zj3ym4yueKX1gYrX+r4cMt
eeq8VK+W8Rle63PWZ2UjrX9naXDYVxwVn3jtof5vLSzZH3b1XCjV/3nBH1Lb
H4lvovXfCbhiTDH0aT31/5Xw0OPqEyJB1P/3wF+dtUqfxlH/L6iJ9aLaSt0s
P+r/NWG+3K2OKlbU/3vAPgV5RUpC1P8nwtnmxm663FT/Vwb/GS1y8KL5R8cH
+JDn9iB/H5r/zViD+eu0Q/Yyx2n+twp+/O6b1CDNvwK2wN3hP+S2JtD6JwFe
dunujFVWNP8pgS+mzQ6UT2bM6oR9lw76ZdvS/GeaFtq3KJF/E823XVfCQX4B
G2rp/EmiK/w1+a5Ifymtf+LhT1rNy1Yq0frnBnzpbvELSQWa/72DK9QcBQMF
aP3DuxbzGXeOaeREmv+qwh1Lx59IKFL8G+FJqcX5C6neuuMgfGlj+2vPYoq/
CFa5v+5xyzyK/zUsofBWQO7/4x+PNsaPpR5HfY1o/a8ETwn4c11nBa3/HWH+
ewv2Hqb9FVYM7GV80eAW1acrFcBbOhfYD5bS+N8Gp6+Wce9zp+t/EpvDbr4+
L2C+Gl3/CvBQa0ZQlyRd//aw1oEuj5E2uv6j4dRnT+L2/qTrPxcWlJ22cC9d
f1Et8M2OzQWXy2j+w9LB+8smvXezpvmPLHzI16L9jAmNf7awZnnKsSOmdP9H
whFFPzN/VzD7rQHZsF98gNkdGzr/9hyemGJ+b6iS9v/G4Dtq+83eJtP+n8w6
Dvu03e6qt1+Zv1eygtWkeVR12mn/Mxx+ynfXMKWX9j+vwAZDSa2aQpT/boID
XDRelolQ/c8w3MDH99d1GtW/SOly2I3Kzv3SkbT/Zw4H6Ne91p1B+f9d8Ex1
6YbnVF9SmAmb78y6nq1G9R+P4c2FLe90N1H98yB8bH70SikTqn9YrIf1pnFX
ma0p5f9N4cOpCgGfP1L9XyisLGCX7bWQ6h8y4Kxjd2N1ZSj/3wD7efFIRH6g
/H8/7Got+V/eTebzXBfpc9jjdbXNa4Ko/sUILvG32OY9heq/guEjjuurOouo
/iMdPpr8InOM9g/F6uDe2WEHV7nR+befsP2kDz2uvNT/LzDAeHo5+eeXbzT+
6cMKJ3W8JHio/ikAblXcrjMwTvGnwge0+8adwmn/8z48M+1Oq+Z35vWA73B8
4J92Cw7Vf88zRPvp9pROp/qUpnXwMk9P5b2LaLw7A9+T3/9tWSWN93dhqYei
evUBNN5z4I++la7H51K8wkYcNu/SqluVwlTvpg0LZX6p66P/J+YDf9lxVrRX
i+Y7J+EoC+2CimiK9w58OS1muzvNjwo/wUZ1Qklfqf61Q8gY64HZbWtuTaXr
XQvm5+6dLzaTrvdtxv/2v9MCY7Rov+84rBj9x6eWxo+MCpj1uapKmc43NHXD
rdWvz0Zfpf5e0ATzST2ZP5E7aL6rAS/lUeNn0XkD161wz9U9eWkFdL8fgzW0
O/TtdKm/vw0HB+92i7lL/V0X3N6X/+RUDO338Juif2Qpi9oNU3+vDocf26iS
IEX3uxvs0d7EPf6ExrsjcAWXtWUQzcc7bsGO8wx6uPVovv8e7hq1EUo1pP5u
qhmH/S5UbWvqVurvVsBzRAzrv0XRfH8TLMaOKXSQYt7fFAfrT3w2claX1rs3
YOP9Bz+P6DFWegs/66keyWym8W7KevS/VoeX/n8/NFEFftLtyT13FsXvDHtL
Hjg2VYLGu1g40C4w8AidbxS7DkeYzPBp3EX93Ss4ZHZb1TFLip/bHO258/Uh
dRr/CpfBGqZxr5Rof7XDAX5jbb2iOJPiPwBHKnnMGVhB8efD1/hE/YcLKP7/
4Fa2m6uxBq33J1pw2AO7HdNDWmi9Iw/LSb/dFiVK8dvDYcF7Jwj4Ufz74OEY
m2z/xbTevwYna+pOfyxC491LWPCqi00u7bdU/4WfHRWXv7OR2n+pJfr/n+Mp
pjQ+i9nAOdMnbviRTONdBKwp+3x4khuN91mw8f2/l6eXU/zN8Lb8rSPfSyj+
UfirdneoZyzFL23FYa/Pq3FUzKH1niVs3+N8acYrin8PbMs5sO52GbX/Zfjb
ge8xvrQ+bHoKs7gC6kTNab97GM59cEf2qyfNdySt4QblrnZ7av/18ILO9RN5
aHxN3AmbTvO+70j7T9UX4UjxHuHAjdT+jfCDNTYRYjo03/kDJ90eeCXMS9e/
uA2H3ekcrWj2kNrfBLZce4xLd5zOe4TAvhUGsmVzKf7zsOqrYXGJEcp31MMm
Y3qlxQoU/2/4+vhvtyEaTwMW2nLYq9/F2NS+pfHeED563M6Qf5Du/yB4yC3t
imEr3f/p/7xhitZMul+UHsL+vEcEFmhQ/D/gi4Kd7Vm0fk8UscP9ucp8314j
uv71YOk3L9v7yX3+8JiekYcfnQ8ROws7a1rJXzOk+O/BC8YbLumspPb/Bndv
j9XlJRfOteewz/MKrW2ZR/HrwN9SBL70/qH4fWEbjqBe5kSK/zS8+WHjki88
1P41cBGndUPvbGr/LzCP9JlZz+n3b5q9AfO3ChWJqkhqf234S8iw6dBzit8b
LhcX8JT5RfEnw5Mrlgb7tlP8VXC7yDbhLzLU/r1wpEyF6oksuv5nOmD+otM1
YDGF9nvXwHfHWn0yXtN5N0/47Zu8j9l6tN+bBD/+pNqUZ8K4sBwuOXU7dy+d
T+74CCf8unDs3C067ybgyGFvePC5zl+Oznuuho951F60Ok3n/dxhsS3XDPKi
6LzfUXjzZJbmyQLm75tK4S3t14M/19B5zy747pfU7yIutN893Qn9Q3rM9f3F
tN+tBl/UPLQh/yDjxM1wy8Aeg4FByncchreYHFdY9YvOe96Ed/zXzdNuQ+c9
O+Boy7w2p3u0383nzGGLTJSTaiqnfM9yWLI2a8+kn5TvcIHr63qLlk1g9tM7
DsGm2llPzzQwFiiG0+3Y+YbqlO95A/ePG3d33qTzrpM3on/9XnNJZIjOuyrD
E+z00mc5UPxOsM0U3lDhwxR/LNzcOTP55D6KvxC+L+6zh+sOxd8OF1uE/93U
TvkeLhfMz/UTHBsWUvyK8Ikgqcpgaq++DfAbd/sl89ZQ/PvhCc83FixZSvHn
way8tuLiVIq/Fb5ZtjA0Np7in7AJ8wM7qX058hS/HJyp8WZ0WT+d97SD86XY
rX88aL83Cp7r3VQoPUrrnRw4JWNX4wlN6v9fwOfE5BVP76b1zjgs1y3PPphL
652lrhjP6rYvNKD9fSVr+Gh5gZrlVlrv7IUj7J2Tv2XRfvdVOFTu5HehKtrv
fga3pNn3yL2k/e4RuLjtN1fXcVrvLNmM7xM7seeeI13/FvAal2c/alMZR+2G
x1WHHrrSef3CS7DtXz/pd32MO57APbcyuLZ9YywwBPPxhVdp6tD1L+GG78/L
LfPuM+X7zGCTmW2Z3h0Ufxj8Wt1w8cyptN9/ARZ4qSI1x5nib4Sd1WePjkVQ
vmsAHtmm8vcB5S9dxbZgfbncu/zPfsaJxrBDZ5WyzDHG1TvgxB8LuPwDKd95
Du5pl1R5Ukr5zkfwtIPzYuNPUfy//v19gNbkZMpHRIm6c9hNX9tfrpSi+A3g
Cwlh46rzKf5AuMv2TNhDZ4o/DV6/8LLirfOU73vw7/UzdUaXV1H8ffBLneZF
zxwo3zF/K4e9saCjPLeT8hv+8MykXSGWdN5aKQUejf5PdPcHOr89xwPrw/JQ
9bYxup7Z8PwzFRE3FtP1vB0WjY0Urayh/O0p+Mfa9y0dL6k/q4bbdZaajIvQ
9fwZTgjWeVmfS+d3Z3ly2J9Vksuc6PkKAmvhcv6aonV8TL5X2ws+/3RU/40D
44ATsHiUwdGL+owzKuGZ6XWuQdl0fr0H1mu5vmpbBGPWzG0c9tY7ewRmnWas
pAmfOr4nTfYVc/7e1QN+u+iQShMX48REeDjs5FVBN8bVZf98L/r2+3OM+z7A
z/Tzc8UXM+fvxWZ4of/hlfgvkZfO76+CH6dWyc6/wLw/agt8Z/sepZ4oOr+f
AP8Yr7RM6qHz+yXwVB/u2kNTmOcPCHTClqZug+e5GGtP88Z6ZPDq1BI1en7B
Srg0VD01jEPPL3CFBywO/tWuZdwUD//kLbuTXcKYdRP20zqfFidLz294B6dr
TsjZ2cDYldcH8zFr+fNCrYwTVWGehvm1KkmMqzfCyXpxEUWBjPsOwpfl1SYf
1ddh4i+CUy1ypl4xZp6PYPEa1tEvucUbRs+v4NnOYSv5HVIs3s24UAn2PsLT
+8iJef5EhyMcJz2Wd2kzY4EYuHz5Qqfg2Yy1C+DbVWNjj4Xo+RVt8LFPT1La
u+j5FZN88fv9er388W7GTQrwprXrn8pWM9+PtQH2O/X6usMNxkrRsKVKxLbH
Lsz3cc2F2zUehCa9o+d3tMB73L/3ft/BPD+jmuXHYcuuGI/PPMr8/z5Z+N37
2iH+ccZitnBRoe1Rfx3m/RaRcOLXk9+rApnXo7JhaTkh5x99jAufw08GFfJd
ljDv7xiDXZKc53mNUPwy/ri+nmmXPphM8VvBfYvXPeEYUvzhcGjvb48Zg8z3
zbgCz7F2UdlcRc/vaIJvFXPfaKbvyxqBRd5H78qg538oSQVw2E6zCl884WM+
39UctnErXRe9mnHiLnh9/yzpXaYGTPyZ8DJfrpoH3wyZ+B/DC1clP/5iYsTE
Pwj716ptvTvXmIl/cSCHLTz14tyPOczrUaawdvGmEmX6+8JQ+JNK51Aoi3l/
Rwa8adDK+tU25v0CDXB1bH2B0S/G2v3whAUtmuw/zPsDFgVhPh7PrtTvMWXi
N4KP7I75LXubcVMw/Oez5+kTaWbaJ8pyKw/AWSuPZtSUm2n/D2JQqfg=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6199008*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6199008*^9, 3.8395296*^9}, {0, 59.466846532287775`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.839582966821591*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"2e3f8352-2a25-4e5c-ab9c-83a04d1f8c8b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Ethereum", "Subsection",
 CellChangeTimes->{{3.8395832148728485`*^9, 
  3.8395832253108325`*^9}},ExpressionUUID->"64ec4c83-d292-4697-9260-\
01e2942a3fda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DataEth", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "ResourceFunction", "[", 
      "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<ETH\>\"", "]"}], "//", 
    "Normal"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8396658547391214`*^9, 3.839665892835978*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5bc6b03d-1b30-4107-b8d0-a2e5f856663e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DatumiEth", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DataEth", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "DataEth", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.839665924209148*^9, 3.839665939223985*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"66f62e9f-dc0b-4d4c-a1b2-cce64d590f5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VrednostiEth", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DataEth", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "DataEth", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8396660040247374`*^9, 3.8396660197742486`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"bac6d0a1-3c1c-44c4-8d92-f32cc57c92b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VrednostiEthNormirane", " ", "=", " ", 
   RowBox[{"VrednostiEth", "/", 
    RowBox[{"VrednostiEth", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.839666062608405*^9, 3.839666078311413*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"193d060c-2d77-42fa-ad6b-0eeb4dadbe07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeries", "[", 
  RowBox[{"VrednostiEthNormirane", ",", 
   RowBox[{"{", "DatumiEth", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8396661071926765`*^9, 3.8396661135114307`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"1d37883e-d1d4-44c5-ba5b-3a5e019b1c7a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAD/xncM4t60GojVOPxv/vP1ZvKoPE
M+tBvY7mxNCR1z9fd1/zOjrrQWCdmjiE0sY/VpaNwENA60FETIPQ7wvUP9ag
MkAuRutBIPnSyayo1T8YQEodmUzrQblP5ipMQ/k/R/ZaV5ZS60GimuisBu8P
QDhB3u4TWetB/geDPeaJBUCzd9g4c1/rQR+3yx088RNAG8XL32Rl60FocjS5
/aAPQEWnMeTWa+tBww+l0goJD0BdoJBF23HrQe2UvJ+SOhNA/oRmWcF360EY
4IzsyKIOQGH+rsonfutBDOUn6TyNB0CyjvCYIITrQbzD5G8PYQxAxbOkxJmK
60EPJ2VUcvcRQGHEz6L0kOtB7umEJYRSMkDr6/Pd4ZbrQR/l7kHpZ0FAN6iK
dk+d60FNQuWkSdhgQHB7GmxPo+tBAIkW64J4VEBr4xy/z6nrQZ0OVsWWLWBA
8DaWxDGw60FrDzXX5OBbQGKhCCcmtutB9Ekt8bwqXECWoO3mmrzrQUvfugWK
fXJAt7bLA6LC60H4nYNqd+h3QGK4INOKyOtBGzixqptTc0DPTuj/887rQR82
sM4FUGNAKfyoie/U60FwM15nQn5uQEU+3HBr2+tBw61qDBgfZEDra4YKyeHr
QW/UFOSTymJAfrApAbnn60FWlq2sINZRQNOJP1Up7utB8ApHvVeYUkAWek4G
LPTrQYfj1Et4akZA4lXUaRD660HCjQ8btttIQHDGzCp1AOxBnY1iLmxCQ0Ds
Tb5IbAbsQQuxiLDaEkhAKmoixOMM7EExKJWDC+dOQFWdf5ztEuxBlP5nLOpv
WEAKvFMn2RjsQQouD6dh4lpAgW+aD0Uf7EF0T3i70GJTQOU52lRDJexBB+a9
uuZmUkALmYz3wSvsQY5U5ClLOVBAu+O1TCIy7EGvS+MyU4hKQFhF2P4UOOxB
pJ+f+0kmSUC3O20OiD7sQS+mh98A/FdAA0n7eo1E7EF1bvqiEs9IQNlBAJp0
SuxBmL9jWddRU0Bxz3cW3FDsQel5rjJDIFZA9nPo79VW7EFMSws9nKFVQD2t
yyZQXexBt2vW+evDYUAO0iUQrGPsQcCviiB0O2BAzA15Vppp7EEMsnPaaEti
QEzePvoIcOxB4LvvEdGIakC6xf36CXbsQX425YfsaX5A6kEvWYt87EGAZbtB
9laAQF6psMLXfuxB9PvPtjl1gkCFEr7C
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$173544#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6478944*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3647894400, 3839616000}, {0., 
                590.6531807183042}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"03 Sep 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2216", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAD/xncM4t60GojVOPxv/vP1ZvKoPE
M+tBvY7mxNCR1z9fd1/zOjrrQWCdmjiE0sY/VpaNwENA60FETIPQ7wvUP9ag
MkAuRutBIPnSyayo1T8YQEodmUzrQblP5ipMQ/k/R/ZaV5ZS60GimuisBu8P
QDhB3u4TWetB/geDPeaJBUCzd9g4c1/rQR+3yx088RNAG8XL32Rl60FocjS5
/aAPQEWnMeTWa+tBww+l0goJD0BdoJBF23HrQe2UvJ+SOhNA/oRmWcF360EY
4IzsyKIOQGH+rsonfutBDOUn6TyNB0CyjvCYIITrQbzD5G8PYQxAxbOkxJmK
60EPJ2VUcvcRQGHEz6L0kOtB7umEJYRSMkDr6/Pd4ZbrQR/l7kHpZ0FAN6iK
dk+d60FNQuWkSdhgQHB7GmxPo+tBAIkW64J4VEBr4xy/z6nrQZ0OVsWWLWBA
8DaWxDGw60FrDzXX5OBbQGKhCCcmtutB9Ekt8bwqXECWoO3mmrzrQUvfugWK
fXJAt7bLA6LC60H4nYNqd+h3QGK4INOKyOtBGzixqptTc0DPTuj/887rQR82
sM4FUGNAKfyoie/U60FwM15nQn5uQEU+3HBr2+tBw61qDBgfZEDra4YKyeHr
QW/UFOSTymJAfrApAbnn60FWlq2sINZRQNOJP1Up7utB8ApHvVeYUkAWek4G
LPTrQYfj1Et4akZA4lXUaRD660HCjQ8btttIQHDGzCp1AOxBnY1iLmxCQ0Ds
Tb5IbAbsQQuxiLDaEkhAKmoixOMM7EExKJWDC+dOQFWdf5ztEuxBlP5nLOpv
WEAKvFMn2RjsQQouD6dh4lpAgW+aD0Uf7EF0T3i70GJTQOU52lRDJexBB+a9
uuZmUkALmYz3wSvsQY5U5ClLOVBAu+O1TCIy7EGvS+MyU4hKQFhF2P4UOOxB
pJ+f+0kmSUC3O20OiD7sQS+mh98A/FdAA0n7eo1E7EF1bvqiEs9IQNlBAJp0
SuxBmL9jWddRU0Bxz3cW3FDsQel5rjJDIFZA9nPo79VW7EFMSws9nKFVQD2t
yyZQXexBt2vW+evDYUAO0iUQrGPsQcCviiB0O2BAzA15Vppp7EEMsnPaaEti
QEzePvoIcOxB4LvvEdGIakC6xf36CXbsQX425YfsaX5A6kEvWYt87EGAZbtB
9laAQF6psMLXfuxB9PvPtjl1gkCFEr7C
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$173544#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6478944*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6478944*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3647894400, 3839616000}, {0., 
                590.6531807183042}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"07 Aug 2015\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"03 Sep 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2216", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1:eJw8WgVUVUG7pTsuIRKKpGKAhInK2dLNBS516U5pBCSkRcAApBGVUEJCVCxQ
FINSpJUQUDEoUVBMePf/31uPtVizzpyZOXO+2d/+9r7rSLoEmLkz0NHR0dP+
K9no/u9vkWCu4dtr59ZLiBvLcXntekmceic/s8n2JTHfYH3M5soroii+pM5L
bIzYm3fpNZPINJF7X3VLMa315YxS+BL7jlDd77ZhSOAtEbH4O6ymY5RoEBlJ
fyz8mtD0YArYQxonJhY6ezk+TxKyxJkybbFJIlb50Nql4QliaaDqlYLqBPGA
X/2j7JExQn3vCvOw2QixL4P38/NnI8ThcaV3+4+PEIqDn4Vc40cJ2+WdLCpG
o8SS250KhL0hpJhXIrJtJwj7FA8Bt10ThNnSm/LM9+PEP3//VKFd48T1nnQ+
cb9x4vhwn3bLpzeExJK+8q2ZcYInpcaMq32MKBzso4jVjxHrPCjoGRklZm08
7FhmRogD1pH2V68NEUZNqQxqf4aJv7bX7rAXDxLLjXddt+8dIHxsDZ/deT5I
DD74y1v5dYDwvuzU9k1hgIjK12FJutlP6HevCss7DhD9qVszIqoHiet3njzu
2ztIrG9oDh/vHSDevB2W0rk4QMTte2ZY1d5HHLcRttVde0lkE7s4NGX7CMcR
y7e25S+Jfkd+V/aZTmJGncS68cQLgqyb4JnH3Uu84/AtvfOmh2jx5VfbZNFD
rHYvG96/20Oc2+Z6snjsBaF8SGHuE8tzQvzbQ+u/HC+I67Mx642luwl592Ou
rDe7iWunLD620/o5RZkCS/51E1ECdGXnTZ8T9l8t+pg/dRNGC7/menm6idfN
Gu1PZNuJjsIjb25+7SD2TH0xr3nSTsi4p7V+0+gg5r4rO378+IwoPmA35nPu
KWH6br5mVuAxMUKJDam98phgX1u6cmpPJ7HtVUMz52w7sWnDYPQ35k7CyP2e
/1xQNzF0v81P7+1LQvTa3qVegQEijfri+BeZYUJa8u6uxtFRwsX8ifkH9lfE
8PNrB5K3DhJdnLcvGjm+Ii7Mvy6Zfz1EOL010DnkPkxY0EvWlz4cIGIu+t48
WjtAsJoW64s5DxLsd4QKcvwGibQ6hs2lt4eJGa9/Txj4h4lajfLKw1mDRPdM
y8q8Th/BG6V79QNtXsL+44FhEwNE65SllkTyAKEa+Jrz3dwAcXgTR6Rf8CBR
13Nze5DWMMFZ+aakc2GI4KgTbgrjHSJOR691p1IHCeEQFnX1k0NEWMsO38M2
Q8TQlMDF12ODxNHt0dzO7QPEsoaz1/0v/QQiBUIee9NwpOQ1P8A+QFTJEEq8
MoOEyb5/TiO6A8Rib5uWk9wAwbn3VK2J8gBh/knN8tz3PuKYwfu6fw/6iLs7
pFQn3fqJqRypXOJzP7G5PeAUu34/sXvL2btdd/sIuJhu//a7j5DqNXKc1+sj
tLW8qL88+omd1P7pzeGDxHHeD8UKp4eI+xI+u3rWBokXquvAPj9EPFm7nfXJ
e5jgp5vU2vp2iNA7K/3t+a1BonJn6fAutUFCU8Qe338MEPqdhYp73gwQuWPU
4hddA4TM4ousq0v9xA/NmcORPf1E4/q/ZuIL/cRl5m5bIeEB4uvOpr+Ld/sJ
g6Smb9Qn/cT14KXPexL6iSW++bl/WwYI5S//3s1xDxIsK0NbYk8NEkvcaRPr
3g0SHAaUwarSQcIqVzpLNXCI6Ewrp1NjHyIOvM2aef5lkDj51GXg1dIgMVak
vpjwYJAoI39MUW4fIvL76kXCaO36N8pV9/iGCfpw4Y82Ca+IO2c2nLtoNUJM
aOTWq/1+TUgqxLe9ODpKnLth1H313SiR7rq9DzvGiF907XG3Kt4Q9x0agtnC
J4nOFqlBg6oJ4vUbr6aWuilixmrfPOOXKaLmkvbWo5Qp4qqAQ3Hikw/Ed6NF
hfRbn4jmH9m3G17PEdvWmbn/054h2A/mkI9nzRJ8q4YCktvmiXyRk9LL3XNE
y4EnDLH754h7ahf21JTMEA+Xylden/hMmK4cbozcOkeI1E95XVKcJ645ITT8
0TwRKqqUzGcyT3j/VIyvOzxPqASXNzFt+Ep0TdPZ2lG/EWZxUsUHrVeIdNGE
+anCX0STcsEvFyo9Li1l7WFhoANbkbfWznVrhHTV31sktVVi+sNI8cfkVSJw
B886mU8/ifuJHaY59d+JnfTYy+z2i3gidb7/jPUf4qmu0cx5nl9EAuk5B9fY
b2Jpj0aoy246XGb1aKHfRIfSVx6NXmv04A0xFJYqoQfPUPTskBA9JqNLes3T
GZCoOfrxVjUD3HqZv9ToMUC2g3v5iBALmAN2Ton4s+FcvaG1Ux8HZG6Zm3Sx
8iD77txl+4e8IPUQ1Q/9SHCJmHa2zOREjunGXys+XIhrZX/Jup0PflI7hf+Y
kPDxRciD5394sS3KmEfkhAAKuO65L78VRFdt6uHpFT78utB/rOsJPw74MzBI
8PFjYYE6NfybF4xXmk+otvDC8sxy3awrD4LcN3psaOeG/4s5gQRxPrjaJhH9
miQk6fu5lc7wYUules6mPST8ZF3N+kzHC7FpoRS/Gl7UtzbSKg0PMre9Z9s5
SMKe1OscHb0kYPiihwnBh49V5tfsQ0mwv/P+Y9AACbGZjLnpzSS8OP1eqqmN
hACJ6TlfERJuMny3TtjEg8c1SXO7h3iQ3/hd3YqXG4YaI1b1XFxQ2Vl41dKL
A06yJlJsneyouZMf+eErG1gWuN9pHGNG9fNiPeG9rAja/yLUfhcbrk8ZTpd1
sCL9SYta5is2HHzg0+c7zoHzkya3KwU4cLn1Z4XvZnbcYPh7wp12Dp55B6Me
ObNC+7uTrmoWC5TcbGNIi6x4vzMpXns9K+zozNZYnzNjVfosc581M9JIOVnf
3Fgg/9r52nIjEx6l1rFbJDNDsjbUrDSAHW3Z+7sqT7AjKf3wSx8KN3ycjA6w
THBAZde5rw+2caLIUf+ooy0XDN4l3t7yiwM6L6HayUHr/yYr8sqeE1avNx9h
HuSAqE3Qd1kmTjj2/PYRec0F1pP1FzNYuBHw3Lh2oxkPPkzk7viSwY0tTmra
bK1ceL9vqj9PnATLqoRumUI+lO+nnAw6KwAqr13aS5N1kG69v/b2qgAGLQ+0
su0XxBeK3g7584IourGOku0ngOiJ2oU9jvxoKqLqMQjwI7dmdO7aFz7wxa2K
5BiSwJx9LVV2Kx90/3x9LNPHB43+nX8u2vHjSlvTRi6yIOpEj0ty7RJEZh6b
R1OfABiOjZ8a/y2AEjN/akG/AOpitXeobxOES1xN9GYxQXy9q6h7YVEQz1Xv
j3Q8F8SbZe+r954K4m/xt/X3+AQxUS89qHlMELG+huTCW0IYyTl7wshDBPrc
JZz0GmLQ+XZKYzFKFOUlNcVaNzfC2pqrhF9RCPe3FXlE2pBAVnR03neFD/J8
I52+6/iwIBDa6qYigLaYdTOq0/zgZn1OfntPAE1xB6W31wmiKn+Rma1YEOJx
xSfk/gpAy4iFWsQmiBMLFh+zMvnwg/OofJQyPx7n75hS+MOHM9Vhqx60OKtO
7zwqHceHxZMLoH4moWqIrsvwFAke32pd0i7QcP3DFnkuPJBdflJbs4MbC/fr
+QSDSBguLZqXqeAFDVTJs3m8kN2yR2ZJgQef4jo8pGx4oEV/4V+REQ++alZ6
vysmQdPzXPiAGh/KvogWh74kYUqqi7xIyx+C/tEnzle8iJG61kH/mIScgycl
5Gj5TyOLSP7D/OAxl49d3bIOGdIThEqpIK5qjwVmuvNj9+DT7Us/BNB6oCFs
wJAPN7ur67hv82P6UtGyeSo/jA23Gqoe5Ud481z+2m8+PCTvWRyX4sPTbXYP
orN5obf9/LlPtuz4wTHx/dcNbuSJp+XhDS+Kn6+OJp3gRdPnf8GdHrxI/+A3
ZRbDC3a5y9wr+0l4+XN31FI1H+wzfzIWJfOB8/PnxBNvSLAS9LV7t0rCkeqg
IptGEtbVFK7X3kLCvXr5l/92kuAVQM6b5SfBYXL7Hno2XrSWalgGcdCe9+NY
+y8mXqgVVCjcUCVB3Zf5XYIkCaOTqc9+cdKuU7btOzTIiz8my4mqr3lRPZui
ZelKguqefO0AGq7TSKddeYVISD6id9QjjRdWrDV/qxp5wf/Ip+WNCgmTfPX8
jcMknJfIEes35oN5p9H2kGN82Plc+m/WCgmev/2Mw0dI2H2guWL7JxIeFZ83
HB8nobEzs/tGFQl3JDqfCTmS/v/chk1WY5dO88H61G3aEdL4b3PsziBaXj2X
XzGoVebDf1jQchcfuCdj+wP28+GT8AVjJnF+WPJrbnhsxg8tojL7Hy0veW9I
Js2wCqCHPGAf1EfLm3U4/3tcAK++b1s9s1EAir0p7FEHBfBiXDxp7Rw/jl51
cnX8yI8kG2eXh3H8iO3WSfb+wA/+bEvZ4i0CGLWqHN8zzo+pJLc56XUCYA4p
2DhNLwCzWT7bN5y0PCm/37nHWwDKW9kV/eQEYFBJdOj18EPudXqXTgY/TEcz
KJI6/OjqZg8rv8QH0xOmx9Pd+BAa+9XJ7QcJMVrF+zPoaXny+sFrmX18aL0Q
HsehwYfslmtGU7T3rLF4dT5bn+//cb7xs+/u02a0+fInzwpv44dMIV06jw0f
Jq+ZauqE8aGoo/TfcVpeatkX3Bf35cOgxrsb9A58cFwKe3dYiw9qzWdL1CJI
OE6L4mAZCV1sc50f8kgQlMi4H/ePF6ddgupNZHgwxFhiOixFwkJXQJARrS72
86hdHODjRXLuE5dRVl7Iu4XvP7+dF30ibxZ66Wg4WUtpPNbKi3tLL/jknXmx
Wsbl76TEC81TBi1PNHgRlqH7U7yVByjJXGflyAMJ7akg5kZu3NrWXV8fzwWP
MzFnBjdz489AkNO6Ni7EjB5MTI3mxppXe2wCKze8Q/XHKINc4P8P7Kw5sf/5
uOz1t5x47PmumqWCE1fIvwVvtXFiTqXyo1IuFzaVr6cz9eJCVLZ21t5yDggZ
2VPXS3Fisip9a/gsBwCXpoUVdmQKLeS2ybPjw6iq8UwuK+6LRPyyamfDF6t1
DOfc2PA6w7tukVbXcgySjbaNsWDY02pVO4oZOqa27C31jPDaXc0TfJMFL2am
+TcosiGlvlk3u5UVT6Men2l3ZEMMwXT6fjArgv/Um5pVsMLDmW6nYD4b5gVF
LK8as8Hn0Yeh/SOs0Bxd+HAqjwVxD4LzU2pZkHb4TbvoPRZkxhkZPWtkAYlb
D9K8LDgf9G9WXIwFOnqnH7APs0BrX2RD3TtmlFZ84VKrY4KomTr/8AoTKlnu
/hy6wYTPpnUX/v5jwuAUWffaNSa4SEVvvH+dGYlnarj2fGKFUfgUc0QGK77u
sBQJWWPBpU1vtzzJYYW6lI/djDwbGI/wvhwncYEmlqmHD9J4QyDMoSuPG0wJ
p8WY8rlBlbr3+G4kF3ZLKqR+u8aN4UfXrd27uWHfu2ff2yAeVGx6cNCCkwtd
dZsiPcK4EHp/z+PTSlz4c05lx4shTkwJDz/dmMOFgfm4C4Y9nDCWu1KucI8b
Fk3kNJkkbmxkefBLn54H3x1Eu87k8SA48NLPjCgaX/2XGHkQ84359yFVXtQ5
/cf58eD593BG83ge8HVc7CGd4cEGQZkvXV482Mr657l6DA+sdsvZ+x7mAfHT
3nOYNs7LVQLk7zx4wmyq1vSTB4wv94XW09Zz05DJLGYngcnQ4GLwcRrPPpBU
bHIm4d9qjIVcAAnFuvFrVedJ8Jd+IFEQS+sfsOv3HeKFxku7H5baJBjecdnj
60SCGKmd9CyYdp8tkueNOglLOQxjXl38IBicTALLaXoiwk3nRAk/8ksDDxbq
8+O/aRjFD7HHNsnvvfixa9n4dA6N14wMCjSKaTzCdPhO/QEFfpQmFg3sWuBH
MvnHtapRfpByFW06MgTw9LhCd/aSIDi4j5202SuEydmV7tY+IQRPP/z8ik0E
g+GPdIrDxCDLY1RML7gBYa32THXjokhTIGtuGhFDitX6vcr6GzBvS142OiyG
xelP9OMswujNLPINKRHBkGKMwa5pMfyOH5V49kccd8hheSOfJBBrK/tm7aIM
ijmCVN2vyuBfbM7vBv2tWLdFZM+3W4rYVHvtd+R7Rby9x7ZZvUIOFy3PPaiS
VsQfjzlNeuOdyPPcYdQssRMrdFfO+WUogIWk0nsgcSfYEt6YOsmp4NYNfbrh
aGWYZOR2Zu1Xhjxrw7PyGSVYC7WvWyErI3o5kE94mwoeznJvERtURnBYqd9r
LmVU+tfl0ekrQ+tM5dHXOUoI/aZ5SZVOEQmN/TL5oorYfKHpZ7OVIqYmHWov
K+8El4jiWS1fBaitDmymruwE44Ffn4i9O+HcujhBttyJ+SvLP2VMd8J69iPS
GxURFBnkV71RGR4e9GVOW5Xg99pe2L9JCeHJgcd4s5VQGy4eMeSnhL4TFxtb
aPvg/3ST9JF2Xb/9FavUrBIc1W+F+Lsr4cL65a9PE5XwyPX0n/cxShi38aGS
afsfytWIsl2jrculGl/CpALZP6klfEf2IF/KJo/PZD8KtuuvRFbvg+2nS6Jh
8QdRZ674Zir5ACqHSvdsmziAlJXEL30PD8Lh/QlBltjDaDjK8vARy2GEeq8t
BZUfRhFnVHbjMnDtyXM6xACPHtzfbRcEiChkStyVBQ7wBbFv2AP8NW+myP0h
kLbN7PdBF4DH5fHH347AQf/u1O01wLvW7q9NkkDPJrvxvbuBCHNzt9PHDuP0
8/NCHXY6mPkbcPFvrzYYvUI25UUbQt+udMnC3wRDomfe3fUiw4vz7L18aVPs
nF5/e/KoCQ5JWFeFLhgirkJPzTzUEIfWPxlXeGgM6zxhhzfZpmj/NnZUaoYC
NoNnP8KeU9CV3qM1xEHBrSNXAgwVKOA0I+XtOEjBKEuA1d9NlhB7Jmtr4GUJ
OgXh8/deW0HHmhKyXtsK4osZd4UKaNcSIgwRXjYonChpexDigD0/Q5cqbjkg
S4mrpVDUBXvKK0i/5pwh26J35p6iE5J//3T8beoE1yoJ1ds0U877VWHTEzFn
/FoO4Fl44ISfAynz9+udsDc68bo8bXyt2MIhR2cH7Iy5tfmFhQNmlg7nN/c6
ICK0PFheyR5BETUz621sgXWTYRV51jApa7p8wp+KxKs+baNZ9tBR8r1TTbbF
L3ubyHv5VGycgtXtNmts2flXre2nDW4Q/h+0Em0gsPXu09YKa7g37V1TPGSN
bUOTU9s9rKGgvKCostMSlx5F6H9ptEQ9643lfUMWYDtee3vJ1xybjrJkRTw3
RYg4XfLbHgrGJj/Ybpgxg8Ej5+UCejNw8Fz9N/DMGN9eLELIxRCd0joFOUGm
iPMZYnKTtoAVZ5V2BoMZorU5LSdiKdAMzN7N2GAOX4/I5ZlrFCyPlqqfdKJA
uMsz+pMGBRTsKjEtN0PzD4Xv1W5mmD4UsFn4iBn+ksJKS31MQa/vtZfnjBlq
hLsY7oyY4hLPRpOnLma4T5zq9w2h4HtzRCj7kDnsQ1hfR5pRoMXQG7RenIIf
u5ov/pG0wvTar/PPc63QdXm58Ky2NW5L/3FKbKPi6t3OeedGKn7cDvmjUU9F
09/Nu1pHbPHQ8bnNCIMdpkfKhLynqGDg/XjBmmSLqzPRc2zSVPAUHqQPVrdF
8t2kxvs7bZFGZuAzqKTi1H5l38Z+KpjmblkL0Po9Q+yIc3T2OO17+UOwqx36
Q+gvZ5ba4V8dX5yrvT1EEu1W5xfsURAf4Ga1wQGkqlS3l46OKMhgSwqyc8SN
rXGx3U1OaLARbuXkc0aEyaLlZS1n+DZGnXof5YyOv4Un6CIdIS81uMHR0hFb
C8cvlJRQodm6ZfOP/XYQurBS8mazA5rHeiQTb9rDd+J724EWKqi/8z2/ZFDx
5bvhBhMOKnrCW9a/OUPFg6lHe9n1qFC9P/Wz4Z81fmy42HFc3xy5Mwmfw3Mt
0bV8NifsgCWCo/0ypG5YQmWbz8LPcCre9u1UEo23QUxyjfSjXBvUedhcGDa1
As++6nOSQ1b4d6o16PELG4R0uQhdi7RBefsfLwF7Krpu3/QXmqPh1c9WzbvM
FiUKTfsLflNR+PYivxhtH22fVJbmaXHs4Et5wqtpC8PembUeWnz3p+6/K+JE
Ra9nvHChGxUR2FaWX0eF7lG2H04Dtnh08rXxPI8dPvswig7TrrOy93tM91LB
67TMJcZpC+dUdaNpe1ss/7NVyz9ii3WpwWvvMhwQxVw6tnbRAaWEItdvqgN+
vhOSe0VywE3H5s5j+XaYU+ZraLC2g7d8UN9guy2sV8t5831scevMmZt+/LYg
T7Su/1lOxRX9F7Z9kzb4vvgrOP4jFfzzTUkqb6hIZ3Thm6fF34Rb60pxH+0c
qhTzym5ToRQx/Tcr0RYS7KPMPA9t4VQ+Pj+YY4tTmdkV1sZULOzyVJ2atQHn
J2mG75m22FIgbvRF2BbR85w3B25RoeC/9jJlmYqZyZjC7iwqPDn/1sZP2GLf
U3Ld4UU7qHZUuYz9pSLnHXU3l7MdqLmsQ7WPbTHrZ1POetYOo2+ltk4HO8D2
qkzqPtr77g+LnuV6ZY+b24fY/v2yx8fJXdnmNo5wE8GtW98d8WTb6jbqSSec
rADJAE5Y6X9WyLvNGeqHUhMexrrgA0WaJOPjjsufgryOsrgjMOFy2XO449Jb
xuE/le7YP8SpsGTmjrrq0wsbdVxRlp/Cr7nVDbVLxbkJ7O4Q3Dd9aGDaDe5z
Zo7n6N3RVx+774WKOz7bsLW/e+eGdNeFrd7mrjhopEWfn+uKopNrzCpn3XDu
/KLOpI07hPI8/zHMuuI0z0ToMVVPfMu9qP7c8QiuJBDaHg0BWGrIWJZzCkB6
WP2/hTF/yBZ9t2x0CwBb5j6B5AOBmJsIOXx8Jgi7jSND95UHY2hEL+5seDAG
SZ1lvxKCkWFpL3jY3x+btnZZSOwLxJUvqxMfDQNg5xHzbZdmELZwcEa5BQdh
k+gV7kXlIPy+9PvuzPlAiHhznsz4F4g2rW7Rwe2ByNnrlFnLG4QD2UtPYn2D
IDdGDu5aDEFj3vvanBthUP8uHli+8Sjm+JuL82OPwu9eb4NZdDh4Tl/58HIt
Es0aPcts05FIe2mys90oBqwJ+pp65Gg07JcL/MV+DCxfq/0LbkRjIsOzvivq
OIxbGpqqXsbCZ/5pTYVEDKq3qEiVPwzHXlXSFN2bo/jorflsi304bOdUgv2P
hEOBSAlT4zwGhWwL69mqcBiHXfXMKjmKyJp3n7QOHsU1++r1zBPhOG5z96ls
Tzj8ihqFdnaGw6xpz/Pm7xH4eCnFs3p9NDg3u9L48RjcU+04jDZHQOlX9uvi
PZFYPZFCFXEKx4MOpu/1FaHYILbAs645DAln39ef66XFue3DrhcRAXC3rPlw
YyoIC6K8ucV8QagRyb+uEBgMSVLJj5D5EAirPV0U9QjB4bCQFiaHYDwPcP3y
IycEbUbywRd4QnC+mTEtsy8Uc8/XK61tCkNIh+vXB3phcG2vLKb+CEOFfUFq
xUAoDhRaSz3SofV/phsZ2xkK6ac3iP6tIVhr7PqWZh6M9QOvbd9FhSCot8yO
WApG2lzgcXauEJRGHrCOLAjBONm3WPJ5CBwjfi+s6YRAXe2hrER1CJwucXxO
Nw1BS+TlmGvmIXjZfuc70kKQG9AbdZgIQVrvhslDvsFY5yknIfcrEN1pTlsT
nwTg7Q/DdRIBgTS+K4nZ9MsfPQ/syr4YB4L79upU/OkAWGT2fczcHAD2+b9U
geu+8Ps+Q80/6wvu75fvWEr6Yttq9xOGeS9IxtuODOt5gfHCncdZot5Yz0A+
9XCTNyZWtsjYUbzx+qp0Mo+lF/7d5tovYuEFM83RhOVmT0T/7P6yodwT507/
0Xu43gMNAhE2swZuiJe3D7+4yQ1bIp7yHvF0xhUF/p7cLmd89vQ4HT9Jq0/Y
Ery20RmpW+TOXvdzxtmfHJ1e3S40H/Mk/LmcM7Iqt/cP6ziDlHCh2rXRCXaJ
l/wmHZ2R/Ui7R5PXBTcc5VpcfzpDWECzobfWBbY3LHO+erviQkr0Xi1VD6y/
YOfyfq8H3AKh0lvsgXfu3l43f3nikjxHmD+XJ5TFa29vrfVA2re9YZ+qPHFd
l23Kv8gb+/sJ64w2XyhJmoa4GPoiAJxNwRx+aC3QzFf/5Ydzif88Li0EgHET
6zveVl+I+ux5IfPuCLzHVY8yyx+B1zHjY5wD/ngdHsgvRgrAqTsCedq7/dGk
dH511NEfKlm/Ojb89cdeFgYmi+wgfK1nFPNvCkJe0BaWYI9gJNXZprGMB+FW
bC+n6Wogzm06lG5MO2+/V9vLv30PxE4fD/1q90AYx5WJ9ZT7oyAqUsbziz+t
7tvpnTkZiMu1rt8yIgKReNBAe+xHAGK64hmHpwJwI5X40EfxBx2zI1uASQD2
vInn9/Si8dxxwdAvEoF4xKgkf+xEAHq8czp37T4C2YzOiRKyD3wG9163l/KF
mu+pzJ+hPtjKrCylHeWDIHbpioI+b9R9frnljaYn3gctypyN9YY040/z0gPe
4PpTbcXN5YPRRyVd97b4wGrg33havQ+SmZaFG6Z8Qf5E5Zds8cH1OlXG45G+
yCFxTls5+WJfAfOjP3q+IJ6kyqeJ0vq5y/t+fPXB0r6hyz4tnuA/JE39yemF
ki1zImRPDzwKTRD/fsId/IuGUxUBnoDbTYHP0h5oFXPJvHDCA2Hrlrzmz9Jw
WdPI1O/uieFIvrLPh71wJLspwUfBCzei6l5WP/PElXeBy1tpdUSW88PJi+7u
0Nyv7SxT5obTH+Q48h+6IVCtIOBmoiuklvs5g7+5olmdQTOb0xXa/ykIVa7Y
r+W+1SnFDV+11btehLvh91bNIzsC3FHNzdEeuOCGx1FlZTH87hC5fN3J2c0d
OTL0Vm2OtPt1kdVR2z0wIX24eDOPBzL27y/MiXVHlaKXzTNa3bJ65tfuIuUG
DmGuY2fdXOFZEbxZOcsVoQ2HHv6gPXefl6TJa103RO6l7oy66o74rw2FZnke
4Noqd/tFtTs+CR3w4JZ3h/xVQ7UyMzfs4SqslxpxQ2ZxvxPPXTdYXwnTO0Jx
Q+j9zt6K8+546hl4UtWYFk/+4J7zc25grVXSzafNXzy+dKKc2x0dY7x/ljjc
8dpB/61psRvsHObJNmdd8ZJb7tP0Txd8Ud5+RLjIBYIsPZZ7xlywSM9hJm7v
Ag/lE/1dCS5Yv+XCtLqlC6ZLXHcwyTpjfc09xkxBJ9wLve65PdoJj93ruCSl
HZBqxxddxGWPq8zuBbO9duhImBY0HbLBqsP+2ze32KDgw8Dg16M2aOu69n7T
bxvIr6zbpRZpB9E+aTXfWppu19eutZO0heL2a182tlgjN+lUAHHEBj+sIp6G
Rljj5/76pniafu3hzLk5nmSDXtVXeUr7bEAVOdV8rNcasvfEJO48tIHJ0Zcx
OjQ91ikeFkBdT8Xj9HPF0hdskOVwzvR2sg3u0A8Fp5dSIXpOIHIzTS8rMitK
SwpRUfxdlxL72AYl+sFPB5Yo6HgVU/b7EQWd9NYyWbnmODCbFilC8ylTkj5Z
ro9MsVe4uXLliSkstpRGXWggw9Y9dXNmKhlnDCIXUnnN8apJ9sgVYXO8swp0
30jzLYWVS9T7781h+kFcy/qVKTjo42oav5ihVkBO+gytPa96S1v6MAUib77T
vT9I82+zWeUr9RbgGbhOjLBZ4tC9nZPXLtJ81p8Vi0s3zJFTmtyhEW4OH2Xf
9UQRBa4slJICHgrsHx1WbXtHQXvFwfDHaxSoH6AKPKD5PYrA4uRCNAUPuNT0
At6aI+PwbgUqzU9vWcew81IKBX9NxR7bGFGgm2+n4ONGQWXhjv6XVymgC7D5
43eGAvo6hwwLOwokMmxaVoRMwZX3znC4xRQZZT/e32M2w8NdtziPXab5ezav
2cDPZnj7zCmfc8kMDziv8C1cNUP2hoj3nZZmUM3eSoQ4mmFsVMz5cYoZuM9c
I8TjzHDD5UzPYw8zlH/lz0qg+cRgd142S5of5A0RuiCva/Z/ODTDn35irsDH
DLGm22T1k82QMRB27lWHKZ6F7Xj/+6UpyuLksxe7TeEUL9lu98UUfhtKikjC
tPmGD5YauWnr1t/4eKDJDBWe7it6o2awedvI7nXdHP8Yaj6L0c5Z9qrxoXZp
c2h+5W//89UMmYKtWx5uM8fX1wvSe2jnqrBwe2ruF+3c9ukqrV02Q4Tkqzsz
tmSU+k3e0zIm48iRR+cu5ZvgWXtGNcXFBHxvCnw/fDFB31mVWMZP+hA/k5ms
k6ADYxGjd+yVuuhJnnY7MaINqouchsAhbZwPXVM9FqGJPEfFOyt0WhAvkfui
kaaBkkONHkXDGrhn/sIgbJ02OB4eDvdV0ULHp/J1Od6aiH4lovvWXQtP/02l
yq5qQqg3WC+hQgPGGzVX2aY0UJqkzNUUpQ5PDrrrvzOAoeXh8x39wCTxT87l
AnBtbJlTeOthxChP+Bw/CVxQ+bDygwOYdk3fyWsFBGNHacteAr3FK29veqsh
MVW74VuYGjrrWyY6H6qhWc27pUnuMGIVyiOeHFQHiTvl028NdcjuOMK364cm
RDmKrd4+0EDcfNpudV4tSLk+FPyRowObnu+qtgZ6KNI9Yx/oq4NWBu71T9p1
IDM+INbOogW2E1WGt/t1EV22N338vS7+Ok5HT+7XQ/pFhuXNPLpIv/7gkYqH
Hh6Gb34tv2KAH1XvWrd90Ed086PYq1MGsLjX9PAovyEovVO9z0IMQb59UDLT
zgAPDKNjmsQNYHz/6jVFFQOMzJKVZFV0MPz2taQfvQ62dqYGuNzWxjJJhLti
nRb6qMLiF3V0/vf3fgZtvDHPYanR1cZev0XjalNtTEdG5qX2a2FHKh0pI0wb
6x0Tv5ZmaKHh8NkflyW18PDspBCPrxZ0ajLENXZqYU53d6b4di1samq4XflP
EzkV01cfMmghtuXDOedQTbz4feVhw34NhA9yFk5zauDhyY9Xr5drQP0x5/VA
E1ocA3xTnnlpQHuleB3jrAbmM5g3Orpq4OC9XoMzwRp4+UJMTtRZAz+z6qwy
5tShwcLl1juijvgI13UCiVpgosmHojQtlNKLCPclaKPq6OuwoUkt+G7LK6kU
08bh4+dbu0S1oTFff1dgWguCss3Rb5i1US2Rb+h3QBsHPpxkfi6sC7GjS4zL
NvqQdTZ5sW+vPqQ60/xP/NKH6/C+4RBbfSwOt95Qea+Pq4+lD6iWG8JF/hjd
mzhdXN6u/WvnPj1kazm1yX3SxSfC7Ez0KV3oyfpclajWBQv1UOiWYl3MbYwZ
ntyli7Gh4w0xIzrQ+HpD5TWnDp5y79PqHdXF4uZcs3A2PdjP2Z4qntaFVN2/
7faOutAJrP3m81YXuJFy9TptvfgkhapKaV3IpHjVPiF0EUPfXWvArosDXbs9
6MV1Ie4VGd8xqAuKz6YrIvV6eGeiZu0GPbz1LSbHSOthhtGbw8paD3turv7g
cdLDI4YOgqNCF+X1lxf23afN423eKPxFF8zXWYoP3dRFRUv+o3mqLp4flGpr
9dfF0efXglaP6IG7cPiQn6wevHDpUd11PYy17khevaiHZ7JfrHVSaO3vEJ2p
c3pgdKplepZlBNs8xt5dm4wgp974Zi7eEGdFt56MGTGCf5E/EbpghFP2uhKD
x0zgHRX5oOwwGcEvd2GuzQSRV2gV+68JyFa1b6pfG2EsciNDepMRzt54YUBc
NYJVdXh+u5YxLpyayk6VMULoMwXzkQPG+HYuuL9zgzHE+F2CG21MkF7gb9RH
McHbkzdzuy1NoMjndKy5xhjuPiwbNtOZwLhh0TJwzhgd5zivjn0ywp3AX8uM
YwbYa92VJa9iiEMeP3lzsg1hqxJMLDkY4lzr2w9GqwZgPS5SM0YYIe6lonop
vRE2s/PGjR+i7UO8bYzDwBgbDvp7PsmhvX9RjpxClBF6JibpRGRMUCwSmqt/
0Rj0vIauDoPGSHk2YfytyRirJofSr6ua4ItDVeWnZFP0GrbfbH9PBjG7TzO/
1RQvZdeFkXPM8TRozYRV3xITx8Izd/VYIUhNPqb7jwU6xMU5xOQscPqmZl7Y
WSsI53691t1kieN+/H07mKwQPsB7wYHPEl/X28ecV7DEJ/U7l8aPW+JHWcMr
lxuWENmWPTS8zhp7Rxr5c4uscd3/+wVKgjUa7IU4FgytwX43NoVZwArJXsnV
X+WtEeQ7vkP4ixXeyEf+u+5gjXPVZgIrz2h1nl/RrqvNApZCV7Ze1bEEG9fX
+hLac9TvXVE6eMkSRmmj0XZbLfHIQnG3DrMFJt92PI4zs8Sbu83LDtssYd10
4N+xE1b4plbetUPUCvGWWparL62wcrnm54i6NRzDs+jP6lijRbaSvETTWVb7
7STUP1phjXf3SyfaPh2SzrBfirOG1Myx+wX5VBQEiVTWfLAFU4hPf/8jWxhn
Miq1r9qisXr4e26DHfJK3ry/6OCAE96lmW0nqfjoGtOry2cHlz0HhXaP2+FG
LiFsvJeKoXz1i4ZRVLxtU2ESNqSipWFOqtbCFvT97+y7Kmm6y0s+gv6XDWYH
yUeKFmxw4XCp2a1MW2ifYv3AATsMMFVWy4zawulQpJX+FipcBFrysw9Y03Rm
pJTXjDWKdLYE0hlZI6Nyc5kITc88lXfgeXWbArnntqFXf5jifO7G36f5zRG9
f4KxxZ+CiE28PAvfzfFTpVGnroqmg2RzsmVsKJiSKdr+ssQc5g7/ajV3mqPY
Rc1zOcsc1DM8fuYvzEH558idT2u3v/NpD7xB0weMnodrOM0xlvNxLoPbHIyO
Wuut/pqhTmi+g/+2OeQvzARnlJsjYTQ5jf6yOe54Fz0rI1Hg/qv2zzNBCkTT
Nn0x32SBUObyURkXCnLGnLuu+VDQLXnh9bs5cxi2N6+c+WOG5znkurFyMxj/
W5hZjKbpy+UOgpHHHE072GIi+sxwoci/fO8AGU8CSnOX1sjwV/p4RP0OGfv6
Iod+3SejazZzWDvNFN86vnR3kM1wZaAaG+6agv/6SMKTETJCb7I1Gx82RVF9
XN/OM6bQH5dMMYYplmeUY0pfkyGqIKvQy26KpH1EicpnMk6Il0ntsjeBLNP8
Ju1sY1TLtnN0hhhj25rdi4tiJv/7Pd2yMZz3agckrCOj4P6nr6KKZHhz3eg1
um+Cf7NG7iZ+tHFst1POXjFGW8vGilMCZKzMfSj6TiXDZe1srYolGWVGptta
95BhcNXP/pA4GQ0N1yM2mZPxldQxpGtBxknV+umuH2Sciy+Ird5oirPlF6sf
PjVFcjhP05aXZvhoL3YhgGSOlZQMh1vL5uhopPpKVJtjWcex8WKAOYoMKEzL
AubIO2Em1LabplvX1lGpZsYQHb794EWfMRLoOO3C+Y2xs7Jk28ZEE+hMK19p
jjZB+fT1xcFWY7TnHm1r2kdGQN5l/xQa374PPmHHZ0jGTOhKWVWBCSbvREtt
nDPB/Bl3uvEXJuhlsDEZ3mOCaTa5y9xWZITdy2K39CHDuUP801l/UwTUr82/
1jVFXqLR+X9HyRho92x9QNOVD697tGX5kmHzXuibwxgZXMe+G0jYkSFe/Pv4
4QcmGHpqziPLQ0ZLyLHH3WQTCPRs2yisaAIemh2XrDLBgF6UU0+GCVjnK773
C5hAozBWrUvfCFLxd/x/03i4UDasbMCBDJYLIw3je8noezraXHieDPbTvXQy
kWTIue9LD9pmikMRrfyrV8iI3fCunMgjo7dyi6oprd28kihrmEtGIPLPXQ4h
o3PKn9H1BRmGgme1I/hpuDPYPUXRMUWaqmBV7xIZgpUqzNPFZKjdc9jWVk9G
ke1Hr3Car1CLuWvleZeM+/pJJyppuAvadiTJ4jcNz7Ok0/JPaeun9tk16pDR
6P7i6QrNb+UouUqNXKONvxIfnKNL2/8P0uVZOjLaAgyUbjSYYIz9gLwrrX4e
auxyiBE1gMDglozZGgNQzH8WHW7Tg5FEDcnHVx85c/N0Zm/0sTF6dHpjgQHe
m5SJ+dgb4MM1y1BmRkOk575adEw0gAljnOeopgHK2uhlqt/qI/Qrv/yDen0U
dnLMfgnXh7zmaWH/WX14ZY7ofqbp/dpPo7aqg/qQ+2CwPV7XALx53n+3NOtD
K3amu8VZHwUrq0E/PtD2cTfFUEJDH1dqH6bUy+hDQvfjk9eP9bBh/eJj5Zd6
mEgMkIgT0UWRxtbN4hu1oZur8MCTXhfGAsfv65jrQPFkVHocTZ/uJY4Km2/Q
gQFn/q0dkzqY6tnFV6qsg128bF89aPeD6O+Jz73QxivnjR+LOrUhzeLowfhN
G6Kaok/kZXWw/machpkxTc+EbUzbP6eDmzLqLpVOOljzsPeszNMBT17gds4/
2jjTMKwIFV1Eqn1num5H04ENqyYh53RRst3SUoxVH4kvbnXTv9fDodmR+rBj
enh5LyX0AJ8eDl8zfu+6oofqIvLn5Gd6YP4SvZZroo+3pxZTUxhp8XzWcWaA
pmueayaKpv8xgrvk7g0Fl43g06HJVPjcGMohAv1Wl0wQcGcp/OpGY4hQy7wv
yRjDb0W4s7CIpgcmCzL6qMa4yWO7ld/VCPv8NhXc8zKChlfJS8n1RhjpKerv
JhvjyK5Ne7IGjHFn0GrvvR4TXDC+QG3PMsE1ci3vMg3fByN/3bQjaLxTemVj
9FkyJNhChEsYTNHFetfSd5Mpdmz2LzvAR/OXbV7xfL5m2LTWwKCz2RxOp/QX
BYUoiA6kLHVsovH72Q/vlc9TMHH7hGWkHAVdz4dkRbUsMNuZyhhIq//OMfH8
52l64OIp/+DmSzZICL9/vGvCCpUPDViUA61AmrP7fpLZGtquG8bVj9iA8JS2
kD9ihRHzSS49DStMOHyNmV+ygqZJUFBYpRX2X5WQ3d5gDbVPPCM8s1ZguLDj
g4MNTT982yCpR6Wg/IxUJm8IBfX3DPP309pf5wIHKvrN0RdUI+b8gFbXfG4f
395FwYXh96yZahSwCwtUhRAUPBo72iJeS0FBxU9V7R8WELsw+tY0xAJbq/M3
kUXM0BqUY6ex1wyHu0P2i4vRfLaLhvKXLFO0e2aGJWtoouPehvhwFl3UD/q3
naT5XJnua3WXc7Rx8VncvPiSBso3OVcqn9JE8iTz8XtNmhji6rZZX0bT/b2W
koxfdZAwkcb4bFkHXat38w+qaUOIxW63j4Uuvn07GCDPqkfTKe8Ubp3VhV3/
wYymZV1Y+Xv8DJWj+YnFpv3yF3XwJWPxzM3L2hAmx+W0/NTBjTbZw6dp/sUn
lWOw66gurvnvD+ct0YO8rJv+Ak2P71Ap/G6vpI/2ic8KkjQcl3EOyzXEG+NS
3UKn3zMjMAu8tMuUNsGo4sKR0RfGUD3zVCk9yxCFUiGUyJOGGClJFSogGaEr
vkKdV9EQjlyhP8f8DHGXPEKdrDCAPAfxXYXbBFsNXt/SGyVD5e25z9+cyOix
9TCupPGzq1JP/doWE0TdGNCtCyejSfvJ+0c0niws/TE7QzLFkwT63vFLpvB3
Ujoe2WWKhJ7NnykdplBO5pDoe28K7pt/szZnmiMuOu/V59s03fAtK6TO1Bxq
zdtH9/ma4w1zW1YvszkuCXzSE39qBs1hY6UXFWYoUecL4PA0A59PWJikrDlC
daKDrHab03zro7y968zxQFB1XIWWB1z/+f7iMRm+my8mVtH43ZzBq+EZTWfN
c4rmxxiZ4WgBm7V1uSlib4sVstPwIXlYKLy2zgzmckl37lubI+DaQ58lwhy5
wzZyCd/MsD7+UsMtFjPA413CLG3czeubZyRpuiaku5NRErS6HPa3e1+SGbze
aPaY0eo0o6LnT7YhM9TEnGY7SsPvgWPKNvc+mCOWLmOUfdQCdb3hlWkDFNwV
P/3bSNsS3Tly2XVuFjhZdrnOkdkS8orPFgU4LXFGn49e5KEF6qM5HCN7LcB6
kPeSwgZLXOVVYju7xxL1qsod2kKWCL8lGvCYbAlZR1FF82kK5t/u+8TgawGZ
g0WN19JpvsFH7RfDRgv8LVhsd2ym4KXX3Xs/pS1QfcrqwzyjBeaEko6kLFBw
St0p5FsUBQO6oqXqtHzibGFJvnaZpjvL159zmKDte5vuWiKTJRz3Up7ralhg
ZSbh+iq9BXa/yqKnNlEgLbrJ8ZgYBdwxi775ZhQI3xmTtDpHwX/k+KIXBafJ
8Zm3hylIv/Ot+k89BUfGPyHJnIKzN/0ayyop+HpQh18klQL5g5uzWp/RfMbW
g+NpZywQ22xiP6lmidXlax8SZywg7lerefGeBZT2cHs65VugyPJWtciQBbwe
zDY9LLLA9ex1dY+rLFA61E2OibNA5/GxXH5+CzgOLlazr1LwL8G+q+SgBVY5
DqSvxFvgjeT7t/yGFtAOiVu5IWyJmKmjhSoVVpjv5Lne+sQaf9P+dELBBtNB
MYyPfW1xukbvzYM5W4hy7bnzfNUOm7p6A66etsP9loHzgo12qLkwyle8wwEv
Y4TFBrY6gkvid/1pB2f8e9QbMdLkhCLFzlkVX2cwr9ullXrOGcNtc3/axFwg
yaoaRvQ4w3DymOrnDc74/IApaK3NGaSRUvLHUmd8P3qod+G1Mw5krXSubHZG
SQVnR+clZ9S0uhTstHDFPrtsV7E7rtjNXc4WmOaK8v1fnvieccX3qCNnDB1c
ofLvy61Loq5ofH99hYniAuZS/kj5Zy4waqUEvU13RpzN2ylz2voaX47nLFU4
o//FpWEfTxesq1MMvU12xmuTRQn5I8745BZ8fg7OiLZ3rmmnjWd9rZF5nM0F
BxnYZxRNXRHdLilhU+KKiF3Ft0YS3BH47tKr4mFXaP/JVmRwc0ZzGkt2dbwz
TrFHHpI76AC+Jn6DdW8cIbhyxEPhhSO8/6VSVYMdIKIb07eu2hEMd6d1FQuc
IJt45JTRtBMYb0R/DAlzxmjhlNKPKCewhGQt0DM649sH9cyUECekjt/e+ijW
CbYnLk9XpDmDLZ7v0gzFGc4MCvtPujjjxOcv9bjnhNGSY7f7+hwgkHoi4xSf
I8rv0zXYf7aD2furq4XxjuDd05/m8MgRic6P7qTTO8GBFKz+YIMTjKI0BZxo
1xL062YPHXCC+pNDW+Zo7bBTsxzvqCPqA7itvOAI7ZQJpQtmjviou3Q79ZUj
hI0st+9acoRjv8TLrQ8dIMZayHZixAFsP4urSI2OeEmf/VzzrhM6ZkIXQ2ec
IHqLWfgcDQdTH63W0zM7I2XU5UJmohM+puSlv7/khNyKSqYZbmfITjCkd0o6
46XTmXGpCif83hfwnqh3RsbR6Dq3Shd0VX1Klz3mAmoAJWd3gQvS2ApW5U1d
EJyac2PkkTN874f5pu91wc1gMWb3FGfcIHvv2x/ojGv7acyo4QyX+Aj5Yn9a
vOVPp9lPOONImYD/L21nnIn8Yax/zBlzIxqJklIuaHGLzeusccHJayoPeOLd
ENLR866ywhXZUdVHzoe4YfE62zkVVjeYctO/nNJ2g1KKRpvipBsy9g5eK+lw
w14nFZFRD3dc8n3fev+BG+RlvEw8FdwwpvL5lHmLG0bmk3s4qtyh+y5TaKHE
HdWbf8dqabpjW58wn9pfD/yceOtG/8wL//1seJs3dI+76zYG+OJuvNmoyAFf
rO8inO/e84ZblUlSh5snfsmIvblm4YkHqd8mebW84CnTIqr1wxvlz7dvCbrj
i+YXEWntUT74vazsIfTHB1nR70h/X/jCpOvQM+ur3qjmV0158cEHz2QzH8vI
+OKsq0fUUr0PDsb+3lrF5I104U/pP0a9ce0TdezKQW9w1xQL+RZ74e9AQZRG
mTd8+jQetef6QLugL/Kinw96rHffPJDtA423J5uf1PshYmON7MpfP3BSBagD
KUfw643mavHdIxhLvLtZvN0PHNw0xXvcF4aLwS7BF/1QnZzZtdHMB2apjYeE
z/liaa//nd9qflB4Z3HgWY0fPpXfolvf7o+t77WGr4YHgnxdfWxLbCA4q9ar
b/0WiD+xr3t9SwPRShkfiKPdNzTx0jhyNAhpifp+bqthyG0IP/8zJBwSmp+j
VrojsNn34Fa5vVGwkAjJJ5dGYUPQrNPjgiiUx9rfJr2NRt7VQsI5LBopfmG5
3OcisNt/x4aQlHBopEizU2MjwTj1guF8RBTUHmbyp/seA4dTWEZtTxRcjRbX
0ByFMqdjszeto5G8ScTfh/s4ak7IrMpuO45vli/oAvQiUWwa1/JqMgrTv/4q
/G6NAjmTmsvqdByfK6/MKY/FwHdJsr4oPxYjTy6Krj8cjR5K3xVzzRg8lGw5
l7P9OOT7vHQKWY5DI9n+xLOKGCzWVaU/Ho+Fr7M6a7VgPCgDtVcU7iRgYV2V
g/7veJRPWfH3OibiZO3Bct6ZBPQ5GE4dVU7AhjaJt8kNiciZkbGwWEiES5NM
0NWqROw4VdzaJ5aEe8nqz3a3J+HwvsdNhiFJ8NxrcAE2SWjr4o1UJyUhZp4p
5atAEkbybj3zG0pC4Jc9S4eGk3GwlDTRJZwCicEzcWllyVA/npv5qTcZrivN
u84LJWGW+Wmbz/V4LCjsMhOxTACTfKff9dI42EXyXxYwikOOb/lHo7A4KJRs
fCQ0fxzqEee3nC6Lh9rIscLo/jg8LOTTu90WD95A/Y6nzvEQwr69r3TjwaIc
N+J8JQFWUyce9/glIqzHjOF5XRLuirStfedJxjpKYdEO3ST0H1f6tyM3CW/b
XoD/dyIeV8zBqzEZHgdujnJ+SkKZfJ55qXISJizk9l93SIKp8rdsnE6CsEfY
DlGRJLzJOsgYFJME3w37X3EEJKF2bComWy4J0TtFH/8hJULS6bm081wCnl3r
zXT/EY/uCCYRxr/xsJ06eF9JORG2FDm+fJtEzE8OrHHyJUJ1wT7WNTEJdovb
Th3pSYJoGe9luYvJOOWwgU5BPwUrJfVuQltTsaO8ufjZeAqKtM/uO55/Auuz
mRZF206gQjma02XqBDxtLgzr7UuB6AOPAIf0E1gR6gobsaX1r3eJ5RNMhbzJ
DaFms1SsXmfK/bwxFb0Nt0Z3zJ4Ex4/7gT4h6Xh4SKNyzD0DJUGyrEY+6bii
FNwoGJAG6z0f60X3nQT3W+Hdtr6pSFpVMbuhmQZ+tc1JLpVpiJa+J2UinI5J
ZnIQc0UaqBEfnaIWUrHVMSt+XCwNJUIKgbuyMmB3MVXtBtNpPORQenrr+2n8
KDarYRA8g7+nfwlKa5wBVUDG9n7hWZys5uQsKzuLVJ7+da8ts/FY/+yHDsss
LLALam4dzUayGbVQojYb6+nvWKA8G90TVFPdtRws+xoZrpPNhfRArfqsdi68
P/xPB2b60+QBwOEqdOyAbDoR2JRxLKByWTlks8IvE2gRRwxDVJo1YQxxgGKn
K7Y0KXU93vft9fZtOeTQgDcLW+XQcZTiArPisEMglHUyqpnZ2GRMGfhB2Mg+
PV+ePH/AM34iVl6LpfrKZnteNfY/Vyh75y1wV3zSOb5cgz8jT9M1CgteL6Q+
0ydb/v/T+6oYnHsQ/A7Xz4wZYx0/2aaFJfPpW2GFRkR4S1ckR7TY47eLF+Ih
ITnUXrZ8W4Oc3jWODSN6BMotMawvDbgen5+1k0+jxHh0bfSUAa2t16f0PC24
PuL9R9pJ5PodSgx9SqE08HQSq8GAirYDcV5WPdzDnz7WKgx4Q920MBRAYyUp
mBr50IB1wvRg9RU9/OtKIo+t+rOLkwux8Xo8o4/lswt0WCRtS+HFelQX+XKr
ftbifofsjJWgcGuzfW9HP4XhKw7p7xk6DFQ40l5r1OHbz//lu47r8XH90q07
Vgpyzr2H2TYKoS3i8jNbSHy98ve0x0Dg5nTsT705JGjfNdzxTBWY988TM2Gr
FCumw46rYdvycoKoRI2KcMne7hNKFD6nNyyeUyKtUZwwla1Ga9S23RdEGoR3
P7HeEBBoSR0MWndxtSdsqGoY02C5dPTFAJeAOMXNywokMXfXXZgUTSFBVodJ
B4FLzZf7bAkUeg42ZWUEUShyLW0Nf6xBbUlsY0A8ge0O2yBGNOATiX3OYALk
Roe05x81AuJLJK5pFQYF2XRRpRqp14ZEpVoVRK77qYYdKnD8QzfdLlZB3DDq
dUCoQjrxja9cpsTwzVwrGaFEH5v+tV2kRuis4olsXA1eSgHjeqbBph8CRaNt
BB5yBNpXOgk483wy3osh4QzrG+j6jURVFKtf94jE6BdWS8QkBTGxR37YqcVW
u+ADTq0OoUfNKRyPDqN5B2XVZXpE2bLtkkQduGRe8x83DJh7M1380S9G+Ftc
zpNZNNKWd8133DXhu4tnZ5pf0Nh5p/8vttuEgasYSusyobfT7PPjhAljp877
iiNNiJo9+5W9m0HprOHRRDGD7+1lLPdVBi8JE4yXh02YUxZv3r1Coye3Jeoe
2wSPkZoVzZtwcqxoyqVmUPz2wsSrcQwqD4vs0RkMvFfkAlkXg7BEacw1jwmD
yYUhghgGIumpGovEhHdZi968cgYXOh+4JZkMwiVVO4TbGXjF1fPM0QzKN4a0
teabsTY3gl/WVI2c+fXObcJq7GtgBxXk1+A/xC4OmA==
    "], CompressedData["
1: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
JylST3IkUseknhQ2X1j7pJ7ka4lEqptj7Yt6kiOROhb1JEXqSYrUk7ztSaRq
fkGkjkU9yZc0iVRFIlXoIlLHpp70m5ez9k09SZF6kiL1JEciVbMeInVs6km+
0Eqkjk09KcahnqRIPem9hvUwEqma9BCp1pFY+6Ge5Au8RKoPZ9Z+qCc5Eqnj
UE8SBqgnWZsgUselnhQunbVf6kmOROq41JMUqScpUk+yn0Ckjks9KUZQT1Kk
nuRIpGoqSqSOoJ7kq99E6gjqSYrUkxSpJzkSqSOoJylST9Jrop6kSD3JV92J
VJ1jiFRFIlVvLpFqm4G1J/Ukd0Gk6sxOpFpVY+1FPcmRSNWpjkhVM0TqKOpJ
itST4r2agkg9yZFItTHH2ot6kiL1JP9IIlVzAiJ1PtSTHInU+VBPUqSepEg9
6bdVvTgU9SSrEETqfKgnORKpc1BPUqSepEg9SZF6kiL1pLA/GByKepJXYUSq
+XM5FPUkRepJMSf1JEXqSY5E6pzUkxSpJylST7IYQqQKg0Sq1iFEqgYmUr3J
wton9aSYi3qSIvUkb6kRqXNRT7KfQqQqEqn6l0TqXNSTFKknxTvJQ6SeFHqB
RKqlTta+qScpUk+yNUOkzk09SZF6kiL1JEXqSY5Eqo45ItUEZe2HepKXB0Sq
5iZE6jzUkxyJVL35ROo81JMUqScpUk8KK66s/VBPsjREpPr0xNov9SRF6kmK
1JN87ZtInZd6kiL1JEcidV7qSYrUk6wyEakzqCcpUk8K/7KsPagnGWxE6gzq
SWHhl7UH9SQrVESqJoxE6gzqSY5Eqv4hkfpeGkeknqRIPSnsHbP2pJ7kSKR6
3srak3qSIvUkRepJaop6kiL1JEci1dcdWXtRT1KknmS/jEjVW0Kk6oREpM6i
nuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1KfRyKOpJitSTFKknKVJPUqSepEg9
SZN26kmOROoa1JM8wydS16CepEg96bdjXhyKepIi9SRHItVO+uFQ1JNs+RGp
Ou8TqWtST1KknuRIpL4rdkTqSYrUk8JqPGuf1JMsGxKpXlqx9kU9SZF6kiL1
JEXqSRaaidS1qCeFjyLWvqgnea+HSNUKj0hdi3pSiJlE6trUkxSpJzkSqXqN
RKpvFGDtm3qS1Usi1XNN1r6pJzkSqSI5kboO9SRF6kmK1JMUqScpUk+yAUqk
KhKpOtaJ1HWoJ4VBztoP9SSfX4nUdaknORKp61JPUqSeZC+VSP3d9sehqCfF
zybmUEmk/pwFDkU9KX47oxgqqCfFCupJ8fvIYqignuRIpGp6RaSuoJ6kSD1J
kXrSTyJh7Uk9yZFIXUk9yXwlUldST1KknqRIPUmRepIi9SRHInUl9SRF6kmW
hYnUVdSTfIYhUnW2IlJXUU9SpJ6kSD1JkXqSIvUkS8pE6irqSY5Eqv4PItWX
P1H7fqgnKVJP8qFApPrOnsOhqCc5Eqn7oZ7k2SORqrk2kboH9aR4t18RqSc5
Eqm+wag4FPUkRepJNriJVJ1EiFRN+YlURSJ1D+pJvjuFSN2TelJ4b4u1T+pJ
3gogUveknuRIpO5JPUmRepIi9SRF6kkh/BCpvt2KtS/qSYrUk+yzE6l7UU9S
pJ6kSD1JkXqSI5Eq4BCpe1FP8lFDpO5NPUmRepK9aiJVyzAi1asy1r6pJ3nL
iUjdm3pS+OYz1r6pJ1nnJ1IVidR9qCcpUk9SpJ4ULxUQqSf5mh2R6nvgWPuh
nqRIPck3GRCp+1JPUqSepEg9SZF6kiORqtMgkeqPHGu/1JN8cwORui/1JEXq
SY5E6g7qSYrUk+xjEKk7qCeF7whk7UE9yfdYEKn+fVh7UE9SpJ6kSD1Jhw31
JEXqSYrUkxyJVB1lROpO6km+84NI3Uk9SZF60u/oZe1JPUmRepK4Tj3JmCdS
dbATqbuoJylST1KknuRIpOpIIFLfa2mI1JMUqSeFb9NE7eehnuRIpHqbH7Wf
h3qSZyZEqpa7ROp5qCf5VkMiVZFI9YWKxaGoJ/kqLJF6BvUkRepJPiKJ1DOo
JzkSqaIvkaq1BJHqm1aDQ1FP8m1ARKp/JmpXJFLPpJ6kSD1JkXqSIvUkRepJ
itSTHInUM6kn+eYkIlWrUCL1LOpJ4S021r6oJylST3IkUn0LL2tf1JO8hUik
nkU9SZF6kiL1JEci9Z3iIzY96eymJ/lOYta+m550dtOTfCWKte+mJ53d9KSz
m550dtOTdIohUs9pepJPC6z9ND3pnKYnndP0pHOannRO05POaXrSOU1PUiRS
taQjUn1fNWu/TU86t+lJhhNrv01POrfpSec2Pencpied2/Skc5uedG7Tk040
PelE05NOND3pRNOTTjQ9yZ981h5NT9KbS6RqkUak+i5z1h5NTzrR9CS9CUTq
yaYnnWx60smmJ71iBCORqlqJVN/sztqz6Uknm57ki6WsvZqepEiknmp60qmm
J2l9T6SeanqSrzqz9mp60qmmJ51qepKOUCL1VNOT9O+I1Ps0Pek+TU+6T9OT
fOt/cKimJ92n6Um+pHc5VNOThAwiVb8ekXqfpifd0fQkncqJVE1MiVRNJ4nU
O5qepA8okapIpOr0S6T6eklxqKYn3dH0pDubnuQHIbD22fSkO5uedGfTk3Ta
IFK1pCFS72x60rtfg9j0JEUi1c9jYO2r6Ul3NT3J1/NZ+2p60l1NT1IkUu9q
etJdTU+6q+lJXgyz9tX0pLubnqSzJpGqSKTe3fSku5uedHfTk+5uepKOVyLV
T6dg7bvpSXc3PckrDdZ+mp7kZ6Wx9tP0pHuanuTHcrH20/QkP3mKtZ+mJ93T
9CQ/5Ii1n6Yn+bE+rP02Penepif5CTKs/TY9yc/qYO236Un3Nj3Jj+dg7bfp
SX4+BWu/TU96DyPEpif5oQOsPZqe5LvuWXs0PcnKCWuPpif5VmrWHk1PutH0
JN+1y9qz6UlWiFh7Nj3pZtOTfEska8+mJ/kmQNaeTU+62fQk32/G2rPpSb7h
irVX05PuO21HJFJ9Fw1rr6Yn+TYS1l5NT/KNE6y9mp7kewNYezU9KZ6mJ1lD
R+3WwVG7xWvU7uOoOFTTk+z4Tg7V9CRbrYdDNT0pnqYnWaBE7TYXUbsNQtRu
Vw+1v5vviE1PshY2OVTTk+xFHQ7V9CSbQMmhmp5k2QW1Wzph7bPpSfYqWPts
epJ3Nln7bHpSzKYn+aI1a59NT/JlWta+mp4Uq+lJviLI2lfTk3xJjLWvpifF
anqS3xHWvpqe5OsNrH01PSlW05O8tc3ad9OTvHvL2nfTk2I3Pckbhax9Nz3J
W2OsfTc9KXbTk7wLw9p305O878DaT9OT4jQ9yUtc1n6anuQ1Hms/TU965wSI
TU/yxJ21n6YneebK2m/TkzxXY+236UmejrD22/SkuE1PMvlY+216kk+4rP02
PSlu05N8WmHt0fQkf5BYezQ9KaLpSX7PWHs0PckvmrVH05Mimp7ko5m1Z9OT
FIlUYZBIjWx6UmTTkyKbnhTZ9KTIpidFNj1JkUiNbHpSZNOT/FdZezU9Sb8f
kRrV9CQ/lIu1V9OTopqepDUrkRrV9KSopidpUkCkvldSGYnUfJqe5GeDoXYd
ZERqPk1PsluaHKrpSYpEquYmRGo+TU/Su02k5mh6ki9TofYcTU/K0fSkHE1P
ytH0pBxNT1LnRGqOpifpoCNSczQ9yU9KQ+05m56Us+lJvgbA2mfTk/SCidSc
TU/K2fSknE1Pytn0JJGMSM3Z9KRcTU/K1fSkXE1PEk+JVE8YWftqepI+gkRq
rqYn5Wp6Uq6mJ+VqelKupiflbnqS5kBEquatROq7wENselLupif58XWsfTc9
KXfTk6w/s/bd9CTNl4lURSI1T9OTBBgiNU/Tkzx7Zu2n6Ul5mp6Up+lJeZqe
lKfpSZrFE6l5m56k8yKRmrfpSX6YH2u/TU/K2/QkT01Y+216Ut6mJ+VtelLe
piflbXpSRtOTMpqelNH0pIymJ2U0PSmj6UkZTU/yeZ+1R9OTMpqelNH0JD/a
kLVn05Mym56kSKRmNj0ps+lJWloRqa8Wg9j0pMymJ/kJi6w9m56U1fQkG/qs
vZqelNX0JK3wiNSspicpEqlqlUi1c8Daq+lJWU1P0vmXSK2n6UmKRKrmmkRq
PU1P0ksiUutpepKfNxkcqulJ9V7lQCRS62l6Uo2mJ2m9S6TWaHqSyE2k1mh6
kiKRqreISK3R9KQaTU+q0fSkGk1P8gtE7TWbnlSz6Uma1xCpfvoma59NT6rZ
9CTN+YjUmk1PUiRSda4mUt/dui+upifVanqSHwLK2lfTk2o1Pck3kbD21fSk
Wk1PqtX0pFpNT9K0jkhVJFK9FcLad9OTajc9qXbTk3SWIFJrNz2pdtOTajc9
qXbTk3S2IlL9SFTWfpqeVKfpSf6IsfbT9KQ6TU+q0/SkOk1P0iSXSK3T9KQ6
TU9SJFLrND1JYCND6zYfybN29nybj1S3+Uh1m4/kJ8Ky59t8pLrNR6rbfKSK
5iNVNB+povlI71kDsflIFc1H8oNp2XM0H6mi+Ui+sYk9R/ORKpqPVNl8pMrm
I2mpQYZWNh/JP4W1Z/ORKpuPVNl8JE2mydDK5iNVNh+pqvlIimSoFkBkqB/T
y9qr+UhVzUeyjsPaq/lIimRoVfORqpqPVEUfyS8XDNUf6CMp0kdSpI/kCIYq
0kfSH+gjpXcri0PRR/L6DwxVpI/kCIamATsw1KCP5BU7GKpIH0mRPpIifaR3
/s+h6CN5VQqGpp+dXByKPpKfRgmGpu+9Y+2TPpJjsfZJH0mRPpJXw4e1T/pI
6Y1s1j7pIzkWa5/0kTRBpI+kSB/JezubtS/6SF6UD9a+6CM5Jmtf9JEU6SP5
UZ2btS/6SFru00dSpI/kWKx900fyVsFl7Zs+kiJ9JD8idLL2TR/JsVj7po+U
3oJh7Yc+krcoNms/9JHSz9Vm7Yc+kmOy9kMfSZE+kk+am7Uf+kj5TgG/eOkj
ORZrv/SRFOkjKdJH8kXYxdovfSRF+kiOxdovfSRF+kjevzmsPegjKdJH8nNb
B2sP+kiOydqDPpIifSRfxNqsPegjKdJHSj/snLUHfSRDIFl70kdSpI+kSB9J
kT6SIn0kx2LtSR9JkT6SIn0kP8V2s/aij6RIH8kP0npYe9FHUqSPpEgfyZtq
m7UXfaT0MoW1F30kx2LtRR8px0MfSZE+Ur4XzhHpIynSR3IEUhXpIynSR/Ij
folU0YlIHQ99JM0e6SMp0kfy3JIM9WXIxX9LxUiRipEjKSnekJJjUDHybiUp
OSYVo/Qj9tnkpGLkhxaTkr6KwyYnFSNFKkaKVIy8FUBK6tNLSo5FxciRlNRM
hZQci4qRH6VMSmoWQEqORcUo/dsVh6Ji5McTkJJjUTFKf+EAa99UjPwIZ1JS
531ScmwqRo6kpP4mKfku0RGpGClSMUp/7wFr31SMHElJ3zfP2g8VI0UqRv6K
RFJyHCpG3skmJRVJSS+HWPuhYqRIxcjPtyYlVSopOS4VI0UqRo6k5LhUjLy/
TkqOS8XIp2NSclwqRjkuFSNHUnJcKkY5goqRIhUj7+uTkiOoGClSMXIkJUdQ
MbKPQUqOoGKkSMXo99xD1p5UjHx5gZRUJCX9nRisPakY+SnjpKQmyKTkSCpG
ilSMHEnJ96ciUjHyRQ9S0l/NwdqLipEfdk5K+tEOrL2oGClSMVKkYqRIxcgX
W0jJUVSM0j8TtetPpOR8qBj5EeykpPhKSmq1QErq5E1KzoeKkSMpOR8qRp6o
kJLzoWLkR7+Tkr4kj9rnoGLkSErOQcVIkYqRIhUjX4kiJbXOJCXnoGLkJ9CT
kopceGotRWjOScUofb2TtU8qRl51Eqk6bohUf20La59UjKzhEqmaxBOpWtIR
qXNRMVKkYpTvfisjkaqXTKT622NY+6Ji5OfxE6lzUTFSpGLkSKTORcXI0CNS
tfwjUtUckeq9Lda+qRg5EqlzUzHyUxKI1LmpGClSMbIxRqTOQ8VIkYqRI5E6
DxUjRSpG/rICInUeKka+HkSkzkPFyJFInYeKkS+WEqnzUjFSpGLkL0kgUuel
YuRIpM5Lxej3EFvWfqkY+SItkTovFaOcl4pRzqBi5EikzqBi5Gv9ROoMKkaK
VIz+hhBEKkaOROoMKkaKVIwUqRj5GySI1JlUjBSpGDkSqTOpGPk7xojUmVSM
0p9P1p5UjNwqkTqTipEjkTqLipHvTCNSZ1Ex8pVzInUWFaP01z2x9qJipEjF
6PfLs/aiYqRIxUiYo2KkSMXIkUhdDxUjRSpGJiaRuh4qRopUjPztOETqeqgY
ORKp66Fi5AeHEalrUDFKf/kVaveFGtS+BhUjRyJ1DSpG3m4mUtegYpTvxTNE
Kkb+7BKp/g4u1j6pGClSMfKXnBCpa1IxUqRi5C8vJ1LXpGLkSKSuScXo970O
rH1RMfKXqxCpa1ExUqRi5EikrkXFSJGKkXeriNS1qBjlWlSMvFFCpK53kYpI
pK5NxUiRipEiFSNFKkZ2TIjUtakYORKpa1Mx8tfuEqlrUzHKdagYKVIx+l16
YO2HipEiFSObL0Sqv5+NtR8qRv7GGyJ1HSpGilSMHInUdakY/W09gEjFSJGK
Ufpr4lj7pWKU61Ixyt93SHIoKkb5+6YaDkXFKFdQMcrfI1Q3I5H6e1AThgoq
RrmCilH+7iDkUFSM8ucpcygqRrmCilH+rqdhqKRilL8lPoZKKka5korRj2Ss
PakYKVIxUqRipEjFyBoUkbqSilGuomLkSKSuomLkL0ciUldRMVKkYpQ+TbD2
1xJ6/h9J307i
    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.839666116580789*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"44a75b1e-fc55-44e5-8d5b-a8c5712a20de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "%7", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[8]:=",ExpressionUUID->"56ada8b7-6acd-48ee-ac6f-fb1f826fda25"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxU3HlcTO3/P/BJshQ11Y2yZLTYy9gVaibZi7EVLRpFUqkpJSFGdsJYWigZ
hJQ0QtYYspQsUyi7CVmalqHIln6v3tfn98f388f9uZ+P68yZ85prOdd1ndPd
yy9s5qJWHA7ncVsOp+X/8T/JQ1uNkP2r1gn/kP+E9bKMR3ovLGmxytJOI7SY
1rdD4DBVizlu8I73tlU9vcj8aLhGMXflvBPPWiw+DKesSzsd2O1Vi2XF8Mik
w89bm1e2WPkdTrzm0CeVWdtzkEYYbLDKrm7N+xbzpsAO9gu7l5m+a7EoEl6h
/R2VVfSyxdI0WGH+Yvsts+ctVhTCLgGtw0ZwX7dY/Q1+W3uvRP+LusXcHnyN
0MZp19EJ3ciCifCaIWObD5e/bbEkHK5/cvKZnQNZngJfN3H+ZLOUrl91G3Ye
2ahXPvMF5dfCo+KNvjy4S+Z3HawRCl8Pfm+/lix2gflPv3T2X0fXKwuFvRoG
tRnqRlYmw/ULLx0TRL2h/DdhS73GFXu96Pt5NbDPpgDThcPIoi5DNMKZ9W/S
d3+gfFIh3BQauqXzMLIiGD77aLuxRQjLnwCvLS+dkP+Zzs9Vwrz6KUMuVFG5
oAo23JQ1s0Mh5ZP8N1QjPPC0dHa3HLLcEe4UMFvw6AVdryoQ1swL8G5TxfLv
hUfPjfE5daaM8ufDbnlbWjn+Kaf8n+C/XmcutU99SvmNh2mEDbmX/QeMfEL5
R8NBXq53Lz2gcu0i+On1v0YZX6mcJ4OXHBcXfLMjiy7Dq5Inttlw/jHl/wBP
uf/PzNaXyhWGwzXCx1v6xa/IpPOpR8FnL92+VTqSzPWHuyiuRr8uoeMFO+A3
78otJ8rJkguwdNRd15OFpZS/Al47z8xrUjO1b5XBCI1wr9MwfRcbKueMgH1f
uL/zSmftXww/9jXxb191j/Jvg6ucuW17bH5I+c/Boklxi5M6Un9SvoHf6wcf
ufTmEeVvN1IjzA82cew5h8wbCv+73+B67TJZ5APv6++/NfUVnU+6GR4y1q76
c5sHlP8MbPHtxty/+lSufgmf1cR2mWZ1n/K3GaUR2i5a6d/2PFnAh8/smPOp
kB0v8YQNuraWpDVRuXwDvMqUc/TgDDq/6jTs83VOqd5nKuc8h91qf1WXGJL5
uvYa4fOr4wpv2xRSflu46MDSN+e/FlF+D3hERd2srNtUrlwHWy/apvw2jsq1
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
Rfvv1/fiw0yWfwr8ufPogI62ZFkkbHvK1fHoTLb+S4NHdDiQY/mCrC2Ed6c+
FhteJvPq4bknoiYvnU0W9VC3vM9yr+TYQVb/E+E7iyVbHaax/OGwiUnEo4PV
rP5T4LbZgycls+/n3oG1a+s3p3ckC7Rw0SujP/X6bP3btQLj9/wp72aksvWv
C+w9v0Y0T8bqPxRWdez7ufKnH+XfD9cNGbDULIXML4D/a/PIfcQrsrgG1uro
z7TwIcu6vNMIA4ZsflwcR1YK4S59DlU6u5O1wXBlmv/A1jbs/p/YUp51RXf3
f+z5jxK+Enl28YDV7PlPFXxr0ekOvaxo/0Lx33vMF7yNV6d0YPu/jvApvUX7
NSVs/2MJXBRX+d+MMtq/EeyF/823v3i+D1mSD+//+OTp1+Xs+dcnuKD4zIee
v8kq4w+ov8ZOwxxj2P7XGLhrqZVjcDbb/wuAT02ZkO3di+3/yGD+gDN1PfJp
P1V2GU7csCPMaSnb//wA//BYcSdyBZVrDSs1wp/2OXnr2P4rzx5+ZJBw/vUG
Ol7kD5c4PEsaPIrtf+6APc13XF1Zwvb/L8A2V7rxLt2gcnUFPH25KnYi2x/j
dvioEd6ziArz7ML2f0fAt7bvS7U6xPKL4T3z9824uJHl3wZf0imL2H6E7X+d
g7vuM43pzfaXOW9hvh7fqldnlr/9J40w9fuk2Wtu0efFQ+G0KRF3ntSz5x8+
cNGz2KO/b7Lnn5vhezpzrfck0v6y9gw8WrMtxpw9T+G9git6Be3xv0kWtfmM
+YHZ1YzG22QpH57T58iqQwp6fqvwhL0Wbem9ewtZvQHeNTWmdosRnZ+bAz/L
s1l6wowseA6/95As6sGet0h0v2iEBzLqPa99oHK5LTzjo8X4uc/Y8x8PWF9H
mpVbx57/xMHZpn2tdjHzT8EHHS5MsBLS+cRlsPmb75wPY2g/XMap0ghzNHvS
G3PoeZeyP2z45KzTi3ZUrp0Nj70ySH1Gzp7/rIUb/jTOOXyOrkd0Ek44srFo
XDR7/vUYDhoS3MUphT3/aoL928xO22/Inn/10WiEPjeFDgXv2fOvmXDhsTHR
t5rJgtWw82hP0+vs+Z7kODzbVKuuXU2Wq+DrHRwnh71j+/+/4XjhcDtP9nya
Y1ON+X2nVoMObyLzp8N/Z3S7Nc+N5Y+BJyV72wUtZPV/FM44MPCx6hSr/wcw
J2zen5Bd7PlXI6xzen78HG+W37Km5f2refmNnVn9u8Idkt67luez+l8Oxx/9
8eGKHv3+Cjl8Y9gFg5XHqVx9Dx7ULlAj+ULl3O/wu7viZIN69vyvZy3yGZww
rj3Fnv9Nhvd2X/Hhnjt7/rcMdtjbz2mZL1l1EH71stuCW5tY/RfCHXedcbKQ
svr/Bp/z2/XoVgB7/te9TiNM/2qyJ449T5RNgCMWGbVzZ88HlZK6lr9n7nzI
dhJZe6Du/4+H7PnnbfjPY6fq/UFkUR28ZkZ/mykbyVJzLfI/idr3rIjyKsbB
d6MGfvitYvmXwkeltnu198ncZFi8rlehdx1ZcBMO6Z6WwjVj+avhLq7X63M7
svydv+J6c859Gp3H8gvgY4sXNU5+yfIHw/Pe5bYPPEvtg58AN7XK+tKN9Wfx
ddjm1LSxhVZk2RfY5atJ4Z+vLL/pN9zv/lP2udGf9f+x8NfntVYjWH/lBcJ2
tRcrqn+x/Hvg7FGTBjcfZ/mvwit6PbtU5cX6/0f4SIj6yvhprP9z6zGfWnpz
3+Fken+DOxq+WxifOduPvf+xCDZ+sz/4Yx1ZsgsulQ1do/t5CuW/BFvs2r1x
Yhy9X6J6D08zd3vfPmMS5TdswPi8sXLh5hf0vgl/FOzp13ec6Viy2A8+GNns
sHKFC+WPh5N8+ZcaOeMpfx5skda3bty2cZRfDaeNzQ1IKSfzDL7jfjfr4dSo
TnQ+0XBY/4YwOngofV7qCxd9Tu+UsITOr9gKr35mPundIipXn4XvNFVssflH
5dw3cOeSiMlxx+j8gnY/kKeHy792FWTJEPjIhiEd8lY5U35veLE+5+zvePb+
zya4rKH8YNFj9v7PGVjt1NTX7xB7/+clfOZVg4FZP3o/R6zXiPXPkLdBa7ey
938GwYeGfmz8oc/e/5kHV/pvH2Tkwd7/WQ9HCAYeyR9J7w/xTsMlqY3vzi9x
pPzP4PVbJii+RZGlrX7i/pGT//beDbJiIHzVcUl+Xl/2/pM7vMYufcXtMZSH
u+5ny/vZmz7/HkcWZME2A5caD/tBv4/kKdxVP9Xj3XX6PeTNsLRm23BnI/o9
Vf1+Yb7sf+O/HwnUHjiz4XmPvjt4TZ1M+dfAKZN2+UiCqVycAStbdexyu5As
K4WtXz/pVtiG1f9fuN3mk64XH1N70vb+jfo7OnL76w9k3gz4r2/larU9nV+0
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
+Z6p6/C8l1N1bvF0yncsgSu+W9ZpRPeD0J3wlG/9L+7RfPck7K4jCs+i+XvX
TdhWxjW/hvJZnBfw28nq54Ot6Xl3srWY758kZ2+fQfN9YzikWCN5Eo0fIidY
i68S8Gcu5TtOwLa6R0tu21P8N2DvgjtuH1ZS/M/gs21bdY8MUvxy6zHfCUvL
L5pA8S+EeS49R97Q8Sq3wYXXdQa0KF8jiYB9H9SN0+JRvqcA7vYbfbDkKK13
6YBdn1k0bqTn6VBZGzF/HHfPsNw/NN79BOcEx8j50/jbtRU2Obhw661XtN7t
KBwidbJjUgf1e8iFc5sDrkS10v3uMVw6K2bE2pKN/yIZgZj/4IxuQq4z3e9+
hE9cupzrJEv13ltgfW6NRHky1XuHwbFrFaXV7lC+PwfOOyTvFNhM+e6/4Ymm
09IMZlK++yt8dZqh3OlFlO/W24D9ly28b6lC+W47OKBI3fuegPLdIbC2kzrX
9iX1O7kCv+1e0ifjzo6f3wLPNb1wrSCauWsUjnFb8Vnme2bOvI1i/miSpNap
jO73G+Am19Jbw9RvwicIzj615dXbccyiTFisctQz4h3d7xrhU2ZC38Egut+N
wK1W6ulmdH/izrUV8yeXTzhWcJnyfevhFxkzErc/p/gPwLnzrb6Gj6f402Gn
xXYPrcyp38UDeGjgyPUxaWbNIdj4cby0w03qd6Flh/m1+myngxoU/y+wQrDE
/Tz1i8j3g1VLnmptSaT1fr/D39LjElea79TBMYKwuOI2iv9fOLpkMPtLHp3/
WZswn+vs4x21pfu9FXy60OPapSsU/z74f6arldQiKf6LsL6pTnxlDeU7a+DN
eqadUbF0/v8Hh5TZOHatoPWOGpvF/LF/C16FD9B6x1XwLI8/LUS3KH5v2HCR
wh7heYo/Gb6wuShbjfqTCO7BrhVvbt65QPf7d/D1hOm597Lo/KtuEfPT/3kg
CA6l828G1x1+elZJic6/J+z0tyR70hjFfw7+74hjfaopnf878Ji8SfRQGJ3/
N/Azrd5upXV0/U+3x3zMN3Tohipd/zw4+IV/slEmve9wg9/WTb1eWU3vOxLh
0agvdTwDyvffhl/uDR53z53y/X1wTM6aZxViet+htBXzzymLSh6OUb3/cnh2
fbP31Riq994D3y5vvfjdNXrfEQfn/N6hmPIjve+4BTcFq2q06rH6666X8BTN
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
Vj0=
      "]], 
     LineBox[{{3.8231790526888204`*^9, 545.5326591200958}, {3.8232*^9, 
      532.3376098437298}, {3.8232864*^9, 521.6345941012655}, {3.8233728*^9, 
      526.6630394788104}, {3.8234592*^9, 510.8180562169026}, {
      3.8235151303662376`*^9, 545.5326591200958}}], 
     LineBox[{{3.8236084245000377`*^9, 545.5326591200958}, {3.823632*^9, 
      538.435841522012}, {3.8236524189999413`*^9, 
      545.5326591200958}}]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6478944*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6478944*^9, 3.839616*^9}, {0, 545.5326591200958}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.8396661465620985`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"7cf1e22c-430d-45df-8758-993be9a698bc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Dogecoin", "Subsection",
 CellChangeTimes->{{3.8395832284908714`*^9, 
  3.8395832460539293`*^9}},ExpressionUUID->"c82c5cde-4ded-42a8-8666-\
4428ff92a005"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DataDoge", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "ResourceFunction", "[", 
      "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<DOGE\>\"", "]"}], "//", 
    "Normal"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8396661967051144`*^9, 3.8396662071492414`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6040415d-3704-44a1-98a8-2844f78f3d96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DatumiDoge", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DataDoge", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "DataDoge", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8396663175348587`*^9, 3.839666329822886*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"76ee9dc7-9191-4da2-af4f-a0d00d6fcc28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VrednostiDoge", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"DataDoge", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "DataDoge", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.839666353396318*^9, 3.8396663652926526`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"f54fbcfb-a9f5-41b8-b79c-734d7ba031d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VrednostiDogeNormirane", " ", "=", " ", 
   RowBox[{"VrednostiDoge", "/", 
    RowBox[{"VrednostiDoge", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8396663828919077`*^9, 3.839666393269467*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"f292617a-89c7-4b39-b22e-cfd4eb6ca3e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeries", "[", 
  RowBox[{"VrednostiDogeNormirane", ",", 
   RowBox[{"{", "DatumiDoge", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.839666419335785*^9, 3.8396664267761517`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"5202a8d5-c127-46d7-adb1-e65e955b36ae"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["TimeSeries",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAA5ip3sGn46kFj4yYPBQDwP6RHUZY+
/+pBWc3TY0/O7T/xAcaXpgbrQbZCn98zaOg/fm8W9JAN60HyKV6DFg/jP2be
LJZYFOtB9S2h0Vbl4D/c6t1TsxvrQeFXYyI9UNk/k6pqbJAi60HT9wOfCpni
P9gHkqAAKutBqqyxZMRJ5j94Zn8aTjHrQZ62Aziid98/WHhI7x0460GCytkt
/GrcP8cnrN+AP+tBW5yKD6bA3j92iusqZkbrQYiif4adYOE/gO7wuyhN60Ht
J7tx2rPxPxnwkGh+VOtB6EvuhuU27T/ypAxwVlvrQRbFZ4CKm+o/Wvcik8Fi
60HpR+ApGLzwPxxL//sJautBGbb/GL+N7T8fUre/1HDrQfaWG1WWp+w/sPYJ
nzJ460HpwbAui1HqP4JOONkSf+tByjEEDfFn6j/iQwEvhobrQTBs/9Hequg/
nTqQytaN60F2zd/09MjqP5jk+sCplOtB1SdLJ004/D8iLADTD5zrQbU3hw48
xCtA7SbhP/ii60H7wjuaZqMbQBIjiPK9qetB8BwIhq5GG0DGvMnAFrHrQbAO
FWTBhw9Augnn6fG360F2zCgXPnUbQB7SLq3cu+tBT4YPiNX5QEBYMfDU
                   "]], 
                  LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7it/K9rE60FPhg+I1flAQBrgHLmr
xutBQFNNvRziOUA4f3aeec3rQWz/dTObzyRA5Ltqn9rU60FAwC0qUL0vQNGr
Ovu92+tBNF0XZkfoIUAYndCcfuLrQReYLOpOFiNA7isBWtLp60FzjEygfjY1
QARuDXKo8OtBRQ8GKcssLECpTbSlEfjrQQekd6OQ8yBAj+A2NP3+60HQfPdp
e9EdQM90fwjGBexBsDvAnSPUHUCepmL4IQ3sQWNVRMI8dSRArYshQwAU7EHE
LZPkw94mQEsOe6lxG+xBCTcFWVTWJkBDkppVwCLsQRQCaavC4CJAfMmVXJEp
7EGGTbl/xgoiQEOeK3/1MOxBz3DPDq1NIUBLJp382zfsQZSDW2kksCFAra/U
v58+7EHkaEag57UkQJ7Wpp72RexB4Ktk4SkTHEDQsFTYz0zsQQLbLksrDCNA
kCidLTxU7EErsD54rlIhQKuhq8iFW+xBl5Qukm1wKUAGzpW+UWLsQfUGW3SM
pSNA8Jca0LBp7EE1AbM3x2wjQBoVezyScOxBQlL8cO/cKkB1Um4h2nHsQU+G
D4jV+UBAd//MJQ==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$178379#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3839616000}, {0., 
                33.95182896383323}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"03 Sep 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2540", "SummaryItem"]}], "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1.6]], 
                  LineBox[CompressedData["
1:eJwB4QEe/iFib1JlAgAAAB0AAAACAAAA5ip3sGn46kFj4yYPBQDwP6RHUZY+
/+pBWc3TY0/O7T/xAcaXpgbrQbZCn98zaOg/fm8W9JAN60HyKV6DFg/jP2be
LJZYFOtB9S2h0Vbl4D/c6t1TsxvrQeFXYyI9UNk/k6pqbJAi60HT9wOfCpni
P9gHkqAAKutBqqyxZMRJ5j94Zn8aTjHrQZ62Aziid98/WHhI7x0460GCytkt
/GrcP8cnrN+AP+tBW5yKD6bA3j92iusqZkbrQYiif4adYOE/gO7wuyhN60Ht
J7tx2rPxPxnwkGh+VOtB6EvuhuU27T/ypAxwVlvrQRbFZ4CKm+o/Wvcik8Fi
60HpR+ApGLzwPxxL//sJautBGbb/GL+N7T8fUre/1HDrQfaWG1WWp+w/sPYJ
nzJ460HpwbAui1HqP4JOONkSf+tByjEEDfFn6j/iQwEvhobrQTBs/9Hequg/
nTqQytaN60F2zd/09MjqP5jk+sCplOtB1SdLJ004/D8iLADTD5zrQbU3hw48
xCtA7SbhP/ii60H7wjuaZqMbQBIjiPK9qetB8BwIhq5GG0DGvMnAFrHrQbAO
FWTBhw9Augnn6fG360F2zCgXPnUbQB7SLq3cu+tBT4YPiNX5QEBYMfDU
                   "]], 
                  LineBox[CompressedData["
1:eJwBwQE+/iFib1JlAgAAABsAAAACAAAA7it/K9rE60FPhg+I1flAQBrgHLmr
xutBQFNNvRziOUA4f3aeec3rQWz/dTObzyRA5Ltqn9rU60FAwC0qUL0vQNGr
Ovu92+tBNF0XZkfoIUAYndCcfuLrQReYLOpOFiNA7isBWtLp60FzjEygfjY1
QARuDXKo8OtBRQ8GKcssLECpTbSlEfjrQQekd6OQ8yBAj+A2NP3+60HQfPdp
e9EdQM90fwjGBexBsDvAnSPUHUCepmL4IQ3sQWNVRMI8dSRArYshQwAU7EHE
LZPkw94mQEsOe6lxG+xBCTcFWVTWJkBDkppVwCLsQRQCaavC4CJAfMmVXJEp
7EGGTbl/xgoiQEOeK3/1MOxBz3DPDq1NIUBLJp382zfsQZSDW2kksCFAra/U
v58+7EHkaEag57UkQJ7Wpp72RexB4Ktk4SkTHEDQsFTYz0zsQQLbLksrDCNA
kCidLTxU7EErsD54rlIhQKuhq8iFW+xBl5Qukm1wKUAGzpW+UWLsQfUGW3SM
pSNA8Jca0LBp7EE1AbM3x2wjQBoVezyScOxBQlL8cO/cKkB1Um4h2nHsQU+G
D4jV+UBAd//MJQ==
                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$178379#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {3.6199008*^9, 0}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {3.6199008*^9, 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{3619900800, 3839616000}, {0., 
                33.95182896383323}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               TagBox[
                TemplateBox[{
                  RowBox[{
                    TagBox["\"Time: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"17 Sep 2014\"", "SummaryItem"]}], 
                  RowBox[{
                    TagBox["\" to \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"03 Sep 2021\"", "SummaryItem"]}]}, 
                 "RowDefault"], "SummaryItem"], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Data points: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2540", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Regular: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Metadata: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Minimum increment: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "\"Day\""}], "}"}], "SummaryItem"]}]}, {
               TagBox["\"\"", "SummaryItem"], 
               RowBox[{
                 TagBox["\"Resampling: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\"Interpolation\"", ",", "1"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  TemporalData[TimeSeries, {CompressedData["
1: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
jbj/bp/5fxmbYiI=
    "], CompressedData["
1:eJxdnUsS5MpyXJ/MOJF2wR0gvxGxBJlpxCVoQDOONKCWzUXQvdBsnODk2fV3
b2dXeaFwMhMHqH/+v//vX/71f/zjH//493/S//yff/v3///f0n/8T6T//b/0
D+uOqufJ5/lixvwb9U+xLuJQQJz7bsS1ZiLuURzqPIdDHf/LL95IDhV3c6g8
g0PVCgw19Dow1Bjj2Yx1MdSYuTDUWLc41PZr/OLZk0PdmRwqxuFQ+avni/5v
v1ixMZTeMGqf+otZ+5yLtU+/YsT9sPa5i7XPE6x93svaZxzWrjJY+6zJ2tcz
WPt6irWvkax9zWDtax3WvvZm7etM1q4Dj7WveFj7imTtK4O1r7qsfT+bte+x
WPtW8Rhqr4e171Wsff9G+uK5rH3fw9p3LNa+c7L2XYO1b33NMNR5krUfHVgY
6ugTxVDn94a+qPfAoc5g7XoNrF0fCWs/Eaz95GXtpzZr10is/Y7J2u+vV8Ri
7Xcla7/7svZ7Dmv/tYwYk7XfHKxdb4i130rWHr+P94vjsPZ4P+G/cS3WHnuw
9jgPa49TrD1usHb1ytp1amPt8TvK/sZ8JmvP8bD2HMXaU/8Hhsp1WXvuw9rz
bNaefsuIMVj772zFmKw9K1h7vafvv/E9b/6N7wnrb3zPFH/j+xX9YrH2eg/K
v/E9Gv7G92P4G9/3/ze+f/GfuPTnUPt60xdHovb16FBKxHUOh9p7cKjfV/+L
d2wOFUSqIpG6niRS1/ui/kahC7WvMYhUHZ9E6hqLSFUkUpeQkhzqEKlrXCJ1
jSBS19vNF4tIVSRSVTmRunReYO1zEqlLJGDtOiOzdp37WLtOOqz9/Yi+GESq
iiJSlw4s1q5PlLX/vuqIk0hVJFLXWkTqWptIXe+R8sVLpOqPEqlrJZGqSKSu
VUTq2g+RuvYgUt0ja1dg7e8B+8VDpCoSqXpDROraQaSunUTq2kWkLg3M2s8g
UhWJ1PV+b764iNR1NpGqXolUzSeI1HWCSFUkUpfeH2s/RaTqFRGp6/36fnES
qb/vCobSC2bt+lKx9nuIVL09InXdIFJ17iJSNRMlUtd7FkEkUlcMIlVHGZG6
YhGp6/c9QTxEqr74RKoikboiiNT1nsy+WESqME+k6mAnUldOInXlIlIViVR9
iYjUpRfB2gUn1v6eU7+YRKq+ZESqIpGqv5VIXTWIVB2BRKomiETqqk2krjpE
6npP7YhE6qogUvXVJ1JXFZGqP0akbk3MUfvWVxC1KxKpOl6J1P0S5ouHSNXS
gkjVGYhI9XsvDpVE6n6KSN3jIVL3GETqHpNI3S/ovriJVJ35iFRFIlXjEKnv
vA0xiVQtSonUrTUtat9aTLL2l7dfnETqnotI1fmYSN2aqbP2eYlUHTdEqiKR
aiiydp3ZWfuL/S8OIlUcIFK3UMfadfyy9rWJ1K3TKGvX+Yu16zzC2vWNZe3v
7ONv1DCsXQcHa9eHxNrVDmvfi0jdyqxdlGDt+xKpikTqfidBX0wide8iUgVJ
ItUfJ2s/k0jdZxGpikSqJuJE6j6HSN3vXOyLQaQKzkTq1lKDtZ8iUvfvE0Ic
ROr28hFDeYqBoXyQcqhDpCoSqfteIlVTBiJ13yRS9SEQqTseInXHIFJ9ULF2
nRZZ+zsz/eImUtUykSpmEKlbp1jWHkmkKhKpWzMI1p4PkbpzEKn7nSB/cRGp
mjERqYpE6s5DpO68RKqOUCJV745I1WyDSN31EKn7nacjEqm7JpGqeRyRutUF
a69DpOpfEam7gkhVJFJ3JZG63+XCf0WdyonU8wwiVdNJIvU8i0h9F+GMROrR
tG5yqEuknieI1POuWr5YRKqmsUSqIpF6xiBS9bUhUjUJIFLP2ESqVziLQ10i
9byLpy8GkXpGEqmaXBOpx1uuGGoOIvV4kxFDaZLL2r2txqE2kXreNdwXL5F6
ZhCpx3sWHKqI1DOLSD1eHmMozbVZuxeEGMorMQz1LiW/eIhURSL1eLbNoYJI
PSuJ1OOJHYbSjIq1eyqDofYkUs+7ov3iIlJ15BOpx5zgUJdIff8dYhKpikTq
8ZcQQ/nox1DvwvqLk0jVSotIPX6HHGoTqeccIlVkI1LPCSLV/y1r1xeStb/r
+y8OIlWRSD13EqnnLiL13E2knnuI1HMvkeqXzNpvEKnn3Wb4YhGpJx4iVctQ
IlUnICJVYCdSFYlUTbaIVDVHpIqnROp5dzu+mESqlr9E6smHSFUkUk8OIlXT
DSL15CJS/QGy9jxE6nk3XRCJVE3TiVQtyonUk0WkvjuqiINI1YFDpPo4Yu21
iNTz7v188RCpOi8QqaeCSNWkh0jVbItIVSRS9d8RqT6cUfvV0Yza77sF9cVN
pN7nEKmKROrVWmpwqCBS9RkQqSIKkepvFWrXdJlIve9OGCKResciUu/YROod
h0i977v/YhCp+jYTqYpE6h1FpN53Q+6Lg0j1JTHWLqCydrXK2t8P4YuHSPX1
Btaucwxrn0mk3ndf8G9cD5Hq3VvWvgaR6v1K1v4eC1/cRKq3xli7r8xyqCBS
77s9+cUkUr3vwNq14GftWniz9veQ/OIiUr3GY+17E6le1bD2d5f0i0GkegLN
2jVVZe2aI7L295vxxUGkejrC2nXiZ+0CMGt/N2u/eIlUn+tZu865rF1nN9b+
fkH/Rn29Wbu+SKzdF6InI5F63z3jL24i1S+atftz4FBBpN73PPHFIlIViVRj
kLXHIFLvu3X9xUWkXn2erD0OkapIpL6XxxCDSL2RRKppzNrzIVLvu4OOSKRe
HVasPReRqhUskXrfs+YXL5F6M4hUnyVYu3pk7e9G/t9YD5F6axCpOsiI1FuL
SL3vyRuRSL11iFTPTVh7BZF63+sJXywiNfQlQ+2KRGo8g0iNlyFfXESqDlci
VacnIjWeS6TGe1kDkUjVwpJIDZ3KUbt3zVB7vCj74iRSNTUjUj1TOxxqE6nx
Xl354iVSQ6ech0MlkRqjiNR31s5IpMYcRKonjKx9LiI13os8XzxEaujMx9rn
JVJjBpEaL9i/WERqrIdI9ZSIteufWft7remLi0iNtYnUWIdIjd+GLWIQqbGS
SNV8mUj19Jm176YnxW56knnD2nfTk0QQIjV205NiNz0pdtOTYjc9SbN4IjV2
05PiND0pTtOTFIlUnY2JVH+ZWftpepJmKkSq1l1EqhcTrP00PSlO05N0tiZS
9fKJ1LhNT4rb9KTXdUBselLcpid5TcPab9OT4jY9SecBIlUrdiI1oulJikRq
RNOTIpqeFNH0JC+tWHs0PSmi6Un6UhGpikSqEpGqCQSRGtn0pMimJ0U2Pckr
PNaeTU+KbHqSr9Kx9mx6kl4UkapXTKRGNj1JkUjV2ZlI1UKTSNWnSaRGNT0p
qulJUU1PUjdEqi+BsPZqelJU05Oimp7k9S5q17FOpObT9CRFIlVcJ1L1ERGp
+TQ96d2CQWx6ksYhUr3sLg7V9KQcTU/SvIZI1UBEqo4UIlVnSSI1R9OTFIlU
YY5I9fp2caimJ+VoelLOpiflbHqSIpGq45dIzdn0JDGCSNUhSKR6E4K1z6Yn
5SsOIBKpOZuepO8NkZqr6Um5mp6Uq+lJuZqepEik5mp6Uq6mJ2mySaTq5EWk
6utLpPrvZO276UladhKpuZue5C0Z1r6bnpS76Um5m56Uu+lJikSqvulE6ntk
fPE0PUnYI1K9M8TaT9OT8jQ9SVNvIjVP05P0NSFS8zQ9KU/Tk/I0PUmRSPUG
FWu/TU/K2/SkvE1Pytv0pLxNT8rb9KS8TU/K2/SkvE1P8j4Za4+mJ2U0Pckf
EGuPpifpAyNSM5qelNH0JM2tidSMpidlND1JkUjNaHqS3iyRmtn0JBGGSPX1
bNaeTU/KbHqSIpHqXUPWnk1Pymx6klZlRGpW05MEOiJVkUh999MRm56U1fQk
b16y9mp6UlbTkxSJ1KymJwkSRKqmvERqPU1P0hsiUutpepJP+4tDNT2pnqYn
aZFKpNbT9CRhn0itp+lJNZqepEik1mh6krdyUbsWS0RqjaYneSfocqimJykS
qZqMEKk1mp6kj5dI1Z8jUvV+iNSaTU+q2fQkRSJVM1EiVZMgItXLbNY+m56k
o4xIrdn0JG9ss/bV9KRaTU+q1fSkWk1P0jeBSK3V9KQX84xEqtYwRKr311n7
anpS7aYn1W56Uu2mJykSqZohEqm1m56kv4ZIrd30JJ9DWftuelLtpifVbnqS
Vr9EqmamRKo+AiK1TtOT6jQ9qU7Tk3y1gbWfpifVaXqSD1DWfpqepNdPpGot
QaTWbXpS3aYn1W16Ut2mJ9VtelLdpifVbXpS3aYn1W16Ut2mJ1U0PUmnNiJV
EzUi1ddeWHs0Pami6UkVTU8Sm4hULReI1IqmJ70XR7+YTU9SJFJ9CYi1Z9OT
KpuepBM7kaopPpGqVQuRqkikVjY9SVggUiubnuQrT6y9mp5U1fSkqqYnKRKp
WjwRqTrjEKlVTU8SnYhULQ6JVF8QY+1FPUlTTepJ3nEEUhWpJylST1KknqRI
PckRSFWknqRIPckzXiDVO51AajyDepK3FYBURepJjkCqIvUkRepJitSTwpcH
D4einuQNVyDVEUhVpJ4Uz6SepEg9Kd41GyL1JG9fDNY+qScpUk9SpJ7kbeDD
2if1JEXqSba+Bmtf1JMci7Uv6km/CTFrX9STvP28WPuinqRIPcmxWPuinqRI
Pcnfv8PaN/Wk8DVb1r6pJ3kX/GHtm3qSIvUkRepJitSTFKknKVJP0hmWepJj
sfZDPcm+wmXth3qSIvUkRepJv1M5az/UkxSpJylSTwpfwWbtl3qSrwlM1n6p
JylST3JM1n6pJ8VruiBST1KknhS+kM7aL/Ukx2LtQT1JgXqSHZLD2oN6kiL1
JF9pG6w9qCeFr+ez9qCe5BdxWHtQT9KhTj1JkXqSIvUkx2TtST1JkXpSWCtg
7Uk9yRdqJmtP6kmOxdqTelI8RT1JkXqSIvUkRepJvhFisPainqRIPcmXj4K1
F/UkRepJ4QtgqH081JMUqSc5AqlhyQK1CylAqmdTQKoi9SRF6kmK1JMcidR3
Aw6RelKMQT0p7HqgdvVGpI5BPcmRSB2DepIi9SQrvETqGNSTFKknKVJP+g2D
2hWJ1DGpJ/maHpE6JvUkRepJitSTFKknORKpY1JPCpsvrH1ST/K1RCLVzbH2
RT3JkUgdi3qSIvUkRepJ3vYkUjW/IFLHop7kS5pEqiKRKnQRqWNTT/rNy1n7
pp6kSD1JkXqSI5GqWQ+ROjb1JF9oJVLHpp4U41BPUqSe9F7DehiJVE16iFTr
SKz9UE/yBV4i1Yczaz/UkxyJ1HGoJwkD1JOsTRCp41JPCpfO2i/1JEcidVzq
SYrUkxSpJ9lPIFLHpZ4UI6gnKVJPciRSNRUlUkdQT/LVbyJ1BPUkRepJitST
HInUEdSTFKkn+a42InUk9SRfdSdSdY4hUhWJVH24RKptBtae1JPcBZGqMzuR
alWNtRf1JEciVac6IlXNEKmjqCcpUk+K92oKIvUkRyLVxhxrL+pJitST/FcS
qZoTEKnzoZ7kSKTOh3qSIvUkRepJv63qxaGoJ1mFIFLnQz3JkUidg3qSIvUk
RepJitSTFKknhf3B4FDUk7wKI1LNn8uhqCcpUk+KOaknKVJPciRS56SepEg9
SZF6ksUQIlUYJFK1DiFSNTCR6k0W1j6pJ8Vc1JMUqSd5S41InYt6kv0UIlWR
SNWfJFLnop6kSD0p3kkeIvWk0AskUi11svZNPUmRepKtGSJ1bupJitSTFKkn
KVJPciRSdcwRqSYoaz/Uk7w8IFI1NyFS56Ge5Eik6sMnUuehnqRIPUmRelJY
cWXth3qSpSEi1acn1n6pJylST1KknuRr30TqvNSTFKknORKp81JPUqSeZJWJ
SJ1BPUmRelL4zbL2oJ5ksBGpM6gnhYVf1h7Uk6xQEamaMBKpM6gnORKp+oNE
6ntpHJF6kiL1pLB3zNqTepIjkep5K2tP6kmK1JN8cx2ROot6kiL1JEci1dcd
WXtRT1KknmS/jEjVR0Kk6oREpM6inuRIpGoyTaSuh3pS2MJG7euhnmSvjUj1
KfRyKOpJitSTFKknKVJPUqSepEg9SZN26kmOROoa1JM8wydS16CepEg96bdj
XhyKepIi9SRHItVO+uFQ1JNs+RGpOu8TqWtST1KknuRIpL4rdkTqSYrUk8Jq
PGuf1JMsGxKpXlqx9kU9yQ/xIVL1pSJS16KeZKGZSF2LelL4KGLti3qS93qI
VK3wiNS1qCeFmEmkrk09SZF6kiORqtdIpPpGAda+qSdZvSRSPddk7Zt6kiOR
KpITqetQT1KknqRIPcnPmyBS16GeZAOUSFUkUnWsE6nrUE8Kg5y1H+pJPr8S
qetST3IkUn+PU8JQl3pS/G7a5lDUk+J3awiHop4U70CMROrvqheGCupJ8VtM
Y6ignhS/ryyGCupJjkSqpldE6grqSYrUkxSpJ/0kEtae1JMcidSV1JPMVyJ1
JfUkRepJitSTFKknKVJPciRSV1JPUqSeZFmYSF1FPclnGCJVZysidRX1JEXq
SYrUkxSpJylST7KkTKSuop7kSKTqXxCpvvyJ2vdDPUmRepIPBSLVd/YcDkU9
yZFI3Q/1JM8eiVTNtYnUPagnxbv9ikg9yZFI9Q1GxaGoJylST7LBTaTqJEKk
aspPpCoSqXtQT/LdKUTqntSTwntbrH1ST/JWAJG6J/UkRyJ1T+pJitSTFKkn
KVJPCuGHSPXtVqx9UU9SpJ5kn51I3Yt6kiL1JEXqSYrUkxyJVAGHSN2LepKP
GiJ1b+pJitST7FUTqVqGEalelbH2TT3JW05E6t7Uk8I3n7H2TT3JOj+Rqkik
7kM9SZF6kiL1pHipgEg9ydfsiFTfA8faD/UkRepJvsmASN2XepIi9SQ/9oJI
3Zd6kiORui/1pJ8RyNov9STf3ECk7ks9SZF6kiORuoN6kiL1JPsYROoO6knh
OwJZe1BP8j0WRKrfD2sP6kmK1JMUqSfpsKGepEg9SZF6kiORqqOMSN1JPcl3
fhCpO6knKVJP+h29rD2pJylSTxLXqScZ80SqDnYidRf1JEXqSYrUkxyJVB0J
ROp7LQ2RepIi9aTwbZqo/TzUkxyJVG/zo/bzUE/yzIRI1XKXSD0P9STfakik
KhKpvlCxOBT1JF+FJVLPoJ6kSD3JRySRegb1JEciVfQlUrWWIFJ902pwKOpJ
vg2ISPXfidoVidQzqScpUk9SpJ6kSD1JkXqSnwRHpCoSqWdST/LNSUSqVqFE
6lnUk8JbbKx9UU9SpJ7kSKT6Fl7WvqgneQuRSD2LepIi9SRF6kmOROo7xUds
etLZTU/yncSsfTc96eymJ/lKFGvfTU86u+lJZzc96eymJ+kUQ6Se0/QknxZY
+2l60jlNTzqn6UnnND3pnKYnndP0pHOanqRIpGpJR6T6vmrWfpuedG7Tkwwn
1n6bnnRu05PObXrSuU1POrfpSec2PencpiedaHrSiaYnnWh60ommJ51oepK/
+aw9mp6kD5dI1SKNSPVd5qw9mp50oulJ+hCI1JNNTzrZ9KSTTU96xQhGIlW1
Eqm+2Z21Z9OTTjY9yRdLWXs1PUmRSD3V9KRTTU/S+p5IPdX0JF91Zu3V9KRT
TU861fQkHaFE6qmmJ+nPEan3aXrSfZqedJ+mJ/nW/+BQTU+6T9OTfEnvcqim
JwkZRKreHpF6n6Yn3dH0JJ3KiVRNTIlUTSeJ1DuanqQvKJGqSKTq9Euk+npJ
caimJ93R9CT/TgBq94MQWPtsetKdTU/yw99Z+2x6kp9+ztpn05Pe/RrEpif5
kdasfTY9yc90Zu2r6Um+ns/aV9OT/KBe1r6annRX05PuanrSXU1P8mKYta+m
J93d9CQ/cJO176Yn+RGTrH03Penupif5aYasfTc9yU+nYO276Ul3Nz3JKw3W
fpqe5GelsfbT9KR7mp7kx3Kx9tP0JD95irWfpifd0/QkP+SItZ+mJ/mxPqz9
Nj3p3qYn+QkyrP02PcnP6mDtt+lJ9zY9yY/nYO236Ul+PgVrv01Peg8jxKYn
+aEDrD2anuS77ll7ND3Jyglrj6Yn+VZq1h5NT7rR9CTftcvas+lJVohYezY9
6WbTk3xLJGvPpif5JkDWnk1Putn0JN9vxtqz6Um+4Yq1V9OT7jttRyRSfRcN
a6+mJ/k2EtZeTU/yjROsvZqe5HsDWHs1PSmepidZQ0ft1sFRu8Vr1O7jqDhU
05Ps+E4O1fQkW62HQzU9KZ6mJ1mgRO02F1G7DULUblcPtb+b74hNT7IWNjlU
05PsRR0O1fQkm0DJoZqeZNkFtVs6Ye2z6Un2Klj7bHqSdzZZ+2x6UsymJ/mi
NWufTU/yZVrWvpqeFKvpSb4iyNpX05N8SYy1r6YnxWp6kj8R1r6anuTrDax9
NT0pVtOTvLXN2nfTk7x7y9p305NiNz3JG4WsfTc9yVtjrH03PSl205O8C8Pa
d9OTvO/A2k/Tk+I0PclLXNZ+mp7kNR5rP01PeucEiE1P8sSdtZ+mJ3nmytpv
05M8V2Ptt+lJno6w9tv0pLhNTzL5WPttepJPuKz9Nj0pbtOTfFph7dH0JH+R
WHs0PSmi6Un+zFh7ND3JL5q1R9OTIpqe5KOZtWfTkxSJVGGQSI1selJk05Mi
m54U2fSkyKYnRTY9SZFIjWx6UmTTk/yfsvZqepLeH5Ea1fQkP5SLtVfTk6Ka
nqQ1K5Ea1fSkqKYnaVJApL5XUhmJ1HyanuRng6F2HWREaj5NT7Jbmhyq6UmK
RKrmJkRqPk1P0qdNpOZoepIvU6H2HE1PytH0pBxNT8rR9KQcTU9S50RqjqYn
6aAjUnM0PclPSkPtOZuelLPpSb4GwNpn05P0gonUnE1Pytn0pJxNT8rZ9CSR
jEjN2fSkXE1PytX0pFxNTxJPiVRPGFn7anqSvoJEaq6mJ+VqelKupiflanpS
rqYn5W56kuZARKrmrUTqu8BDbHpS7qYn+fF1rH03PSl305OsP7P23fQkzZeJ
VEUiNU/TkwQYIjVP05M8e2btp+lJeZqelKfpSXmanpSn6UmaxROpeZuepPMi
kZq36Ul+mB9rv01Pytv0JE9NWPttelLepiflbXpS3qYn5W16UkbTkzKanpTR
9KSMpidlND0po+lJGU1P8nmftUfTkzKanpTR9CQ/2pC1Z9OTMpuepEikZjY9
KbPpSVpaEamvFoPY9KTMpif5CYusPZuelNX0JBv6rL2anpTV9CSt8IjUrKYn
KRKpapVItXPA2qvpSVlNT9L5l0itp+lJikSq5ppEaj1NT9JLIlLraXqSnzcZ
HKrpSfVe5UAkUutpelKNpidpvUuk1mh6kshNpNZoepIikaqPiEit0fSkGk1P
qtH0pBpNT/ILRO01m55Us+lJmtcQqX76JmufTU+q2fQkzfmI1JpNT1IkUnWu
JlLf3bovrqYn1Wp6kh8CytpX05NqNT3JN5Gw9tX0pFpNT6rV9KRaTU/StI5I
VSRSvRXC2nfTk2o3Pal205N0liBSazc9qXbTk2o3Pal205N0tiJS/UhU1n6a
nlSn6Un+irH20/SkOk1PqtP0pDpNT9Ikl0it0/SkOk1PUiRS6zQ9SWAjQ+s2
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

    "], 1, {"Continuous", 1}, {"Discrete", 1}, 1, {
    ResamplingMethod -> {"Interpolation", InterpolationOrder -> 1}, 
     ValueDimensions -> 1}}, True, 12.1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8396664299598236`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"8d94534b-67cc-45f3-a0ed-8ada461d686e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DateListPlot", "[", "%13", "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[14]:=",ExpressionUUID->"9cb228fd-b3c9-4801-a15b-6cd49e91cf04"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
vm/dRbubowzYg3pl4DyoDCkD+a22pgzMj3m5DOS3zjdl2H+oPT9rWXheWLss
7wdkVweVhfOasbIs7y+kx75QFvP/rwR/TPGZnhfNVA44UhNZH1AOzhfWsnLg
b+5ZwSMovhMHnyMrGcvD+UKrVp79n/pv9i0Pep3F5eF87p8uz/GN6oe3y0N/
1PQVYPyMKhUgf7d7VeD4QePtLagA56foCcHyPkHm/59U4Hgl8/80FcF/rIoV
Yf253SvCfAbzKsJ5TjmGrH1UEfzBfFIRxsspVwnK+10qwfPC2ZXgfKQeRrvx
fiU+L0v9jyrxfYL0/9KV8fzTqTKfv6l+ZCba9QOV4XxkvYfsPqgM6z1IqgLr
WelQBdavNk0wPW6TXP970e68XQXOJ/5fVaD9sHhVOM+obQXTcj8u87/JVfm+
Q+b/u6tCPPbeqIr5zx9VIT5HimqQ3+mtNMi/rAkanAfcHRrkN8GrGuY/oYb5
X6FqYDebV4N8zRlXDfrnb8Xy4UvI6i/VIJ8y8leHfM1Org75lDe6OvsPcXST
YArHWeh5Eb869Ee/h3YrTw3on9u4BtiDETVQ/wYsr92ogfnfDzWgv07OmtA/
v0FNsIdDa0K+qDpY3rhaE9q3v8P6XvZawNG6tVB/Ctr11bXgedYlZPfrWjC+
QZbascT9J7FSuzbYNbM21DdX1Ob1SvmEcx7r+19i/fD5OmBXa9SB+kb/OhzP
iO2ldSC/8c5g+ehnyJEMdTl+EusastUH2V1UF/Kh4BTaldt1oX0tXT0ob1ZG
dnrWg/L+fOTweD1oX/0Y2VDqo/4K9VF/N7RH59aHfC9ytD7ki/qH9TH/e4zs
lm0A7QWdG4D/KLMb4Pn/UAPIp8ygAcQX518s75dqiPcfHRtCfFRnNITztrG/
IZzH7XcbQnvePw0hvkVLNIJ8NNK+Edw/6VMbgb9ZbiNYb+5bjXD930dWijcG
1to0hvrmpMZ4/t3VGOKl/3pj6E/4O7anFmmC59+WyLbVBOKzt70J1I++gvbI
b2jXC+oQD61mOvTPHauj/i3Iyks6nn9/1jH+5UuG8o6eDPHTH4UcbsTy6gvJ
0L7xUzL0z87dFObXa9QUzhfR4U1x/1vfFPZP/TqWt75vCucVN9IM/Cmo3wzq
K0ORtbXNYP82ryA73zaD84SfrTk8L6yDrA5ujvd/q5rDerEvIntR5GjmFqi/
Vgvc/wei3VreAvrrnmuB558vWuD93/Mt4bylVW+J679fS7z/W9IS7pN8ryXe
/9xpCetBfa4V9M+o2gryJbt3K8x/F7aC81H0ZCvIlyOfYnk9bWvIl61KrSG/
dHu0hvgT2K1hfJTjrfH8d6s16n/aGvI3p3wbyC/9rm3gvBjOQbt6pA3kt8YH
beC8Y//XhudTvv8q05bz9b9Iv9GWzxOPSP+sttweva/WD7bl8aT32db/2sZS
v291Hz4rT+9jg5LteH6IlY7tOB79Rvqnt+PzJ7G5rx2Pr3z/+047Ps/Q8/y/
27F/EYdq+1jq98Fqu/ZQ35jSPpb6fb29p30s9ftr7832sdTvm6N/tufzg3z/
XawD5yfEeusOYLcmdoD23J0d4HnBax1iqd9vK78ja4U7xlK/PzdbdOT9Reof
3xH0+ds6sr9R/fDljnz/K99//9oR2jcKdGL/ILabduLzqnz/PUawR+cr4ujm
ThyPiSMvdoL3sXqsUyz1+2srrxFL/f7cbWLA+8xgpBFL/b5a2WjA+1ntpgHv
F80fDXg/6eTqDO+P/Yad4X1lOKwzn0/l+891yMa1zvA+1L7bGfrn5egC/YvW
68LnMfn+cwiyvqYLvL+2LnfB95/fdIH+Blm7wn2EUqcrrD9tUFd4H22uRLtz
oSv7kzz/f4XthZm6gV2t2Q3e7xsDunE8ke+/l3WD+fXOduP4J9//ft4Nxj+S
sTvMl16tO3wPYPXtDvPnLu6O+k93R/13ukP/tPQ9QK9ZpQfcdzi9evD9rbz/
WdAD7nvCEz2gffWTHvD+2kjTE/TZFXuC/3jde4Le6Dy0R471xO8fPuoJ3xtY
T3pyfJf6y/WC8kEXZGVOL/T/w8jm+4IJC0n/f4Tsl+6N/t+pN9RXZ/aOwfcf
B3rD8+33kL0HyNGkPvj+v0MfaE+f1gf17+2D8/822oO/+sB6UdS+MF5a276o
f3Jf8B9nN9r9N/pyPJPfP/zRNwbfvxTtB+vVaIVsT+gH+rwd/VD/q/1AbyTs
B3r0Qv3BbjXvD/Xdcf2hv8HW/lBfeRnt2i/IZv4B0L6TPADm2x89AOJZuGkA
xC/VRzbuDUD9eQbCevAaD8TvP0YMhPqRDQPhefoNZOuHgTD+bk4TvkcJGpgx
+P5pmAn7veaYnL/L/f+q4Ka038vvn74zIX/wsw+C/TasO4jvy+j7NTVlUCz1
93bG6kF830X5i31pEOc38vu3rwexP8jv37IMZj1UPlJ7MN/Xkl03B3P8lPnP
isF8vqD+u+cHw34cfDmY9yO5/2dK4fxc7v81UmB/N/unxFJ/T+gsTYF8wz+T
wvFc6v8shfNJ6o+aYQjnk1K/NgTyJbvPED7/0vO9RUN4P5T5z6khkD9Fbg+B
/urphrJ/EFuVh0K+5/YcCvMVzB/K5y2p/4Rgmd7L+f94KOZ/yjB+30bsVBgG
+aLfbRifP4nDuWhXj2J948NhfP9A/mQ/Hob7f9nhkL9EOw8H/47MRtYPDcfv
v4LhkA+5/w7H/KfUCFgPSqcR0J42YwSsN3M/svPuCPz+7Z8RGP9LjIT4qrYf
Cd87GVNH4vdv7kjIB7y3RsL3e9H7IzH/KT4KxltvMwrX/yRkd9co6G/w+iiI
18ofaNeKjAY2W46G8XOs0TAe/vbRcN4IXxFM0zuXyqu/IRsFx8D+bjcbA+15
Y8fA93nRLWNw/3tpDOy/+s9jYHysfGOhvKuPBXswaizEd2UTltdeGAv7g/nT
WMx/c4+D8fMbjYP+hsPRrq4fB/HYuI52+3u0e5HxkC9H64+H7wsjQ8fj/r92
PPifdWU8jI/77XjMf7JZmP/UtUCvNhjt5ioL9V+04PzhRy3of5h5An7/WGsC
6h84AcbLXj4B5sc7NwH0Rb+YAPMVeX4i5n/VJ2L+028izv+SidBe4KFd+Wwi
PF97bhLMj1l1EurvPQn3/4WTYP8OT06C9tVPsb6RdjLEB7vSZOif12My6Ina
aI8cR9ZvTcb5f4r13fJTwB+CrsjK3CmY/xyZAv0zP5gC+aTzH7JfZiq8Tw6N
qWBXZ02FeGYcnIr6/4flvYfYXrTkNOBIx2lwXtGnT4PzmrUP7e470+B5wd/I
SonpkN9q7abj+XcK2p090+F5/pvTUf+f0yGfVovNgPaM1jMgvtoTZ2D+uxM5
+toMnP/fZ2D8KzwTv/9uMRPnf/xM1L9tJvRPeWUm9E/7dSbmvwVmwfw5TWfh
+X/MLNS/eRbqf3EWfv8dw/J23tnQvtdkNrQfHTkb53/jbBh//SbWt35Eu5tr
Duy3QUNkZfgcPP+um4Pn/2vIzt05sF/7OebCeTmsNxfPv0PmQnljDZa3L6Pd
+2YuzFc06zwYz0ideej/g+ah/6+cB+25F9AefDUPv//IbMP4aTWRzQE2lHeW
2Xj+PWvj9/+f23j+yzgf4qNRbT5+/953Pn7/vng+tB89PR/GI3JnPsa/9Avw
/FdlAZR3e6E9WLAA97+TC+B52icLoP9mmoWwHp2KC9H/uy+E9RPOQ1aPYX3j
o4V4/n+ykN/XU37olVsE9yvRLovw9w9zkPXDiyC/tN5fxOcdef/1aBH4Q1B6
MbSvGIvhfkebuRjaNw9geee9xdC+/wDtYdIS+D2B2mEJ3A8Z05ZAeXsv2r23
l8Dzo3+hPaIuhfp626Wof/JSvP/bvRT0BW8shfs55U+0a0WXAZutlsF6diYs
w/uvHVg+fHUZfv8UYnmj0HL4Xspuvhzs3jjk6NblOP8vI+u/LIf5sPKvQP3J
K+D7sWD0Cpz/zSugvuaj3by3AubTybMS9TdGDkeshO+h1A0r4Xsq4waWt39Y
if6fcxWUjzZYBfbIsFUw3rqDduvqKvAH97tVMN5B9tUwPkq91dAfLWU1zv/q
1TCfziW0+1+vhvUdZlmD55/aa/D+x1wDvyeyV6yBfNM7vwbj/5drcP/LtBbK
6zXWQryy+q+F+x136Vr8/dOZtXCeUD5fC+dJLYMD9zmm5sB9gdPHgftqf5ET
S/17xPAUlldvO3AfYqRbx/k23d/YldfBfZDXU3B5Gt/HpH/+On7f95D0n1jH
/SPWP17H8ZZ+n2kp63k/InYrrOf7IPr9ZdBtPdRX5q3n/IR+j6kdXc/+S+XN
D9fzfROx83g9r5cHpL/sBv69ELUXdt7A8YVYnb2B/Y3KG4c28H5D7/PsYAPf
jxB7/yJHS23k/pGeSKeN/P0dsT5jYyz171Ot/Rv5fEX13Xc38v3aU9L/j+BZ
1N4T0p+0ifdjsmvtN/H8KXpc/9RNPJ5p4+y4z+zp4+y/tYnzi+fiHN7fxPtj
hjirxTfz+qTyRpvN/P6Q2rMnbYb2vF3P7FQ/+vpmXr+Z4hz5YzPrzxlnvcgW
bj93nK2WW1h/vji71hb2n1xxDrYjK69u4fsoYu23LXx+pfbNglt5/yR2mm3l
9UTP88du5fu7COnfspXfT+Yg/S89q0/ljZ+3cj5H/bPzbePnEXv6No43RUj/
qG183i5D+jdtS4z3yPKk/4VtvJ4qkP6ftiW+j+1YkfTn3s7xieoHjbaz3iTS
P0IwDeffxNr67Ql/a1KS9F/fzuurFOn/XjC57way+5EdiXjwEXFYX7AZd8ih
pUn/0B3cP3q+sVYwuVPTcqT/yo5EfnalLOn/dkfC/3+oRPqz7UzEz3ukJ1J3
J99PUn198M5E/Dsp9a8STNcnr9D4uBd3cvtUPojuTKzXr6i8kmVX4r6lJdm1
WrugvDlwF/sf9c9ZvivhnxdIj39uV2I9byd7+MUuji9UX31+N693YqP67kQ+
bFF5u99u9ieye0t2J/LhLmSPert5/RJHPtuduP+dTKw/t4fHm9iquiex/xWg
/rm99/D+T/MXLNwD86ec2pPwj0/Irn26h/NxOf9pXd6/iJ1KbmK93pDz38NN
9H8h+U9ouzx/xOpxl8eD2Ljl8n0iPc9+6vL6oPa88nsT/vZtCdLfdS/HA6of
mcv2FLLrR/byfXFR0v/BXs7XCpH+//ZyfKT1FJTZx+0VJv2d9/F6KEj6Z+3j
/YrWo3lwH69XWr/O//bx+wyy+w/38XhRe2HJ/dw+tad23M/7CT3fmL6f919i
e99+jpfFSf87guk6dRzpif69n/UQR0oc4HhN+vR2B9h/6PnWlAMc/4jdPQc4
H6LywZsHePyIlfsHOP5I/cUO8voiNlsf5P2HyjsTD7J+Yn/nQZ5f4vC1g+yv
9Hz194M8nqTPKHyI46/U3+IQjz/p88Yf4vGQ+rcd4v2FykdeOcT328T6r4c4
HyK2ChxG/U0P8/saqX/MYa4v9W85zOdTqf/Fw7yfkN2MHeb1Q3Yn7xH+fofY
b4IcjjzC9eX8bzzC80ds3DzC+wOx/eMRju/EXq6jHC+o/9GGRznfoP5Ehh/l
+yM5/+uO8ngRW9eO8n4q9d89yvs3cZDjGK9nmg+l/jG+vy9G+ocI/jLe3L+0
3sw1x7i/Kum/fCzxPV9OYv+bY+w/cv6zHmf9NB9qneO8Pql9Y9Bxvt+W87/y
OK+f/KT/wnHOf4ijXz2z5yH9mU/wfpuX9Nc8wf5EbA04wXqpvLvsmZ3yh+Ds
CW6PWPniBK9PYi3jSV5fxGa1kzy+WUl/35P8PWNm0r/4JL9vovLh6ZM8PzL/
uXOS/SMj6U9/iseH2rOrnOJ8n9rzep3i+xfKN6ILTnF+Txw5eYrjkcx/PjnF
5zPKP6w0p3m9EbsVT/P6ovJB99PcHtkV+zSfZ4i1Y6e5/8TmR6dZb3bS/+Q0
vy/MRvrLeXx+oHwn7CL4Vxpfmf/MQbtxWPAcWqBU337f4/hM7XuPPL6vofLR
0md4PRNHjDPQvj7zDPdP6j9whsdH6n/vDJ+HpP4HZ3i9UX2l5Fnej4i1Dmf5
vEBsTjvL+ROxs1dwP4o31F//bcH1abyIw7/O8vmIWFXP8fmI+mO0PQfjYU8+
x/0j9nafY/+X+t84x+97qb3In+dw/oueB/+wWp3n9SX1TzjP903EwQ4sr7x2
nv1Xzn94nuO9zH8LXYgl36H9QOa/zS/w/BD74y7w+BOHWy9w/KF8Wn35Avsn
rU/jlwuc31J5O/9Fnn9iL1nwPeov6Y2Ovsj5F7UX2XwR8nHdv8j6ZP5/7yL3
X67/PJd4/yN70PgSxwOyKyMvsb8Taxsu8e/LiM0bl3h8iJ0fLkH+4Oe8zONB
8SxscBnj37DLrE/GP+cyjw+xfVXw86RH7n/fXU7Ey30y/8l+hb/HoHgdqXeF
4wOxnvKMKR5bq68k9GQidi8JXhF//Gbi4OsrifU7KIn0Z72aOH/bxFrtq5wf
y/zPvMr+K/P/FYIpnN8g9s9fTTx/qcz/v7ya8M80xGqmaxxfqbxR4xrvFzL/
73+Nzw+Ur3tLr3E+T/l+9Mw1nn86D0Q+v5bIX0rWJv0ZrvN6I7Y0wUviy0Wp
S/r7XE/4b6lapH/R9cT3KXfIrpy+nlhf5xuQ/tvXebyoPTPdjcR+k5fsTuUb
ifNLWp3097yRGO+jxOH8G4n8bU0y6T9xg/d/shsfC34cn65jTUi/cjORDy6m
8l4FwQ9JTyPS3+0m59tUPzLvZsK/9xDrR28m8rEcVN/68Cbnd8Ta9zd5vJP1
/wPM7I+T
      "]], LineBox[CompressedData["
1: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
r4T0Ac6U9Mv/Wf908ks+1r9TDU+HwVP/cb/iEewj8V+/9pfz392GWe9x/lOi
pMf5VCV8Pti+pL3f2eDIpJKK3/h8/ImSNl5+wvnnlyUVn2n/v5eUfNR/sVJW
/xVY/7cpZeP7SJ7/REpZeQeBk48Z5rwav5f53HDeeZR/Ryn5P+e/RUp7tn/k
/KNladk/519jS9t8+RH8K/2IYfYrnH9/WtrLn3cHfzPMfoXnX1eXkf3h/uJB
w6yXKP+oMjbfFqH8fy2j+Mf+5+My9npXgMObyyg/Uv4rytp4WxLrySZlpX/6
//Cy0jfY/0BZux9Z+v+HZSUv5d9geEwuPj/F+bevnPwDnG5Yzss/f/QNLaf9
5/nffeW0H5T/vXLyb+r/13LWHotjf1MXyll7v539X73ysmdwYFB55VPOP+8u
r/tl/Hu7vLWvtox/6fI2f23E9zNny6s+4fy/TgW7/zM4/xxQwdF39A7DrMep
/3/p8/sp/8oKiq88/zxdQfbJ+W/Nip7tn9FPR/pWlHy4fvzWijbeV0F8TyUq
ar95/ru8ouIHzz9OVPTyz2PC1StZe2qJ68VuqqT4AE7ebJjzD8r/aiXZO/X/
cyXHP0JHDcO8yvL8s0pl5SP6f8/KNv/0pvxRw0jf67Due7my6jvq/8fKypf0
/8OVlf9o/xWr6H4Y/2+oonjK+D+niuIh/f8Fl8OLq8je2f97VeS/4GS5qqrH
wJlQVS///MY/q6q1pzfAoYVV9Xu4v+iiqtb/vmD+219V9SbzX+lq2m/mvy7V
HP8NTq8mf6X8z1RT/qT831ZTvU359xpmf0n5/dXl/5S/Y3XVN5R/SnVn/2JP
VXf0l/y6uuyZ849d1RV/OP+9PmDz92Xsf9sFrL0s4vxjYkD+zPPvvxvOO39P
/yfg5Z+P+343zH4T3w8WraH6iOc/rWvIHpn/xtdQ/YPPpx6toXjJ/PdZDVsv
X+T8f3sN2T/Pf66tafW9vibkb2GY80lwckxN1TvgzMOGeX4E9n9SU/UEOLS1
ppVvPOW/qpaXPx9KNKslf6H8I2s59YHvr7UUD8DBf9ey/cUScGRTLRtP3gfH
L6/t1IOpxobzzt+yw2rbemMf+//7a3v551fhDwznnQfE1tdW/KP8l2or/lL+
BnW8/PMK/5A66meY/++t4+U/bxF9t45+j/pfW0f5Ap9Pn6+j/gfsq1dX/QL1
P7Cu9EX576or++X86626qs/Y/6+uK/sFZ88Y5nki+//a9eQfnH/1r6d8wvnX
7fVUf3H+8UY95T/OP1bUU73L+cepeqofOP+oUd/Ln49E+9S38W0I5x9/qe/l
z1vS/6wv+wP7lrvrweP1netHqjXw8s8X470a2PovxvnPggbSB89/Xmlg+51u
2L/A0gZe/jwqfKSBl3++G6vc0Ms/30n2aKh8Qv+f11DxkPXfS4Y5D6f/L2ko
+6f+DzVUvKD+KzTy7DyX+u/WSP5P+5/TSPZB+/9HIy9/3hb5vpHqS57/FjZS
/UD/L9vYiT/Zro2lT/r/zMbyZ/r/c41Vf/H873+NZV+U/4/Gth59ifV/qSaq
3xj/OjeRvmj/05pY+1tI/3+6ieyB/v9NE+UX+v+eJk697vM3deJbsENT5Q/K
P7mp9Mn492RT5/dSXzVVfcPzz51Nnf4gULyZ8i3lb9vMzncOUP4JzdQfU/7H
m9l41J7yf9FM+YjyZ5opnlH+64JOPIm2CnrO+fe4oOp1rKf/FrTx/W3a/2dB
9fO0/21BxSva/zXNZZ+0/+bNtR+0/9HN5W/4/exDzZW/GP+Szb3889fwlubS
J/3/yhbyb86/m7ZQfcz594gWTrzwP9hC+gWHPmph7ftNzr83tpD9c/59WUvn
99KNWmq+xfnnsJbq7zj/jLWUPODI+y2tv3Zk/FvXUv7I+HexpfTB+Fe/lepf
zj8Gt9I8gvOPe1p5+fPR2DutbP74mPOvNa3UP3L+ca6V+jPOv+q2lj9y/hk2
zOcbOf+40+XEm629/Hl9elVr9XOc/5xprf3j/KdWG2f+EunXRvmd85/b2jjz
ltTrbZx5XPYXw3yejvP/k200L+D8K9DW4/nmZZS/d1sv/zwkeUtb9Rewp8xr
hjnfB/uXtdV8Ahw61lb1OON/1XaK79T/je0UHxj/57dTvUv7f6Wd8j3t/6d2
qi9o/9l2qv9wvXil9l7+8wCp7u2dfJCd217Xw+cDL7ZXPAGHfzCM5/uOcv5/
sL30wfxXvoPyA/NfQQfFG+a/2R1Uv9L+n+/g5c/zo6kO6p8o/wHDfF6W8pfp
qHxM+bt2dOqv4IyOTn6MPNtR9Szl/66jl/+8RGpfR9k/1rMlO2l+Tfk7dXK+
H57aSfsHjsU7SR+Mf//t5MTnzO5Ompcx/5XorPqC/U/7zvIv9n+TOkse9j9P
dHbmFekvO6teYf+7U7yQ849iXdz+t00Xze/4/Feki5NfU491sfVpZ8b/z7uo
HmT9v6OLk5/CRbpKP4z/Lbu68X9sV/W3lP+Rrk4+8X/aVfGJ8f+3ropv2M/o
1SEnXieCIdV31P+okOSn/h8KOfE4+LFhns8y/m0O2XrgEcb/Kwq8/OfHUk0K
NG+i/Q8vcOZ1gQcKlI+o/w8LXPvfUKD6lv7v66Z6gfG/YTf134z/Q7upfqX9
39dN9Us5yP/en1wR8v/aTfZaAfJf6Kb+Buu++jdoPlYe8g9yOXL3DaqvwPG3
b1C9Vwnyp13Onr1B8zVwoE53zedxvfCA7ro/rMfu6K79wXlN8l/ddT1wZmV3
9Ytg/+nuyg/4fqhmD533gKN9eyieUP5be8he8P10oofOA8C+X3pof8DBEz10
PsTzn+o9lc+wHr+pp+oFnv/c3FPyYT37ak/nvCLwc0/Vi4z/R3s65xGxKjd6
BeeQnzj/72mY55c8/4jeKHvi+cfLLod+NIzyqzPPPw7fqPqD5x8Ve3kF32Ke
gftN39DLyVfBF3o55xORxb2c/Bj3ejnnN6lyNym+8bwnZLgCHIr5bpbhgZCf
+X6h4cEoEHneucjwGmwY8/3+m+RvjPeleyu+Md536e34c2i64c9zCvgZ/hR9
prfqE3Di296qj8Dpvb01P2G9W7KP038EO/ZRPQ6OTOkjewLHn+qj+QE49XUf
ze9Z7+/qo/qM9f71fZUPGe/a9VW/hu/HJvZV/gcn/97Xye+Z//R15vH+3/sq
fzDeFe3nxJdo637OPD8xvp/Tz6Qf7af9Bfs+d9eD2/tJ35T/2v5e/vO28Rb9
vfznEVJj+ivfgrMP91d8BQc+6e/lP08Q3trf6adjVw1w9j/ZbIAzD8mMHKB4
Svn/OsDpl0L/HuDlPz8Z3TRA8rPfuTyseoj9XuOwnf/2pP6HhzU/Y79/f9iZ
n0Q+CKseZr+3PuzlP2+YuhRWfqX+Gwz07PNn1P+Qgc56+N6BiteU/92BigeU
f+1AZ38z5we68556g2RP4NDAQeqPqf+7Bjn6Srw1SPdL/a8epPuj/s8Ocvrz
YO3BDkf6D/ac5z1uH+z4Q+qNwer3qP8VWi9C/Z8arP6V/U6NIU6/FOszRPUF
672/uOuZfw5x+if/8iE6j6X/Hx/i5T+fFK02VPvNfN9rqOIB8/0Cl32vDnX6
8eDSoYrnrHeODFU9jufp4pWH2fg/Hc/DpXoM0+9x3j1vmM5nMC8PvDRM+YPP
+y8Z5pwfxQ4NUz3EeXeF4YpPPO/pNtw5H/LPGa56iecd/xiu/pnvO3w/XPUX
33coHC5987yr7AjVj5z3h0Z4+c+rBWeOUPwCR54bofkHOP6/EV7++wWpP0Zo
nsLzjlIjVR/xvKfzSJ0f8Lxn2kjNkyj/0yPln5T/m5HyZ8779/z5e3zfyz9K
8QDroQ6j1D9S/smjFD/5vteTozT/4/teX43y8t8P8+0a5eW/DxksPtrLf18t
0na0l/8+SXzCaC///ZPU46NVT2A9+8Vo1ac878iM1jyF593XjVE+A8dajVF9
y+fdx43R8y183+VvYr7/4v9sjOe877JtjHOeEr1mrPIF9d98rJf//Hx69FjV
czzve3is6mWe9yXHOufvkS1jHXuJXzlO9S7133Sc4hXP+0aMs/PkSTzvenCc
6jW+7/fRONV3PO/ZOE7xgvq/bLziI/Xf6E/meeew8Z7zvltsvHP+EX1/vPyJ
875147V/nHddHK/8x3l/g4hzXhwcHPHyn9+P3BPR+S3nXe9ElC/Z76yJeM77
fuci8m/Ou+pOkH/yvD88Qf7D8447Jyg+8LzjzQmyH573rJqg/pb9zpkJOm+h
/LUmKn9y3tlvojM/TNw2Uf7G/Pf6RF2f+W/Fn99n/Ds50ZmvRgKTVG9Q/t6T
NG+g/LdMUr5m/nttknMeE1g2SfvB/HdskjvvrDrZyY/JGycrfrLfmz/Zmaf6
X5nszENDP02W/TL/ZydrPk35K03x8t+n8c2b4sxjgy9OUX3CfF5+qjNfzRZM
VfxlPp89VfZMeZ6fqnxFeVJTnfOE5IGpTn+aKTPN6Wf9Xac5+grNmObcX/TZ
aW498900Zz/S+6a589tS053zpmCn6bJ31jNTpzvnQfH4dOf+U/+dLv+l/Lun
O/PXQIkZznwi3H6GU3/HJs1Q/wROPjHDrWe+nKF4Tvl3znCehwkVm+nlvy8T
bTNT+ZX+HJnp5b//mn5spuod+vMXM535SHDHTNefi8zSPI3zi5azNA+hPY+d
5cy7s4/MUr3D+cWnsxR/eH752yznfDV29WzVC/Tn4GztF59fGDVb+Zjx/KHZ
zvl+6GN9vz3yXXTzbPV/eF4+ccUc2QefX28yR88fMp+PmCP/YT5/YI7zfEDk
wznyd+azDXNUTzKf+ebqPJD5vOFcPV/J97eGzlV85fn9fXPVXzGevzdX/sLn
F36dK//m+1sX5ip+4vP++vO0X5xfDZqneMznN+6ep/3i8xtvz5M9c36Vnqd4
wPnVuXlO/gjWiTr1RWRA1Mt/Pyh+R1T+zPfX/hVV/873F1ZGNe9iPXc6qn4A
7zOEa8638a4A9WGsr2GMB34DJ2+dr/iLejGTmK/5HN9f+GW+7JHv75+Yr/MG
vr9RfYHmsXx/46YFmnfw/Y2bFyie4/O+1xaoX+D7Gz8v0H7w/99wVN+/nfVs
lZttfd+mdahF4LG9nW72/vz/bfwf4MYMOQ==
      "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQfeJBTc+KkjeOH1cbTpRb4egAFCo4BOSrX2Keurna
AcRf8AbIZ5m6OfqHqB2If0Gs9I1jcRn3filhsDyDYylUfwdYv0E2kL+wCKig
CsxPmArkl4OUe4L5E/YD+UDey8ZXYP0HXgL5LxtP3dSVAct/EC574xiRrGQb
8BMsr2AH5Gf7LGHXeg7mB2QA+SDnRVeA3dMwCci/NsODP+ScPYi/YQ+QD+Ll
MYLVP3hWBnWfB5gvIFj+xlHvT5bPEnewegdrID/Acndr/FmweQWpQH4T0Dl/
Xlk7uN1pfl1ajggfAKyQde0=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6199008*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6199008*^9, 3.839616*^9}, {0, 35.3134328358209}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.839666437696204*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"f802ee21-52fa-4106-9a05-360f7b7047e4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model linearne regresijske premice", "Section",
 CellChangeTimes->{{3.839583312897846*^9, 
  3.839583325291337*^9}},ExpressionUUID->"37ce9467-1b7b-4b6b-b027-\
7ee9bc441971"],

Cell[CellGroupData[{

Cell["1. Bitcoin", "Subsection",
 CellChangeTimes->{{3.839583343426034*^9, 
  3.839583352719982*^9}},ExpressionUUID->"b52439e2-d772-4015-8fef-\
315bb9a3aaba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bit", " ", "=", " ", 
   RowBox[{
    RowBox[{
    "ResourceFunction", "[", 
     "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<BTC\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8395833563789253`*^9, 3.839583360380437*^9}, 
   3.839583548100659*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"23504b08-a0f1-404f-a0a0-9cd0a9020967"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelBit", " ", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"Bit", ",", "x", ",", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8395834043264604`*^9, 3.839583438065258*^9}, 
   3.8395835328378906`*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"99c4866b-7de1-4f84-8a77-95e833fbc1b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelBit", "[", "\"\<BestFit\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.839583467458818*^9, 3.839583494888878*^9}, 
   3.8395837319658685`*^9},
 CellLabel->"In[36]:=",ExpressionUUID->"88f32ff7-4690-4001-85fe-679e1a97d3d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "532054.012938574`"}], "+", 
     RowBox[{"0.00014500086334580338`", " ", "x"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "5.503974259136431`*^9"}], ",", "5.503974259136431`*^9"}], 
     "}"}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.839583722936953*^9},
 NumberMarks->False,
 CellLabel->"In[35]:=",ExpressionUUID->"8ecd221b-9c05-434c-9d0d-94b50c09f104"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DateListPlot", "[", "Bit", "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"ModelBit", "[", "\"\<BestFit\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"AbsoluteTime", "[", 
        RowBox[{"{", 
         RowBox[{"2014", ",", " ", "12", ",", " ", "1"}], "}"}], "]"}], ",", 
       " ", 
       RowBox[{"AbsoluteTime", "[", 
        RowBox[{"{", 
         RowBox[{"2021", ",", " ", "9", ",", " ", "1"}], "}"}], "]"}]}], 
      "}"}]}], "]"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.8395835644534025`*^9, 3.839583710128869*^9}, {
  3.83958383093204*^9, 3.839583952596195*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"6346a173-be85-4ea2-9ada-80b699925b2c"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxVnGdYU00ThmNDVJDYRREi9oZREJEiiYiKIsQOChIbooAEu1iIBbsSxd6I
vWCJvUvE3uNrF5XYsIAae0HkW+aZ/Pj843Vfu2fPPjOzs+2EuoMTeg4rKZFI
vtlKJMX/i3+GEb/eK//cc5KFLZ+iEGxOE3xtxjz/8nOSill6RnCN9JLqU7sn
FrPireC5p1XG8YsnFbOm8u/3yo8T03JcP1C53lew4ZolfZQrlZuiBds0fZmz
3XdyMUuWCN53e7S+8xhqX35S8KO8py4tj1N99WvBVdPaGq93ItY5/HmvTOr9
N6fHL2rf2E5w23lK9eulE4rZMkTw5JCknIkTiGWLBV8Zfya9VkuqrzomOKfa
2aL7v6lc+0LwoXe25oaJxAa7gvfK5LilLq0mjif9noK/rMhwyV40lvQPElz3
fXtJE1tixQLB79SF6QEbiTWHBfdP7ib5V3Ic6c8pYPs5UHumcn/fK9d3tdGO
NBFLPP5y/VXE8oGCQ12zMi9vIVbPtfIO6p/ugGA3r5mZ6dHQ/0SwZb45Oc+e
7GOxKXyvPPDgpP9A+EfWqpDt85aeVw0QXPBmhFH2F/pTBG8e+y6q8gSqb9hX
yP4NIzY/Ehx99rxLygeqLy39771yvOer9NWN4H83wSn7U2RzvlC5JkywY8aN
ooxo6r9+xj9+fhj07xa86F5uUZ9DZB/Jg39sv2bQX6LovXJZ1TDJHdhL3Uxw
zdXaqJfhxLo+gmNupGaO/U32NiYLbmDbT/F8GbVn2VnE8deAWHZX8Idp1cwF
A6i+6p/g1Of70wMHEmsbS/KUlefEyZ5OJDb0FFym5gr/nO3E5imCX9RdmH6x
LbUn3S74ZOMk8+a7xIrbVo4m1hQInp4Wb765Ev5vUCJP6fxsjLrdIegPFUz+
/Aj/JwnO/rkj07kA+rcI7vJPbf49kcaD+qbgW/qNyVndiHW/BB/5fie5+lP4
37VkHvw5A/EfLPhtdLLeqT38P0Ew+ccT8b9R8MWRX4uajoH/rwkm+11G/H8X
3Cd4a7omEvHvUipPqfJwUC/5AP1dBfdwWxR1rCKVK8aW4vZ+E2s2CKb4Xkzt
6S9bnx9HbPoimOK1DLGkTmlurxaxvLNgGo9ziNWJgmn8YTzr1gpuIvuQbNQT
Gy+U5vYOQv8nwTTe7mH81yqTh/GqQfx3FDymqaNklyP0j7LyIuhfJTjjYH91
ahyxOUswxS/yg/SD4FWtNYoFG6C/hk2espficZG2FPQrBVN+2Qr/xwqu96Oc
vuZbYtNywTQ+bOF/o+Aq09+7lD5C5fL3Nuy/P8TqqmX5/cuJde0FU77QIP5j
yrK9/44h/UsF0/gaTyw7LViR+SlnylNi1RvBZ3tGGrulI/4r2XK5PeLfR3Bc
3vai5mcQ/8Ns2R/vkP90tqy/MfLfCVuOPwu1r3lly/E9jcr1FcvxeDhN5SYv
wTS+7xBLhpRj/88nli8SnFB5pvFqLLH6aDmO91LUnu65YBrPm6ncWKF8ntKo
kMpmGqC/jeC7dzqbQ5ckkn51eR5fMzWkf77gIYd/Jy9vROXaQ4KPlUh3sXlJ
bHgm+FWX4eqhw0aTftsKXP8wlUvdK/B4akjlikjBlC+bU7lmTgWOnzX0Pv1+
a/kpYlO24PMBNf0X+cSRfhs79kdANOmXC96mPVRUwmck6e8vmOavUsS6WYK/
nbN93uNtDOnfK/hiSqm6j7pSueWhHbefTSwrZZ+nXFGmSnLVkcSqFoL992zy
PxRB79f2s+d4ah5P+qfbsz+diM0Z9vz+glGk/77gm4t75/w+kkD6JRV5fNeA
/qaCaX6YAP29BbcZHJ3e2Y/aM00TXC/797SRcmLJTmv97tQf+Z2KrMctlvQX
VuT3R1G5rpFDnvJN79aS3pfoeWMPwQEXvJLTYqjcMtmB7TmAWLbNge1Rj9pT
mQR3ul3KZeZlYu0fB9Y7keob6kvFeB7wXtbyA5WbQwSb5bdlKTOJpZOk3L8k
YsVmwSP/5GvzhhFrbgj2PfXGOPoYsf6nlPNLPPTXrZSH+aka2UcSLHj+ldrq
6P5ULh9fie3rTazWV+L3jyH7664KpvXUfOj/JjhsjFZdsRyVW5wr5ykjF1TX
f5hILAsSLB9m1lZfQqwaI5jm22R6XrtesPO5If4LnsD/lyrz+x7A/58rcz7d
Ryx1qpKnDGnc0bhxEbGik+A9mQ0kyScoHjSaKuzfy8T6NYLPD2ys9glA/J+v
wuPdm+JF8slavpZY7lg1D+u3SsTqAMHB1X+6POpArIuvyvFWgdi4sirnq47E
lrNV2d4NMP7zBQ9cP0RxxJHGq6p6NZ4PfIm1CsH/vnqopbOJDSOr8fM8/pdV
43xwD+M/0/r8BmLFO8GbBq/LDMpF/Fepzvm0CT2v9xMsHeeirfqQyk3Dq3N+
LA3/L63O+kKI5aeqc34bQKzOrc7xoSDWSWvkKQMfpLhEZBIbvWvwfJNBbBla
g/11EP5PFXzo5eyc7hfh/+OCWydmyGwqkX+0L2twvJip3GBfM085scM+/3mr
qdzcVvCeLdVyTH0x/gcL9l5uJ7lnIVYsrMnz/xxizZGanF/eEuvNNdleemrP
VN6R+3OVWNLGysgn8ihH9m8Q9M8TXF7ePPnMJyrXHRQcJN2rzdpKbHzqyO/T
I/7L1uL4HAf9rWtx+zMoXlURtdi/SxD/swXT+ngW4t8g+MqSm8bLlSkfmB/X
4vGD8S0tUztPqV39ybz9D8Z/y9o83y6l+prw2rzee4LxP7M2x08esWmP4Py4
y/7ud4glDwU3KHnP37Yq8l9Jpzyl09FV6WtjMP6bO7GeQGJdXyfu32KMf60T
57+3yH+7BMtuueUkBSP/3XNie8Uj/xUJ9k76+6zhTuT/JnXylJmdlsoiMB8Z
egmOszkmy24H/VMFK4/H52yGfaQ76vD8VxLj/7863H4kseav4Be+64xjK8D/
DZ25f2bkP5Uzr69nIv9PduZ4PA79WwVvW3teZtgF/bcEl2qUbVw/Gfnvt+Ad
21ON6d7ExnounC84/3V34XwYCP9PFPy0vs305fUQ/5tceLwvhP+vC050DlGf
WA///3BhexxE/pPJ/i8+pN1kHD+roX+cjNd39aE/Xcbx9o/06K/IWL8C+r/K
eH6PhX7nujwfwF7yLoKflvsR9SYb+kfX5fzqDP3r6nJ+3gz/XxT8qkU//yNg
i6Uu699JLKvtyrwH8R8omPZ7qK9NcOV80Qz6V7vyeuEi/H/OlePvKeL/o+Bg
p0myA4gPRc16Yn1V2NT4E/Gj6SCY9p/loT9OMJ0POBObVgguW39Qzk13rH/O
Cv6dvUHWCuNFnif4TTvXnK2pVK6uVp/z0UbM//71+f2riY0j6vN66wjiP03w
ae9L2rhMxP+Z+ry/s4P+t4LDwjT+6lbQX7kBj9810O/bgOM9AvkvugGP/ybE
0iUNeHzLsP452YDHdxry3+sGPD63If4dGuYpl3yY4t9mGrGpnWA735/Oe3OI
JUMbcvzOg/8XN+TxKyVWH2vI+TAc/n/RkOMH6wGjXSNuL4r6Y/EU7Hjxqaw/
+icb1IjXt5Ww/l3QiNfzicTaw4JL2l1L/9SE2JDTyLr+gf5yjfOU/12aolCX
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
xWq8f1yQnvSPXM3tvaJy6XIr/6FyRab1edkm0v9O8PNGFfWda2wm/VXWsJ4S
VG7yW8P1PTaS/pg1HM/Z1L586RqsD1Y/oPbVpwS7PPwc5ZVO9XW5azDfW/5R
uVG6FvFy+wmVW7zX4r4x6xa9TzZsLdpzTKT+qFLXwn8HtxFrjwveudHeuCGd
2PDSyoVbSL/9Osz30QO3kX6vdRyfYVtJ/+B1WL/45RFrFq7j5x2ovv6I4Jya
JbWxZbeTfvM61uNELKmwHv3tcIneJ2+znse7N7WnjlqP9k8vo/7p5q3neFcS
Gw+ux/uc9xBbnnJ7WZnUnsx2g8ivbwqTl72F/tYbOH59qFwbYS0PoPcZZlvL
SxKbDRvYvq7E0mwrJ0J/mXT4QzOI2tO0TOdyb2J9eDrslxtB7zfNtLKFWLI3
nd9fB/ofpnN836dydUk9j8dB0N9cz/4sA/199RwPsI9Fq2d72EJ/hp7jsRex
6p4e8fYHrC2y1kf/DU02sn9hT3Ovjfz+6lQunSa438Av/s93U7lix0Z+fh7i
/7+NVnsS6/9anz+N+G+4icdPLLGkxyYuH03xK5+8ifOFD40H9dZNnB8abSD9
tzaxfWOovvH3JvZ3HWrPUm8zxvuTLCqXhWxmf5aieFRN3Mz55wH0b9rM8fsN
/r++mfvXG/7/sRnxeiwF/q+7hcezjJ5XdNvC/swie2jGbcF+KDUH/k/fgveV
+ULPm65Y6wcTS75t4fw0n1juvJXtMZ76q+6ylfvrS+W60VuRP/q1IDau28r5
6h2x5eJW+PtSOj0v+7yV7TViJ+mvvY39V5tYG2jlYbtIf4KVjxKbV2/j+HIi
lp7fxvpGEis+bmP7pewm/TW383gP30v6O2zn/v+3j/THbcf+pu5rA+lfuR16
P/Yhlp/l8o0195P+PMHNWv5ON+RRua7aDuz3NyiIjf6C75z9439wELFlxA6O
30/0PtmyHZxfA4hVZ3Zwf0pTfe1bK7clNlTeaZ3/ic2+OzkfV6H+SIfv5Hwo
IVYs2Yn+Pncm1pzcify0A6x/vZP9/5LY5LArT9mifRlj8D1iibfgH0dLm4dE
HSD9Q3chnks6HST9i3fh+QsvqL7umOAEuxLG77nExhe7cP4cuhD67TLwffUc
2E/WNgP2cv5OrBqUwf39SaxdkIH1nHEW9B/OQHsOM6A/JwP2t9Qilpbfjf4E
KokVHrtR/5YrsWbgbtjPrQ/8P3c3x/vWHaT/wG7O77EUL5Knu5EvqvYklpfd
w+O5MIP0t9rD9s4i/+kG7OF43EntG1O4PHcmsWXfHm5vILUne2x9PpJYVXov
j2/9HtLvtpf9fYHKDWF7kX/r7ab2zDP28nwZQyzdsxfxnRED/Q/2Ir5OhEB/
iX2Iv0oBxPpm++Cvw1+ITX328XzmDv9ruX6PdsTyXfs4Xp9SffVdweW7FLhE
pCD+/+1DfMW8Rfw3NrD9K9Pzlp4GxNPLrvD/VAO3V5LiS7XdwPG4hVh724D+
FO4hNhRY6z8mNjfYj/e97XSY9Kv2Q08bhyOkP0nwkq///K9eItZs2Y94kbsR
62/uR75aGUls+rUf/p3xmtqT1DvA4/s+sbz7AR6PwVRfPeEAxveYyUdJ/8YD
PB5TiY3XDnC+mUhs+X6A7dmUWCY7CHtsXkHtq7oexPi7Pp7a1449iHi5K6X6
hg0HOZ6WUbn58kH0v8YkYunXg3j/o3LHSH+dQzzevtDzms6HON46Hif9iYd4
fCacIP1rD2G8abedJP0XD3G8NzpF+i2HoPfrHWJ1rcPs70/Euo6Huf4oet44
6jDG86C3xJZVh9me9U6T/nOHeT5+Q+WqD4dhj3qPqX/aGkfYnvdIj0F5hOO3
Pekxxx5BfExNp/rSFUc4X+QRK4xH4P/5adQ/zfsj/P7MM6S/6lGOLydiU/uj
sE/DUcSSEVw+dWgm6U87at3/GEn/6aO8PpxD5bo3R3EfddGZyo2VjnF+jKZy
i88xlD9EuSz6GOJ1XLOzpF/H5Z3aZZH+E8eQH5u3OEf6X3F59FZic8XjyA8h
KmJpu+Oof/0vsWKIlRMukP5FzMEbifVHjyM+Vte5SPqfW/k8scTuBDi80yXS
73mC7fvuGulXn0D/85Nuk/75grcvLaEPdzOR/kP8vOPWG6T/2QnEw8GWN0l/
uZPwj/t8qq9yP4nnH5Wg9rSRJ9G+nQ2VG+ac5P19C2Lzfq5/vCvVlz5hDi9/
h/TbnOL29/9H+uWn0N7CXcT6/szNI+h50yzB4fH/ohr6UvuSfafQ3zFPqb/y
R6dg/9xS0F/qNNvr8HXS3+I0l7emcmO/02zvYcSW6dbyxFukf/dp6FF8ovZV
9608h9rTSs6w/fTEhqZWDr5C+nufQf/ct1H70mQuX737KunfeQbvtwsg+2vu
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
2Vdql8v5aQ6xwjOX7dkB6x91LsfPVGL9/FzOz44Uj6ZDucjPx2KIJTm5fN4c
gfgv94bPz88i/t3f8PncXOqPLvINzw/IB8Y5b6znrRj/+99wvu5B9pA9ecPj
Zx38b/OW15MY31o5s/t++L//W46XW/D/rLd8fjcO6799b9neGpx/PbI+n0qs
KfWO8xfq61u84/J58H+/d5wPXxJLZrzj9c4/5L/d7zi/ToD/7/PzX5HvdZL3
rE+J/N/0PceTJ/J/7/d8XngO/k9+z/OhG7Fq53vOv1GI/zvMxqrwfyG3V/cb
lZsb5XH8XIH+nnmwR+pz6J+Sx/cxp6F/Wx7fT66DflMe5+9oYtOfPB5PBsR/
g3wez88Q/6H5bO9T0D8pn/VfRf7fzPW9/8L/N/I5Xr/A/z/zebwch37XDzy/
a+D/4A8cnzPg//FcXrgI/td/4PliKfx/9QP75zz0f//A+RSscPnI+y8d9Ad9
5PgIhv4xH9kfSuhf/5HHXzj0X/7I64Ge0P+F6zfuB/1On3j+7gb9nT7xfgX+
M2o+cf7H+yxrPrE/u0L/hU+8/lXB/58+cX7tC/87Wjh+TkF/gIXXG8hX5ngL
9K7bg/y3ysLz0zvkvywL5/dvyH/5Fs4nj5D/qn/meEJ+Mik+8/iuAv2xn3l+
8YP+5Z95Pp8B/ZmfOV+0gf53nznesF4wVvnC681y0O/3hftfAfpjrIzxplr6
hedHzMfaU1/Y/iPpfN+Q+wX6ykpx/i/9yuuNS7j/8PmK+Ol9gFgx7CvHx09i
TepXbr8s3d/pj3/l/dAQ3P+9/Mr56w/ufyp+4/WbPe5/vL5xfBXg/mfwN55P
etD9k27hN77/6kX3YcYj39jes+k+y2Lmcs0jYlmF77z/20jtqdp8h56HR3D/
GSV4wJTy2nmDqT3DvO+In93jcf93kOubm+H+79l3fM/eIY76o7D9AftdeUes
af0D+//CXvR+fcQP3G97zKD7PNPsH/BvDu6XJft/wD7ejalcnv0D75/oS/dx
6jI/UT80ksp1LX/CHi3O0vPGcMFbZ35PzvWjcsvMn2iv/0u635bt/Ynfi/3q
jfvvh4KnDLGVzA7C/XfJX3nK+MJv6XtwP25o/gvPnzhI7Zn7/oJ/nc3UH+n0
X/jeITeA9CkyfiGeNQ1x/3fvF9Yz1RNx/1n0C/EQGYH77ya/85SJte3N3/2I
Jb1/432tnxLLp/3GfWPBTWpfveM3vj9Y5Qr//8f1dy2i/hj//sb77m/H/WfD
P7i/v/0Q/u/xB98/v3GnctXkP/j+OdoP959b//B9bFkqN9z6A3/evon7z99/
ED+Tf1N9af0C3P8n1IP/QwowXoaUh/8nFuD+NOAR6dFvKsD+Nnk09F8v4O/p
p0L/zwL0b+Vs6K/7F79HeXQa/u/2F79vO3mTWDfuL55fswb60/8iXt6ehf+v
/IV9an3D/e+3v8jH4Xz/61wIPaUWE2u7FCK+ZXifYXQhvqfYk0ZsXleIeHet
C/2XCpF/y7pSueJzIcab1ELv19T+l6d80+NzcqMmVK4P/If6/iWJTQn/WE9d
3H+v+YfxPtcF99/nBX/b8Sszrz70f/yH+P5YhPivWQT/5ToRGzsUwd4+FhoP
lrgi/P4i0pfKZSuLEG/LSxGrzgr+dVEqeeVPrM0rgn9cMD4N1ST59Ht/Gyni
3585xIZYOlJwsZ6jVYkVywQX//5hXga9X3NGcHE++byYWP9WcLE9UrdCf+US
+TQeY/ZCv5/g4vhW34X+4YKL8+sTLfQvEVyst+IC+P+k4OJ8Ul8N/78WXOyf
LCWxxaFkPulJD4L/vQUXj6e0AfD/0JJ4fvdB+H+x4GJ/x69E/B8rif7I7yP+
X3D9Lf4Un1L7Uuif7yvEf1vBxfnDvhuVawYJLl6fzHbD/f8C5sfnKX5Mh/n5
ofg+QmIWXLy+OepELC9fGvapWZ1Y7SG4ON6X1sH4H1ga7TVthO8f5pZGe3fl
GP8HBM9a97MovCKx7Kng4vm3zhB6v6psmXysDzRUrm0luPi86UUy9A/g8l+L
oT9FcPF6LCAJ3z8YBBfHu/4H9D8WXBzP7jkY/6Vt8mk+HjsD+c/NBu2p5hOb
wmygNyEF+mcKLo7X0zugf4/g4vnsv8/Q/0BwcX4ZsxHff5QoCz3jkE+MzQQX
j5dS04ktfQQX549BN/H9j1Zw8fj4+hHf/+wSXJy/ticRa+8KLs4/nxIw//0r
i/jZPofY3Ng2n9Z3fePg/162HH+sf6ot3tfEFf7fLrh4P1IX79PftsX48byK
/FcguHg+iyqJ758alsvHeqg8vn9SCS7OT8PLYf5PKgd/u7XH9x9bBNN87EDr
C+NNwcX5ukw8seVXOcTDdW9iWb3y+TQ/7N1NrOpeHva7fY5YO6E8nn8dcoj0
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
bjwRw/vlccSWVzF8//8ev993GIH2Ft8lVrUbwfllArF2yAi039Cfft9vWMT8
eA2x+SjXz4+nvz8gfTEC9rFEEyvsRqK++Rf9PQCN50gezz5UrlePhD8bf6G/
L2CaPxL+HvOUWHKYOWMX/n5Dzkj0t/lV+vsL6nKxKH/zjFjnHgt7VRpMbIyM
RTxca0JsmROLeCzbi/7+gexALNrr70N/H0H1JBb2kQzB36+wiUN7gdHEBnkc
nu/dkv7+hLl/HOy72INYmsLlWgvVV+zj58t+ItY8Yn66A3+/olQ8l3cjNrWI
R3vbM/H3K8K43PEwsXxGPPT2707tqXfHo/9RRvz9jvtcPq4p/f0Mo2QU2suM
oPYtTZkDjcSyPqNQP7yQWJU8Cu197kCs3TkK7198iNhwh7nzK+gvHAV7vT0N
/Y0TEL9Br6C/ZwJ/f+KMv98xJQHv879P5fptCejP8U34+x2mBLz/PforKeD6
q/D3P+QNNGh/5zVidagGz3f8QaybxOXbbt0l/Zs16F/XwPuk/4YG7U1dRSz7
xfXHhT4g/a6JaK/nByrXBiei/EJHYsN4Lj/bjuqb9Ynwd98DVC69lgj7/G1B
5YrvidDfuvpD0u8yGv3pcPsR6Q8ajfYq7yA2jRmN593HPFakndh9epbgTnY+
C+1THyv+B9q+x+A=
       "]]}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV0Hs01GkYB3BpsLvRdaJkM0VWtSSl9mzo+SnRRbddoS0GzaLS0Ja01PyS
aoZu5JJLZVHJVqdJMonjRWOkYXP9zebSZN1qflGzyaW0+/jjPe/5nO/3fc5z
3nkBwu0CXR0dHQ884/d5y3gi52gonQMBu/O3yYh+bXle97j3yIrs3GVEdHj4
op6ehqJ9Jk8vcpaRsCqBv+u41xZXVS6WkW3BoCsf95zpdu16MsK9PbjmiT66
ulx3anERSVvGV1R8hfMs5uUdnl9Ecl0c6soMMWdeauHfQnKvwCRLMBNzQW9E
s38BWSxdWRr5Leb87p7RT/dIakOfR+ACzB+RNs+1d8jIuobsERv0aE21dFEe
eeo24jLmgJ5VcXZJcA65kOF987Yz+kv6L9tFmWTdjPWiZW5o5fVPQt9Est/k
SPZ3W9B53NRs5gQRH2iXKLzQPMmNnTaeMH37iZImPzQ98VV41Sk45/Mw4FEQ
mr2hCl+TBP8VWNSuD0OLc/QLhFfhZXpdjFsk2iHQRfUxBwqbpJ/f0ehdfMvW
Obcg2t7qTbgEHRvIVFvfBamZaj4/Ad3r6LNBKIV2nwrz0TR0n5O3/VgBHLF4
EzQhGx3lvk/i9xAMYMOhB/no19UXOj/IQEyv+uBcgPZSmi09/hgiPfaWrXiM
/7Xj79L+1lLwDa3f/KIS89m2P3itIHB/dsRCzTMNBVsOZfQHl8PQ6z+PNDZi
X+/zfTq5AuyNTOOC2jQUueXceKm1EtpK5L3BXWjj08c6JskhuuzW18ZvsR8u
tsv3rAKjnrnX0gdx/iZlaliaAgzT6kVnxzAf4EoOKKpB91qJ5SJ9liL0rJNv
J9fAr0u7uQ6T0S94BrnwDB73Xo00MUY/2Lvac78S9N9fzLo+l6XoaCF9RloL
5DSZ8YcVS+kYHd34Xl0HYULrje5LsC+/OqWf+xzOd9XW7lrJUvyQk86iu8/h
yjHOE/fVLKVWihVGrvWQHfLbcbUbS8FNTdOuvnow7jSP7d7CUryerTcVdAPQ
dzibU7yxnzHji3ZBI7Rm/h4/15+lsqYN3Z1T3Qi5s2y53BC0ps2S79cEgb2z
/QvD0Y48c8HEZkhwWTNSeRTnaQUdpzKb4V75GCf/BO4TpBzKsW8B+aV3Tavi
sP/TxeSY5hZw1/Le/ZiI++TuGI4OZYClOnJ90Xwzq2SLMAYSEjJ8YtB00uDS
moMMvLAzrnyKJrFJ+0wiGQgVTkrxvoR9QUOHNIaBRHZwVUQS2mqzvCeVgfae
mjPSFHyf55q4tYKBmBVix2Y04c1cMvSEAavTru+Hx32569kVBQNhC8hOSMX9
JSf1NEoGdPcU2vyFzgopjzzFMGD96lojexm9yMmvmGVAabdbPDUN32cbfuYP
MBBOmzotR6tN2y4baBkoNk++EYXmTYpq+HmIAQ/fuKPfpGNfI3MdmKAC7R03
W1u0OlDcmcxRQcoY559taJ02L5GjgQrUmaJNaWhQfpRJDFUQyzpOKEXz11Z5
2k1RwULH0UI1mi5J1rZMU0FdfNFeTgbut1xw4RhXBQdbD5lbo8nt5d9bmqjg
f6qgd3c=
        "]]},
      Annotation[#, "Charting`Private`Tag$204778#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6199008*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6199008*^9, 3.8395296*^9}, {0, 27196.211684}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{{3.8395836826104183`*^9, 3.8395837123899803`*^9}, 
   3.8395839578052635`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"71367305-6e05-4bb4-853c-c137dbc120b7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Ethereum", "Subsection",
 CellChangeTimes->{{3.839667116492749*^9, 
  3.8396671276067133`*^9}},ExpressionUUID->"7234e213-f2f6-4a75-9558-\
d11911bda359"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Eth", " ", "=", " ", 
   RowBox[{
    RowBox[{
    "ResourceFunction", "[", 
     "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<ETH\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8396671765223293`*^9, 3.8396671970669775`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"bbea3e10-4ce7-4188-bcc3-4bc2188433bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelEth", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"Eth", ",", "x", ",", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8396672121115184`*^9, 3.839667219382244*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"4368b707-ae34-4969-a3cb-c09dc652dfb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelEth", "[", "\"\<BestFit\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.839667238142501*^9, 3.8396672399968967`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"1a8dcc8a-e12d-4245-a1b1-10a8662d802b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DateListPlot", "[", "Eth", "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"ModelEth", "[", "\"\<BestFit\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"AbsoluteTime", "[", 
        RowBox[{"{", 
         RowBox[{"2014", ",", " ", "12", ",", " ", "1"}], "}"}], "]"}], ",", 
       " ", 
       RowBox[{"AbsoluteTime", "[", 
        RowBox[{"{", 
         RowBox[{"2021", ",", " ", "9", ",", " ", "1"}], "}"}], "]"}]}], 
      "}"}]}], "]"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.839667297971319*^9, 3.839667303219406*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"6f733db6-b33b-46dc-b1e5-7bc81a9e6f01"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJxV3XlcTF8bAPCxy5KxlJCaSMQPI0S0zNjXTPZSmook1KBEpcZWCA1R1hpL
ZMvYt5YpVLYaS1miJoWYwSRk733u8xx/vP7x+Tp37tznnv3cc4eVb/DU+Q15
PN6jZjwe9zf8kRX21Ymdz1uLJvdtKgIrv4PnTixo5tSl2gWs6dZPJ37fbcM5
Q+gbzrzJ4OfTX3bfdxItDAO3c20594tJDWfpQfCDVVu9DoXXclbcBd8xKXvd
zfkPZ/VX8Omgr/u/kA2W/XXi/kGHG2Q0+cVZMAF8R9trVajxD86SEHDcELv4
32I8nzwZHFi2dPO2efh9qgJwbEV33wnWXzhrP4MrOw36MkVWx5nfVagTD/zh
v6/LtG+cRWPBFUk/V01ri5YtBR+eHbRw8JGvnJX7wB0zqvuMO4/fp7kFTk9O
KBvi/BnjN4BPOYiEY+PRws4D4P5VPzv10xMtHQWembF9VVUbij8IbN0rastV
Haard4PPyY1eXOuC32fIBSe+zXnpfh0t+AA273GmcIASLelopxPPb9D+Suhl
jE8uBnc7OceppxNatQhsJ4jI/OVH8e8CJ+qfNr+5CD/PV3Mu+ux45Tqmi96D
B38aOnrsZ7w+WYeBOvGtLnvG/tWilc5gd3XjoJeTKf4A8JOYzUv/HqX4E8Bv
62eM3RbyCePPBJ9WK4pPJxsw/rfgJsecFRm1HzD+toN0YnGbi0vMmugx/uHg
x6t5U/cN/Yjxzwf3+Zb0MqEZHi9QgFX5oyac/6HD+K+Bt2StHeTnhpZXgePN
37Xa4ojnUxkP1ok/N2tUlNkMz6cdCi7Y2UZcHIDn4/uBZzt+HbeuFI8XbQW3
3NegX0EiWnYZvM/jUklHo/cYfwXYtvGyTd3j32L8Le114pwT4T8O2LzD+O3B
O+7PqDVvi+lCKfhj+MLNvGOvMP7NYL3d72Nder3G+C+AHbz1md8P4fHqMnC/
0zE3nUyx/hiaD9GJTac4PdRewuMFA8F5riuNXP+gJV7gpccnzPH0Q8tjwQei
r+ufdK3C+M+CO93ZtMLkIVpbCu41f+rILvJKjL/pUJ147D19rdlrtEgITtx5
vajmAR4v8wDfbWunWNARrVwPNlr6Wn/ADa1JB0e3b9FW1hzNewYe3Kz5m+ql
eD5hIwedeOLsLn49M7QYf19wtmHCjrc/KzD+WeAPXz/G1/VGq9eAdW9eBUes
RRtOgt3L1VVjtuPnBSXg/pKp0gaTyjF+3jCdeMXWxEZOj0sx/t7gER5+GqOD
LzD+6eAu3yJ8D/TG+6+NAmtKcnLKRuH5+cfBj8dNfP2hOaaLHoF/fspZlHQJ
r1/2B+wxTl392R/zR9lzuE5cO6vAs9NjLG8aN3BP149hvVpg+eZFghuNnHk5
3BXrh/Ao+LFx9OSSNCr/GnBR35AeDWdQ+f8JPlJV7NC0CtPV1o46scHM4pf7
Kaw/Blew/4CzP67YY7pgFXghL3hN41tYPiWHwcPuN/xgfBwtvw8es8vnRetD
eH5VHfi2w9nYb2fRWisnaD8MP3zWy/B8/Engl0kDS01+4veJVoB5aa/y+r7B
42VKcE6+9NbxmVi+lXfA9+eEdj1B36f5Ak4bapzh8RHNs3SG++Nh9LLHUrRw
PDhi7c0VdTw8n3Q5eKu453rjaxT/AfBSD8OhMwKKPx+87nnwh1G3Kf4a8MMG
459eTsD6KzB30Ymjpn54VLMbPy8ZA17Zq8WXTY54vFwG/mkc9Yr3E49X7QXb
LDnxcftkqv83wTffWc/xKsTr438CX3HPmG12CPNT1EkE5fP6rh7DJlL9Hwl+
9MPwnzgP05VLwNf7XJfKJuP3a5LALZ6t6rKvK8WfC65erxEnGfB4oR7s6Ppg
u+dftNRUrBNfyzwywGMsticKEXj8fhO39n/w/qoDwTE7bh8/UIHphp1gs8i9
CR334OcF2eDupT+iAjMwXfIOPGjtVl35V/y8vP0IndgvKijgjiumq5zA+a2z
9wW5Y7p2AbiN8TebmCpM5+8AJzd/5bhfjfGIMsBh/msrPEfi/ZS9ASfZmyc2
jcL7p+SP1ImtTuW1K8nDdM0w8GrNefevDlT+54PTx02S3LhM7X882IN/59fQ
zvh56VXw1empfdOXUv5Xgp87cAUYrW49CsYTRhMdlXq8n4Yh4AkfRl/o+ggt
8AXfDaiq3XyM2v8t4HPztr32CqX2/xJ3fA/Hg09S0Cot2FS9c02j52hti9Fw
P5s3nFc9G80fDE5utW3HrAWU/97gyH1/9WNboGWbwN3iBtUYU34qz4ONF/WO
y+1H+f8SvKDXx5UJ5Whe8zE6cdnM8CX2MzFeoR14T9SmlbrfVP49waMGXVv3
tBPeH0UMGAZHRzrF4fFqFdjIPj36yQLq/56D7/n61i5dQuW/yVidWDgv9ORb
a7SkP3hpuk9MXgKVf3ew+6Hz97rtRKvWjf3XX6K1p8HNDKbjJL+p/j8Fp+VN
HLJJjP23qOE4nfjV7I6XH/DQsv/Aj6WdY+KbU/8/E/zj+cCJDadT/y8HL/hv
b6FrDJp3ElydkdfPzQnHF8JisJtyStX4hziektaDj//iHbGvwXSF7XhIzxys
mrH2O8Y/DeyVLR2yuBRtWA1eGNLs7MAmaEEa2Lzwd6Cxoh7jfwi+FT8grK9V
AxEX/2/wnT/Go9f8bcRZZTNBJ1beiFzVwL4hZ60ErHtl31ndBdP5EeAJcw/4
iewbcxalgtspjyae/orpsiJwVZumyRHxaOUP8Cbr8E63luH5NN0n6sT2ljAC
Oovfz3MFx3ThGlg8XrgSbJN/4GHOMDy/9BC4q1NU8KMUtOIeuKrO/s+zKWj1
N/AE2+pvO8agDYJJOjH/3oPKukvNOAsmgvP7wR2TGXGWhILPeKu6XOrLx/hT
wMPtG9Zcy2qL8d8Gr5hiYRrY2gzjrwWfGBkU00VoivFbTNaJd8Nwd/tmE4x/
HPhbeF1+xNcOGP8y8JNBMCDsienK/eBfTa77lI7A82vywLcL3J8+MjbG+GvA
NQGVGy/uxnRhF1edeGO/tOA9te0w/tFgq4Qt+zd4YboiGHyvpSre9QCmq/eA
kz8dy5sYhtdnuAEe69E7eOxstOAj+Iah7YAenzEeidkUnfh8xGeVZBFaPgLs
8CB9xJ0zHTH+xWD1uYdHOlzohPEnguOnhVgnlaP5OWCDpEN1e3e0SAdOqHR9
Jz1ggfGbSGB8yA2APwowfhdwiuN/j/cmdsP4F4K7eswbXl5kjfHvBMf9mV9X
1cAG488CvxjTaGXLm2hpNfhCQo7b587dMf52blB+oPTfOotWO4LPHYAbcLcn
xu8P9ozP/dprP35esB18ccj33Hm90ZLr4Ffvdp1r1bYPxv8aPJD7U/sfxt9m
qk5cMlPf//rbXhi/A3iDzu2KRZPeGP88sNEP5YLzLWwx/m3g1S6D516zxfPL
roBDxuz81rS+B8b/CrzsR5t3l9ugNa2mQf5u8HiUcZjiHwKO5LLjGl6/0Ad8
tgIucAvFHwfeEAkdRjFej+Ii+IoFXNFKTFeXg13yXlxcH4nnNxhN14mP7rsp
UH1GCwaB/euqfA6W4PdJ5oIXBhs23J6O3yffCJ4h7H28vQStOgeWXxatffUW
rX0BHl4+ZWtSIX4fv9kMnXiKqL3PjWmYLhoANrOZ1uSwHVo2B3x/OHTgjmjl
BvD0qT2VmyT4ec0Z8IyctCOuWor/OXjWnLPZ+rl4vcLGM6G9hNt1pjumS/uB
Txhf7RQko/yfDXZ22QL1EMuTei04vrz0y4JyK4z/FPjhr7wnyePRgifghXmH
3ulvdsX4G8yC8gjTzyxTLJ/yPuCvC1ymjspDq2aA3zvzjk+ORGujwZ8fTvbl
D8Xz8U+ABX4fPUYk4/eLHoO52xPUDi37C25sxc348Hhlr9k68fZ9FU0jqT5o
poKzR0ILPwjNWw0e3fqoz/dxlhj/MXBfacPLHxMxXfoAXH8OKiwPrfgF5rqz
I0Owvql7uMP4SuN5bHsixmeYAr54wzthcAs8nyAcnCdxvXBSZY7xHwGrbRY9
HvkYj5cXgofaxf/OUeL1qr6DbwlUywLOorXdPGA8EDi5dts0zA/+ZPCp5a0K
5qZQ/GFgtdX0488eUfwHwWuXQwU4ivmlvAve8t31XvhZTNd8Be9I3xN5PhPN
E8yB8d26p3tG1KGFE+aw+dFutDQEbHtebNPpKlqRDHZ3W7fQ7C/V/wJwdSDM
eLvi9Rk+g1NdoYA2ovLf1RPmLzDcuhpO5X8seOX+Q92v6vHz8qXgNvsHHrow
C8unah84s7JD19vzqf7fArtz3bsFthd8A1jKdRCb+2L8nb1gPHbqp+eS0Zgu
GwUeVxHeIb0ZtifKIPCSW3/PRexAa3aDueZivB7bE94N8PUrW5saVmB7IvwA
5prHKa3R0o5zdeJd8zf6eb2g+i8Gw2DEbHkS1f9FYB87qMG3qf3bBV6MDRQe
L1CDyxJiN3gsx/NJ3s9l6wM98XrkHbyhflam7rvJo/bPGSx9relWugrj0QaA
K1omHF97luJPAJ9/v/yiSQRalOn9r/2k+N96s/pRhla2lcJ4onP/l9ZN8X5p
hoPbdYAWqxi/j+cPbua9e5LJPbRQAd4y4X3jQQ/w89Jr4BuP+szv5Ivpiipw
U+4Ekf0xfmMfnfj7dNeICXsHYPxDwTG3p+ekVdlh/H4+rL32QEu2gr8snrk6
PXEQxn8Z/Hfkzw86dT+MvwLcCsJ1O473V9vSF/pTrgEPw/vJtwe//XW85uFp
av+k4HteEwuaHcD8lG32ZfVViFZeAI80hxGUB8ajKQM/5JU1NDpB8Rv56cQw
mJS+VlD8A8Hc8GPyeYrfy4+tz91EK2LBcHedq93xetRnwb4HS2DEgflrKPX7
V74o/5vOY/ffHy0RgrX726ZmitFyD/DWXh9aZ8mo/V8P/vt45TubGoo/HRy1
5eoiIwesT/xn4JCLJr/uGqNFjeZDe+QFPfZQrF+yvvNZfHfw88pZ4NAEs8Yz
P1L/twYMvcejPq/RvFNguNpWDXX4eWEJmCs+zs0xXcrzh/EbN9zmoRW9weMP
yG1ym+L1qqeDx2Wv7jqU+itDFHh22mDogtCC4+DO6jkCsRv1/4/Af76Fwi1A
y//4s/VG6q9UPRdAfezZpuXFN1T/3cCqRm+39JqM95cfCeayo2oq1f+jYG75
b9kezD+ZBuxwoWBFVjQer/y5gJXvU5T/1gEwnoHklJ/4fbwpYKjNT9p9pvq/
CnyyqHim/gzV/8PglPsniooT0Yr74FXvbAY0p/xV14HrrSAiNcVvtZDVl1fU
/k0C/0p08DJNwPZcsgKckahoE56I91uuBCs3qSremVD7dwf8MNi7WeEz/Lz2
Cxhyc7PlDcp/y0CYP7e1d8x8SPk/HryCK1CrafyzHDznUUZlh9V4fcoDgaw+
jUdr8gNZ+fOh+D8HsvHFNhr/mC+C8V8AL3iNNVo6ZhEbL/nh+RUycHzVZ8uH
wdT+7QVzxSFmLNpwE7yllDsBxf9pEbv+dWhJp8U6cUEzp30zotHykeDtbcLt
T0ZR/EsWs/nOHCr/SWAnGL6+caLxTy64al3y/RNt0CL94n/9P8VvugTKZz/I
kUtU/kVgPpzemdprTSC4cOPDMu1ENG8XeBVXYEtp/JO9hPVHdVT+34Gfd4n0
sQul+NsH6cQwWtOMmk3l3wl8Zid0EH8o/xcEsfbbger/DjDXe4esx3RJBriw
k9vzLp40/nsDvg3FsXMwlX9+MJvPSmn8Nwxc82WCe4wZmj8fLIPi0eksxR8f
/H/1TXYVvE595+DomZT/lWB/rvsag+ma1jKd+FGZtmUC9Ve8oeCUk6efepdQ
/vuC983g/oXyf4uM1adytOKSjI0vzbE+qLXgg98HvEmfT+1fi6Wsf6D+UjB4
KevfpNgeS7yXsvn8C+r/NoEv1f55vHIT1k/VefBp6M5vReHx2pdgH24Ae5zG
/82XQXsCty8yh8b/dmCu+z0+kNp/z2VsPJBK9T8GfGPeCel0O0zXqJb9G99T
/18KXt96ypmdPdDCJst14o7YwaOl/cHFRgHdFs9GK9zBGU0gQH+0eh342iLo
4d6iDaeXs/5pK1rwdDl7PtGO4m8YAu3vZ3GR/0W8Pvl/4MypiVbbZqBVM8FL
u7TW9pVR+ycHWyfVK6K6UP93Esx1V5q11P8Vh7Dz76D8rwffPTj6Uu1LGv/b
hsL8EJp/4w+U/9PAlVz10lL+R4FLbi0ZJK+j/E8L/b/2XPoQfONrL8/4hjT+
+R3Kxkd9Kf9tVujE4fm2w3a0xHSDZAWb/9hR/kesYO0Z9ZeSVPD3aVAgrKn/
K1rxr/6iVT/AXHERGKj8dw/TiWNNnxXWPaL67wo+UcNNCCj+leCZXHGtp/p/
KIxdTx+q//fAi/aG7T9Uie2t5lsYG696Uf23WqkTN+QylOaLwokrWf+3kep/
KBina9SeKVLAPQc0P2W+F62+Dd4e9WuYrB+1f7Vgbvg5lubTAotVMF43hzuW
Te3fOHBow73NuyRT+7cMfAGGx89PoFX7wTON+547MIXa/zxw0zW7Rsa1ova/
BhwzFHJsJ8Yj6hIO1zfP4se6HBxPy0aHs/s1ENOVweA3q2RhJR8xXbMHzE3P
PYNp/ncznI0XLaj//whu/qa6JuIXHi81i9CJj0yb5Xy3thvGPwKcOsBj7Ixp
NP5fDO4dMtcvqRfakAi+u2CVxQsntCAHHH/CZuO1IrREB86X679+PEPjf5NI
6O8/jFh+YAWeX+UCTr/kG/3sPlq7ENznV3rzv8fQ/J1g7vHhkHrsT0VZkex5
6HK0rBp8uRdMWNxp/aPdarh//X+2ePgfpmscV7P5wVua/y0A72k3/osdzdeE
28EwG1MvP4OWXgenbMtvNT0P52uK1+BLVwc4+YzvgvG3iYLPt7a7XbAKjzc4
gH/2vDLb7QaeXzAPPPG+RUCTFWjJNjC3XDiniua/V8CVGy9+7yCi+e8r7vPn
LW27+dH8t1W0Tlw0/lMX75Y0/x0C7j1sx93op5gu8gG3Kal3uBeLlsWBZ5Rt
k3lI8HqUF8EK///2FgahNeXgNJ5ZkXINmtdCDv3FJLtlpiso/kFguFtbRifg
/FY6F2w6eHdMxWG0YiM4+pkTdJl4vPoc+MlhmVOLWZhueAH+qFM7dD+B811B
szU6sXnz2w1t+DT/H7Dm3/NoTJfPAUcf2djqpBmmqzaA4WiZLh3TtWfAkyeI
Lyd1wPPzn4PTjs9ftHo7xd94LXt+50bx91v7r32j+GeD92+ebjZnNs3/14L/
BBrz7+VQ/p8Gd4TqMm05lkfhk7Ws/5XT+k+DdTpx0CBuRQbrh6IP2GzXY6MA
snoG2Lrk1TReBpX/aPD3XOhwqH4KTqxj49mjNP99DPbBASLV/7/gBjnmTlHB
+HlVr/XQ/wreO/OuorVTwaPiFr/9tQnNXw0eMbK+cceJaNExcIhteu9fhVT/
H4C5cCpH0/z/F9jb9i4/fy+1fz02QPkzhgFOCNV/CVhc43fP6y7V/3Dwxi+l
T9YMpPbvyAY2/3xA7V8huA/eAGr/voNNut5+7XKE1r+6xUB7AcXhyUga/00G
B2aEJJhZU/sXBj7TA0ZwfSn+gzGsv21P7d/dGNZ+WlH79xXcBxs0Wv8QxLLx
FJ1PNAEMR1eEh6BlIbFsvL6C1v+SY9n8ja5PUxDLxv/DqP2vjf3XX9L6Z9eN
OjE+rrpA+T8WXAujXe98Gv8tBXPdd3EzGv/t2/hvvEPt/y0wLgfyqf03bGTz
tW00/+m8SSdewg0QztH8ZxTYU8DlAI1/gzb9y28a/+4Gv7t8ptHbVjT+uQHu
y01oS2j88wE8+47dzbOFaFnHzVD/ImEG6kHjHzF4uAxGvMlozSIw1315rEfz
EsEw229rT+M1oRr8FYabQ2fS/Oc9eBMMl1sOpPlPhzi4nnEwwHai8Y8zeODN
s/2CutP4JyCOzYfNcDwnSAC3wAYC52uSzDg237yL83352zhWnw7heoKq7Rad
+LXUvkGMO64naIeDB3v3sLzebCDG7w/mVjPWhKJFii2s/03G9QXZNXCbA8lh
fpMxXVkF1veHGrgPrTHeCv3dCE+HiEo8nucAXvsqf/f1o0KM328rW//Iwe+X
bgXXcdPVGfh5xWWwLbfAvXIwxl8B3hYKIzbZEIy/5TYYLz1OHFaQ5Ijx229j
6z3H0BIpuGdAwo2esWKMfzP46dqyLiP/G4vxXwAvb2NU/mshWlsGHr7UYe6a
Dng83yheJ542t8/B63PHYPwDwdcCk7t/Pjsa4/cCc8vBO3aglbHg0EZNym73
QWvOgv8WV2YVl6B5L8AzBuyKyt06AeNvqtCJuX/nKcdj/EJwH0lczo0RaIUH
+OoMfiOv4nEY/3pwvXttZX8/TDekg8NiOzSyVuD5BM/AM8d0T5nVGS1ptJ3V
l8Z4vLwveOWIMy6b3NGqWeBueYvmFnvj+bVrtv9rLzBe/inw696m2bZTKf4S
8M1VQ9e8O4qW8Xaw+V8yxd8b3OBoK3NNB4p/OthnRuZv1554PC8avLJV/J//
DmG68PgONv+7jJY+AtuF9bWyvIBW/NnBrt8a80fdMwHmVwseDDcxp/jdEtj8
5DamCyLBy3I6/f6zBeORHAW/sWiXVTcHLdcksOu1Qat+JrDxtgeeT2u9Uyfm
Ho926Inp/Cng8+erD7QoQYtW7WTrqeZo2WFwxaP9GQVj0Mr7O9nzB2e0pg7c
ueKDuDndf163XTCf21lS3u4zpgsngS/1+ZJj54n5JV0BTs2YOSLMZArGrwQP
3pfvI9zshvHf2cXujxna8AXcrOch7zk50zB+y0SYD8gv1Ddoj5aMBx85VmD1
SoKWLwebZk5rUPcBrToAftIOWljn2Rh/PnisZW2DNXtmYfyfwUYm5nP5IZgu
Mk+C8ZcxVHg5psvGgH82/13x9vlMjF8GfuNxgbfkDlqzF3zlzba/ST5o3i3w
4R3DGkxeiRZ+Aj88tdjysy1a2mk3zM/+WjuHXUQrRoK3Fr+pn3EOrV4Crhhh
kbO1M36/IWk3u7+emC7IBb+x3pnFD0NL9OC2bpPKeMPw+uWme3TidrGLBS+F
UoxfBA4ZbWs1+6A3xh+4h7UHmX4Y/y5wp7yXAo+C+Rh/NnhjpkS9Issf438H
jnANL1+ZswDjb78XxrMVZ1NGF+LxGqe9bL2z1TyMPwD8reiRXHwFzy/csZed
X4LHSzPAwvlaualXAMb/Bjws/HeZzZ/FGD9/n0682mN0dEAx2jAM/NahW3lq
/iKMfz64Q8IQ9b3vaEk8uEfDYpfmrfB4+VVw2rF4dcqJIIy/Epy3oZHVM+Ng
jL/1fp044H58dkisDOMfCuZ2L3SzQot8wU17V5Yf80DLtoCD261T39m3FOO/
BP7vvyuWqs6hGL8WvD5lqDxrPJrX8gDMP01y6ks6rsL4Bx+g/QxJT1di/N7g
SaZ1ls9kKzD+TWCvOFPlh2S0+jzYtdco9cHuYRj/S3C/oeuyUy6hBc2T4X5M
t+NNH4KW2CWz+y9Ayz3B/FBLeQc6vyoGbLL1YnZta7w+rQrcsNXdlE9N0PxS
8M4Os3mP5qBFTVLY/RgegvH3B5f+6a2uq12G8buDD4e8827XEu+HZh247rab
PMAN03np4GG7WvGKo/DzwqfgX28XqgUfMV3aUMnubxBa8R940+XC7AO2eD71
TCW73/Vogxx87sl1l7npaMFJJbt/HdCSYnDYuAEi33uYX/J68JRuudkF1WiV
7UGduKrvLJdL2VgetNPAFypjyievwPLAjwL/eWrt4jsK00Vp4Mxh+fLFukCM
/+FBlj+nsLwqf4O53TU3n2J509gcgvG94351yBA8nucGnjbnvaD/VzxeGAEe
vHqF+ut0Kv+p4EY9S9UHTmL9UBSBJYPaSLf3xePVP8BjHjSyXDdpCcbf/bBO
fDq7By/6G6YLXMGCon7l4QH4/ZKV4PH8dHnueKwP8kPgm3N7SYefwXTVPbDq
riElyBmt/QY+HP9DrjZF862OwHj1wB7plZKFGP/EI+z7otCyUPBi3bH6/zaj
lSlHWPnpjtejuQ32kjWNdrmK6bwv4JypXuqJ2RS/RapO3MQs0aU8AtOl48Dm
l3en7JuN369Ylsramyi8fvV+cNqW6JSa3lT/81JZ+/iK6n8NuNo/WmneHPNX
0uUoK4/ulP+jwT2azxJVPKT8Dz7K8nsLljftnqPsfsjR/JtHWXsWhRZ9PMrq
w+TlGL/ZMVY+F6KVI8BXGqRYNj2Ix2sWH6P94VtzqPwngS99fRRt2hUtzDnG
zl9F5V8HfvxorHbKEyr/JmkwXpqUmiJbhVa7gP1zblpuSEIbFqax8l6CFuxM
Y+1XJ6xfkizwyfMe0vhTeH3y6jQW71O0qt1xKJ9WW1Ly3PF4rSP4eq9w7eEs
NH/BcXY/y9Ci7eBDvvuzx2dheyC7fpy1H9fRytfgTifv15/sje2Nps0JnbhI
eTA69xiaN+wESzeghfPAnxNPWpYOp/Zv2wnWXhbh+RRX/vkyWv0K3DGloTRj
GcXf6qROvCZhibYwHuMRDDnJ2pvXFL/PSXZ/EtHyuJPsemPx86qL4L3Ow7Xh
/pT/5f/SW1L+tzilE6tFfMG6AMr/QeCRd69FLx6Cls09xdojN2r/N4JnL5dL
jTOxvmvOnWL9iyu2J7yXYJfTh1wuaLA9ETY7zdrPMEyXDjjNvn8W5f+c06y/
PkXt34bTrL5cp/bvDPjMg2XKsbZYngXPT7P2ZD2V/8bprD96hcfL+4GXWrhK
rx1Dq2ans/I2muJfm87GT3WYzj+dzvr3nnh/RU/S2f06R/E3OMPS6X4o+5xh
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
v2jY+lEHHD+ILB6w8YwV9f/jHrDyNxyPVy57wOrPJTxesx8cKc2PFg9F8/If
sPrmheVbWAPuN/ymS6tYKv9dHurEPdtWeM/7hMcrRoNfGn3zftuK+v9gsOMR
M8GAVWjDHvDPYnPBbE/q/2+CD4y9Vf9nC1ry8SHrP+VYf+Vmj1j5ysV01YhH
rLxsxfqsXfyIlX+q3/ykR2x+sRYtynnEyvM1il/3iI0/HPF6lCaP2f2SUfvv
8pi1jzo8nhf4mMX3mOr/zn/pNmhp1mNWH81o/FP9mN2/JhR/u2K2vnSO4ncE
h/R8Gu10Ey1YUMzqpwd+XrIdnOLeTpn3DNPl14vZep0T3l/V62LW/jtS/rcp
Yf1nIZo/DJw7xVxUPgMtmlfCvs8DLdtWwu7/ayxfyitg773d1OMFVP9flbD5
0ElM57V+wsYrkWjhkCes/LXG80l9nrDzCdCKOPDdDXeyV0Sh1RfB2w2Z2Qen
UvtX/oSV11hMF7R4yspXC0yXDHrKysN3TJfPfcrG0+/Qqo1PWf0qoPjP/Us/
RfG/fMrGJ9S+iZo904kndRqqHH2C2r8Bz1h5ao31TznnGSuvT2j8v+EZyy8n
PJ6nesb6ZxXV/+fP2PxuGH5e2vg59GeBtfW9x1L97/ecjT+HUP2f/Zz190Vo
w1qw24DCcutctOD0c/Z94VT/nzxn6380H5E3KGXtaRpa1QdsK/gQrd6L7bF2
RilbP7mJ5stLWXvTiuY/J0rZ+n0qWvb4n+dj+6b8W8rmnyJM1/R6wdYbl+H5
eNNesPZ3LrX/q1+w8fRFvB7psRdsPtsIrXjwgs1nBqPVv16w5wVHaf7T46VO
HL14h+UAJc3/JC9Z+30N768k/CXLj+1o+RHwhBb/yd/dofgLX7L5K823tN9f
sv6iGs3vXsbmDxUYn2hyGet/BRR/WBmbz4vRyoNlbPzRFePT3C1j87kW1P99
K2PzNwnmr1BQzub7zan9n1DOrted4g8pZ+WhD83/ksHj/kq1P96gDQXlrP+9
hhbUlrP+oy9a0lXL2pevlP9jtax/iqX4l2rZ/eTR/Hef9t/zHTQ/T8vmw/3Q
IoOW9We9af7buYKtH22n+e+oCrY+15XyP6iCredNpP5vTwUrn7fp+c+NCpZ/
1jT//VDB7k8Ipis6vmLtXxpaLX7F7mcgzf8XvWLrbTeo/098xdbLxuP6gUT9
is2vn6Hl78E9O3TTal7h+oSqQyVbn7Ci9V/nSlb+ftD6x8JKNt59i+s3ooRK
Vn6C0LLMSrY+kErrn28r2fySR+s/bat04uW9O/FOXKf1L8cqtp4VSet//lWs
vbtP6z8K8N21m1xa9MDzKa5VsfYzhdY/q6rY+sxXXN80GL9m56f1V4HDa7Ye
eYae//i9Zs8Hwmn9c+trNh4cSOufl1+z8vIMra14zdYTaX2Y3+oNu94OtP5r
/4b1FzkUv/TNv/aM4t/8hl1fKMV/4Q3L7/m0/ln+hrUPdD6h0Vv2fKcUPy8d
CF6Xek2e1AKf7yi8wCd3T3CpyKPnn7FvWftsg887DGffsvqYRc9/Xvw73wG0
pGk1Ky+H0HIhOKhuWYp5N3xeq/KoZt/3Hp/natdXs/HMIly/5p+p/rc+jRY9
q2b1gZ63yBq9Y+vbO9DKvu/YfDmDnv/MesfGDy70/GvtO7a+TBaeAmv2Wka/
a4fxSUvesf28D3F9XMF7rxNnj9kh8GyDVvd+z9q3zWjD9H/pSfh5QfR71p9K
6Pnv8fes/PzC75M/Ajez9ikvjKfnX3/es/XJe3i8tqdOJ/5yo3mF2xd6/jVV
x9Zbu2B+iCLBI28NjU6g53uyozpWf+ajlRodex4dj+fT/AQXbpte/iMPzeuh
Z/OT5Xi8cIqe9R/dKf5VenZ9I+n512E9iyeN8v++nj1/jKbnX3V69rxsKMXf
7QPLrzOYv5JJH9h4NYnyf8UHdr9/olXKD6x8rUBr73xg5cWe8v/rB3Z9Iyn/
LT/qxPI9n7THXtHzv/Ef2fkX0fO/5f8chtYc+MieP56m538FYIsbfi5xR9DC
zx/Z8/w19PzP/BN7/kjPExVjPrHz0fNBtewTKz+z0Ia9n/61h2jBrU/seWUM
WvLpE3u+exIt72Rg/csxin+kgeXfWYp/CfhHabJgAD3P5e/+d3wpWpRrYOWj
A8WvN9D+3domFL9pDeTvSDOXrZ8oflENu9/dqPwvqmHzPVcsD8Jd4MVNrwhK
e6Cl2TXseUksHq94V8Pq2wi0uv1nNn/ajjY4fWb5F4gWBHDps2Uu0sloyY7P
rH14TvFnfGbPn05hfVe9+czi30P1n1/L2tPX+DyaP7yW9Udq2v8xH7zzx9hy
6260/yO+lvX3qb4Y/9Va1h5MwP0lmspa9v2mPhi/8RcYH0c+sOh/GvebCIeC
9y/afbDm4VyM3xfcZlxu1gFvT4x/yxc2PzH3wvgvfWH9nckcjF8LFl9dUn5Y
jha0/Mr2w+zH80kGg92nnM665oufl3uDU5wbRn+fgOdXbfpK6/Gn0jBdex4c
ZNYkp9IMzS8Dx2w9FzVwOJ5f1PwblLd7u8QXt6JldmDcTpvsjvF7fqP1tYsG
2v8TA+7x9qbF86m4X4d3FvxwW5eoIS3QwlJwfN7BqI630dImdTpxQZIkp0JH
+3/6g89/gg7Ykfb/uIO1fRXK76lowzrwnrZlFusPzcD40+vY/sX2aMnTOir/
9uZoecPvbD+ZBK36D7y7g2WKogC/XzsTPGjy0yi7sRgPf813tv/KDS06+Z2V
t9Z4f2TF4Gv8ky653ng/lPVgfuLZg/uEmK6x/QHtmctS3urZWB5403+w/Q2x
WB6EUT9o/N54OKZL035Qf3E+Aq14CP40q0FWqTXl/2/wlsyO3hcG4ecNNj9p
PSlRhBa4gcOEvinyCLQkAnx7e6G64CSeT54K9s9alzJ0L6arisCe23crY3xw
v4X2Bxh/YOsIlme+9S8Yn8UeEqVMxXSRKzhAp5UGh6BlK8E3Fui02sto5SFw
5pAYnvQbfl5zD1yrsLVcexfNqwMne04TnH+GFlr9pvFdgw4U/0Rwu9TMnI6V
WD8UoeBEm1Rl6Wq0OgVcu7U6OdQB74fhNpjb3jWwG35e8AV86tYxntlaKv8W
f2D+pjK3alSJlo/7w36v4xNatQzcZs9nqzQRWrsf3D7qeMoQK/w+fj5Y0Fxx
0K8Mv09UA/7gP8al8wTK/y5/deLXo220T86glaPBk/72jK7zpPwPBkvvN1jr
MAvN2wtu2Ncrx57ql/Am+K1bTfRYS7T0I3hJlzFigzvVf7N6nXiVVVeL3FQP
jH8E+GxuX8vx/mjDYnBr+1ALk2FU/5PAK3trk9/ewHRJDvj4wdbqpm/Rch34
2gAnn0378HiVCU8vHv/Zszy2HNO1LuAGJtsEu76g+YHgwvyLB31foEU7walH
Yg8WD0PLssDNrQTeI7qhldXggwEW6m4PKP52DfTi7cWnkxNKKX4nMLd+cGAg
tX8LwFmmX8rMplH7tx3c/nILX+URtOI6+PH1lS5Bh9Hq12AT7gWc2WhDm4Z6
8cRhd3IWx6AFw8CzVjX0Oaah/J8H5trz3uep/G8Dc+OTHiOx/KmugJe87lHf
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
50k3BAeTRP8DvZz3Dg==
       "]], 
      LineBox[{{3.8231790526888204`*^9, 1512.281995}, {3.8232*^9, 
       1475.703735}, {3.8232864*^9, 1446.033691}, {3.8233728*^9, 
       1459.973145}, {3.8234592*^9, 1416.04895}, {3.8235151303662376`*^9, 
       1512.281995}}], 
      LineBox[{{3.8236084245000377`*^9, 1512.281995}, {3.823632*^9, 
       1492.608765}, {3.8236524189999413`*^9, 
       1512.281995}}]}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV0Hs0lHkYB3A5k1rFKrc4rWF1UVtuRbvIPu/IbUu37aKbjEsuhZE7E0MS
I8y8ampIZO3WNuYs2VltUb+S2hSt26pRGltC3hWOOVGpfeaP97znc57v+31+
v9cqKGZ7qLaWlpYfPpp34ZJ80swaoYDR3TCVwCc6rbcvD6AFp+ufjEbxSUbC
lGj27BGKuIVEDYTyCe9eKNcTDQWNko6dfLItHLSbNbblDVc78YlRtdrjrg6a
113IVacR6ZrA+3fm4veT5U9b4tNIFcep7dZ8nM+sjSmLSyU1daYVocboaKOu
T57J5JvadY3JX6EDnQx2rE8kZzuG/IKXjlBafxm+feEeT6a9OiqnV6NFl+bY
GB8lD7ynOTNO6Kf8d8EGPFJU6n+p2h3N+pJzjRwmXoa+GWu88T6ccqVxQhg5
YppUuXwLzrOuWu2LCya50c/z7u/W5LnXHJwDyMLtmQ1dB9Fzg4V8s12kYM8f
QX+GafYr2jw2biKf66xbfXlorYvVqoXO5EVJW5Z3siZvXbHAYwkoumo/jgnQ
2vX+pie8gO+47E1sHvpBg1TZ+SPULn7ydaAYrbdo5d72ffB8zx32eymeb6gt
YnJ9ECRZvwmbVanJ6xvs8D0Ec+CH+N+vaOYvOa6ySMgVuE6616EXu9srpqIh
2S/ylvMN9CVhvXV6LAREtW9WNuH/VkGZvSwOrpolrhh5iD6nkPnWJcC7YVlS
ZydaecR0VW0SOOqZC8OeoRuifbcrU+BZQ/Ng+Cvcb2FXld2XBvxbv35h8h+a
7dL8Xi8d9F5blJeoRyjL7iarMjMBzJe2Z5yaQSt91XfMMkG7vGHJSh2GAju1
TGiXBYccBoyc9BlK1fQ58YnjcbgxeCHZ1IShBGWyMV2HbNAZF1X8bMFQWvf5
fi82nACSQwwvLmMoS3v5ze+8coAXY7PRxw77hrUNnQ+chMJXra3712Fff33a
NW4ulB1j3fX5nqEC2frFbG4eVEbEpau8sU+eV2CTKASTf9nZA1uwLzXkfH1y
PgjkrM0Sf+w7G1I4JDoFvedT8y246OnZdp9+KoCqRbZGRhHYX6LzSlpVCMGD
ZlxFLPafWsXvuV4EYo7HdFMKQ5E+/9N+B0VQc3uGdSUT82bM7Yt9ImguHuty
FaI/Lui/Fy4GnwnLMReaoWoywnR/GxYDQ/VVBaADv22sHB0Rg1hcuicLbTC+
0NV2VAxKe5OmB2hB0M3D8gkxRMXMk/gXY97TuFX2QQw0o3ZNPI35eU1Fl/Vo
eP665WSthKF4EgvjSgcaspxz3brR9lvi5f1raFiW4zk+hVbNafG0cqaBt5Ts
hbMMtTUlIbHChQbtEMXqx2jL/Y96LnjQYNNf3smcw7xVaknpThoe2R/INZAy
lEj52LF3Nw2xAvP1a9FQvPSh+V4arrPP/JKGrmG1f5AG0OAXIEzRLcH84PID
58JomJB729qit1YcU/dE0CCZYb3chh7z7ywwPUKD6nzGJima15J+U8KjIZtx
m9WINjjeteufozSscHuvUKH/dl351jiBhrb8+khWKfZPZpzcmUTD0d54tg0a
5N3sMyk0/A8RV2Bv
        "]]},
      Annotation[#, "Charting`Private`Tag$184281#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6478944*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6478944*^9, 3.839616*^9}, {0, 1512.281995}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.839667311054056*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f6c0dbfd-6537-4865-987a-05db3dd1caa7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3. Dogecoin", "Subsection",
 CellChangeTimes->{{3.839667130029698*^9, 
  3.83966714033399*^9}},ExpressionUUID->"bcb8612a-ecdd-471f-b225-\
8b22bba6b695"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Doge", " ", "=", " ", 
   RowBox[{
    RowBox[{
    "ResourceFunction", "[", 
     "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<DOGE\>\"", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8396673365810456`*^9, 3.8396673434944906`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"84639f24-3884-45c4-8f09-f6a3a133d9cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelDoge", "=", " ", 
   RowBox[{"LinearModelFit", "[", 
    RowBox[{"Doge", ",", "x", ",", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8396673569783306`*^9, 3.8396673665531983`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"ec0dc8fe-1e5c-426a-919e-9859c59c2f22"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ModelDoge", "[", "\"\<BestFit\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8396673787202415`*^9, 3.839667380282135*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"7062473d-e453-4d02-bf9f-3fb635f41ef6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"DateListPlot", "[", "Doge", "]"}], ",", " ", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"ModelDoge", "[", "\"\<BestFit\>\"", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"AbsoluteTime", "[", 
        RowBox[{"{", 
         RowBox[{"2014", ",", " ", "12", ",", " ", "1"}], "}"}], "]"}], ",", 
       " ", 
       RowBox[{"AbsoluteTime", "[", 
        RowBox[{"{", 
         RowBox[{"2021", ",", " ", "9", ",", " ", "1"}], "}"}], "]"}]}], 
      "}"}]}], "]"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.8396673954838314`*^9, 3.839667403308329*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"d1f7b30b-13df-41b5-8a93-d54fdf7d58e0"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
mdA+qiYzoT7avjOx/2fOhP407kG75dFMmN+OYrMw/vGbhec/+lnweyJp2izw
N807Z+H6/2AW7n9FMiC94JsB65UhMgPOd0yTM/D3T9syIJ5Q3cuAeFJb0Ajn
OXqtEc4LjD2NcF5tmUic6/eIji2YXnPbCOchYr7Zyvsq+fynzmw4DzJ3I44+
+kcqVFBg/eOJ/YeVLPLwlz/r3zxb2f8CWP+N2cp6y2xQZSr7Ed+XmbwylfeG
/PtLa3gm5FelEufsPlW/8+8xtRsylfHL6fVXM5X3gfx7TuOfTGW+cH0snnPs
uqhCFyt2usPs6DRHWV+YNWPmKOONWVw7R9lvuH6SlfiNtsafQ86BrP8nsq36
XMV/ku//OhKXueIyoUNhZiGJONfvUw2r5irxFec3XSD2Sbk98o6LjvV/Ix76
t4azu43bV+U+j/aHFvZH54LYrg2Zp/Qfs37kPOV+MYj1m4gzX1lfJTVqzfrP
Es+8FPMvoHhb1v+Z2LVMrQvPhzBrXLNI79HO/81L5vRicJZyf9iS9Q/LgvLM
S7OU95Kc33Y6S5m/7Vn/R2KDuZFPdc/OrL/yfLvuz+0M59nRXVh/a+KKTUeK
U+3dWb+BuK5mZ9XDIeGsfxGy6iSxV3ij8ql3uTzte2Jtnddz7kUz6ysuUM73
mI0tiZ26Dy07/SHntyQuUM7vwlj/fOKBHsPnn+jRifUfI9bV6rmv/AKun/iG
+PrrTZvy7uL6SeUW2nXrth0q9/kBs1kgPpnhM6qOWxTrTyC2q3IcwHjWP4/Y
OSlz+IWnA1j/EeKEAUHaEnUTWf8r4nZFjm5M/sFsKrPIrpvydVvaw/T+rL/Z
IkVvX9bfn/je3pO/71ljWH8mcYGKecrO0vRj/QeJY8yPwwdEx7L+58TL83yJ
vTaG7Rb1YrvuckF9PvcTzI6mxIlbFr2YMiaO9fcjDrzYIPrXGf6+mEH87ezB
LjdXJLD+fcRL+5Vbcasos/kJ8f1i54u22j+Y9RdfYtcVD3M4D10ziPU3Jj4a
Fmk55yTr70PsNGdDWqdgWf8M4jUHu7YYFTyQ9e8mfhlyJ/x+NU5vtRGLj4d5
3krl9KpiS2k+fF9dpsha/r624VJIr48irrHJ/V5MOLe/cSrxTTGh3sq3rMey
g/jYj2vb2r1iu+M+8ZyKg70P+XF+TeFldl3c293FLozg8sX6xCMK3J3ieYDT
S72IJ9xrtWBlL1l/OvGihTn/2G4zL1PeE8v9f5fYUf946x5HmIUCy2n+jnXv
mLmF2VCP2Lmw/8mNOq6fqQfx/mCnvN6Tuf+sE5ZD/6m2EM+v5DSi+yO2a28t
V35fJ/d/XpNdp67+vvJZkdlYm/jtl3cZ3zbK/d+VOC7GeKBwZx4/Don4fV6P
AuUszJpNxJezb342mZjF68TFy+9bt8mfvyf9Mynzg8sz11pB/ta70XMeruTx
aeu8QlkvmNXjiCf8zGoSWY5ZWL9COS/m+WK4QjxMPXznRo9I1v+buJy4fl2G
he3WGivtuvWPIro3esB2VSfiRusy85imRbD+FGL59/k8H/VriD830Bs/x/P8
NV5aqfy+lO2WHyuV+KU366+2yq4rXeaao85mLk/TgXj16feJP3fw98XRq5T9
l1laSRztkp4xpVY06z9PHFCnuWGep571fyX2evIwrldjZrXbarsu419eneTE
9RfaE8dkzt5hXsdsGLFaWf+5PqblxM8W1H7XvD7brWdWK/tlL9b/mXhKXJH6
eb2YtVXX0Hxq6jbc6sGsb7tG2X84v3Eo8dkNS6MT2jNblhDXevk181R/Zsep
Ncp7FWbNB+JhMc/mH63A+sRKa+26yrUiqr9tLetvRdw3aKV1+ztm82DicjnX
A2pZ/0LiRe6WV5EH2a4+sVY532YW3q1V/CHWa6iwDvW3IP5Y5HZSpcWy/oHE
umJFKkQ+kPXPJzafDmq3I0nWf5S4aB37321qTq+3E/tcfDixRX62G8uup/W5
6p3TRcdx/1qaIzviiY+08myf/U3u/7nrlfiB84uHics9FL8PrMIsvSQ+v/vq
jSl6ZnPpDYp/wN+3BRBb8g+6f6EzszqO+Pvj6V9Hu8n9P3uDEo9yfsMB4uUB
ta8tei6P/2fE97e3/H08i9vDWnIj9d+fEq3GB3J/qJpuVM7vub21McTdn2fv
L3Gd56t+FvGwQ4lrWwT0Yf17iSN0V0t7r+L8lsfEVztceFawpdz/TpvsOtOv
obEHWnD/aBoRq3uWjKoxjcsXozcp59ty/08nlv8+Rk/Wv2uT8vuuHqz/IXHv
m/VuFb/blfUX3WzXeby5Gxz0vRvrb7BZeQ/GbOhNbI16WWrVC05vmrJZ8R/Z
f7BuJ74ekS/Co3sI679PfLzU6rA3/Zm1hbKpfhVyasTp9T7Ej8ZZ8uUr3JH1
RxC/a9Zr6L1aoax/EvGHdpkvfgZyfsdW4vOtxnjGHpL9nzvZynuvYNaff4vS
PlyeVHeL4u9zeebuxB93XxmwYxv7E7Y04uNjn95YfZdZnU3cO/ZWTXsj2f+5
uUW532N/w5Bnq12X5i+uC9jPbPImfjhwWN/kY5zf2oVY/nsfbFdJxJ+PF350
+RSzduNW5f6Q0+uvbVXeb4qs/y/xKJ6AzJaaZiV+4PyOMOLzfS/8pxkl+z9j
0S6uI16j/s9jVgDnly6blfdPzOZfxDVvbPjYrBqnt3lsI389u/blHrHManEb
lC8kE+dpuGtgdj2ur2E1cZlU5xHPqzKbLm5T3m9xe1m/E7eZvSs9LEXWX227
XbcqX6Z5sKesP3S7cn/MrB9FXHZGu9f5GzAbVxD3etku/8ZUWf854tKWC49P
HmN2fNmuxEfMGs0OJT6S9bfbAe0hDSeeva/+er/GzOZlO5T7Uln/f8SXA6RW
4/5weepPO7D/q+yE8WFos1O535b1DyFOretSv+oauf8XY3rVKeIOtbbOs0Yy
ax3EzoERhQqlyP6vyy67bte/PDc2Rsr+bxCxX8Gl6qYvOb1lEHFI5STN9rZs
dywg/u0SnGYowP6x5jhx3n6dtzjq8vwU3xLPWH7q0I/inF4qv5vWp6hm7yKy
mc064tCE/vnMeWT9A4i31ujYI/Qm29VZu8EfFyzE+qf9Qms7ZP//NfGXT2vd
y56S57/zHrvuVqvL+VwnsN0aSHzinX/66XFsV8XvUd5TMmvnED/Z0Mbl3g1m
/SHi5FOHY54cZTa+2AP+g6XUXrtu8NdCZxN/yfu//15c/2L3KuNbXv+MxMKP
A6OuLWCW9hNXWChFVQtmNj8l/vay+LfZEbL/U2Kf8h6D11t1E+L0LUGmn4WY
hb7E6y6V2LtlAbNhJnHM87zzTy9iNu0hbpo0u8j3hrx+Wx8Rq8/Flgiuw+u7
ymk/xRd+6//c6CD7/37ELTMqNNtjlf0//X7l92Wy/z+NuBFvKMyWncR1knI8
Ftn/f0DcQTfOb+h92f8rcoDGx0zrpWt2Ti/6EjfLGc5q9o+lSOI5Q781CezJ
/rp5MnG35ES/rn3Y37dtI15a72vvMZdl//8eseekpAzf0NGsv+BB5fdqzAYt
cdz+m8FjeySz/p7E/hvqtfdvOIr1TyS23ZmaaWybwvq3Er8/c7xFdvw41n+b
+PfTmoLzeS5Pn++QXTcowfRjyYGxrL8O8fmszdMMc8az/m7En7pGTk5ol8b6
xxM/+He6SJnWE1j/ZuJJhXIWILaLN4jzjzi7qlI055dUh8m/m5Vva5Y/pzd7
ERfPcS8rSKw/nNhJWDX8VRTnV6cS225XPfQokFnYQLygvN516X5mw9XDin/M
5WmfH1bi2QnN/wcrYRyT
       "]], LineBox[CompressedData["
1:eJxV3Htcy98fB/Ahl5CWlFtYoiRlItdoc4lcp5tLpSGpkCUiqeYuxOSSuyH3
2yjXwgglt8kt1yKXapPlEiH9Xjvv3/fx2Of7z/fx/J5t7b1zf5/z+dpOme09
rTaPx+ttwuMZ/i35F2f/SK0VC53LNr6avNQD/6noJ7yi1oiTUyriDOa3v6YV
rzttOWmJT6LBopHwlSozSzNvucGyGHjL3dNZx9oyK5Xw752ZQV1HLTZYkwfX
ztzuPs0t3mDeD1jXYlygzWb2+cJ217Vi76kD73b0Y5Z6wX22XfDj12GvV0TD
W5Pap0VOZ39fvQseJrObtiaNletz4GMLq3bZd08wWPAVvqZ4cmL3RmaJTbZW
7DFnRv6spEUGyz3hN+tfdt1zfIHBKhl8Uu/SvGIXc9F2uM+kxSVe2+ay+G/C
v66HHJX6zmHxf4EHBL0+XWA/j8Xf8oZWrJnimHLKhJUrB8Gfn+0qd6+YyeKf
BWedaVTv2asoFv9WuO7LVQ6Z25iF1+FT924Nv5vO3i/VwXHNTg59u5D9fYX1
Ta04LHV2/PjZzGoR7CLIaHtlJLM+Ag5olK65Hx7D4t8Mv4x42rKw+XwW/1VY
po3cXaZgv6+8FDb12TSiuDn7fVSWt7TipjMDa04+YL9PUX9Yab10ZXghMz8M
tvBNnmQmWcjiT4F7zk33kESyz5NlwSOtf7bb1oTVh/Ij7D4qNOvEd/Z6DT9H
K/5SU7zMdH8si78fbD50XGl5X6r/abBJcVF+t0+sXLoe3nLPJmViJ2bFRXhj
cv0AXSWzuhjOm9FxbuoNZr1ZrlZ8YERNiu9BVn+C3vC+RmUBH+eycskU2Dx+
vtOIuez3ka+FedHOE+XnWP2pzsELpLy3g5JYeVERLMre4bYgmJXzG93Wiquv
qaO/vKX6d4OLLk3xXBAnY/EHwx63Xp1dtohZmQQ3s18bOu0PsyYd/hPT1OLf
EGbeGzivusmQxQOo/hvkacXPrLpff7mUlUtd4c7FhdMDezMrAmFxI9MWQW9Y
e1KvgO1tFq5Z+ZNZr4Lf3T31kXeNWfASXtVksd3iejNY/HXvaMU3gje6ldlG
sPi7wnU2V3zp7sJer5oAB/kI0tNLZrH4l8LDTa8dXVjFzD8J9w59vlH9kb1e
VACX9w+c88qRlctq39WKHUsqU26FMSu7wM4B2jXLzlH794fbOf2ataqC/X3e
YniG9JjJmuxwFv8xeB7rEMzSJ/BtwXyLg52ms/hr4MCoKN/IfaEsfsd7/7Vv
Vq73ga+viq/dyZOVCxLgdTGv9JmlzJLDcKcL48cuDQ9j8efDa/ltZ9mcZuWq
v7BZ84uHjvVjLrK/rxVHu9z0m1Y4jcU/Fh5YohzR+zsrF8XBaWsv8HoMZ39f
duA+5/spH8DPJBFd931mf09TBYcfr971+SGrD16HB/h9p3hd/GMzm8U/Gm4f
tf6AeRDV/wJ4vc/cDqk1VP/74NX1HBc0vMjan/oufPHAE8WFHGZ9Jbzv7L57
UZHRLH5bjVYsmNxC9b4za8+SEfDNE0talLxg44F8Hux3ZXqHgXY0/u2BE2em
tKtwovZ/G3aum1ZtrmLmf9dw+o+o7UO0/50WBy5fY58nGwbr3Uxypr1i45Fy
Dpz7OXWMf2NWrtkJP85/1XCyG3s/Lwe++qUwq3cF61/CCnj1fLmDcyArl7bO
14q9wu5cbDaOlSuGwE9iff8WWjCrZ8PKHo87ddjGrN8G/1o7OMykNft7ghtw
x/q6iK+bWLmkHHayTDiypxezvMUjtPer0l4zA9j3VQ2ET36bnVp9if1+RTPh
K0m2mIKo/6c+4sQnugaPHZ1xTPGVvV6mhVtfWT6v+DXrz0qrx1pxv+OyO0O9
Wf1oPOC3nnnWXpk0/kfAES0GtD84mJULN8F5STFW3gk0/l+BldmLYmtVstcr
SuD9dVJUsx2Y1U2fYP6b0biv7VzWPvTu8Neg4UGu61i5YDqcEb297os27PMk
G+Cp6XZP5iewcnkmvL55/lvbtaz9qT7An/6VRRVGUP83f6oVZ+a7en85wvov
vy/83EE+JeQ29f8QuImy8OfsScyydXAnRxXvYGNm5QU4KuXj+vBZrL9r3sF5
EiufUgdWzjN7hvZfUWH6PJb1B2Ev+P3zDwHtnjJLJ8MRTbNskxuy1yvWwNH8
uRlHO7Lvpz4LD8obczS+bySLvxDueu2IeYcvNP41LMD8kfp3zL9y9npJD9gu
7G6HsrosXvkkeMrygAEpKez9qlUFnPGu6IyhvMujrhazafx7DT898rW/nQWL
R1T/uVY8adjKlcIEZlk3+HOop0er0Wz8UgbA0v7lAScs2figWQ7HLa/7s05b
Nh7wVPDu9LrLnmazcuELuIvTqOHi88xSkxdacWFPH9u2STT+ucB/33cSNbvL
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
f/IO9KsMYha+hDdcdD3cszeztO5Prdhq7fAykx7Miq5wt7jnMS9aMasnwO6o
HesRFP9S2J4luKQs/pOwYXXU6gezpAA+n37KfdgY9np57V9a8c4bAtWcMIq/
C/yldse61mqa//zhRzPbrrz2l+a/xbB8T9Rb0TDa/x+DD24rn+cdzCx7Yni9
YTp4zt6vrIErxVvqWiYyaxyrtOLtDy6+/JFP9e8Lt9v3sM2N+7T+TajizMfS
w3Cvm8X7Jg5m5Yp8+GxNradHg2j+/wtv7KW+O1/PrLf/rRXviOl2b+4pmv/H
wuWD3sz5MZXm/zh4UmhBJ20vmv8P/Oaufx7AGx7W8io4T+ufKvhKWreJQ/1o
/dPhD2e9IRoNB/JaHRhRQ+ufBXCDeyfjnJpS+98HO/052eDfeWr/d+FEl1au
bQ8w837C1iM2LOqoYBba/sV+Yuq9XMF8qv8RsCEb8VRG9T8PPvSgyYWTW6n+
9/z9bz9M9X/773/jJ7X/73857UPStlorHqBbXvvcUqr/YdWc96vmwCub1emw
XcRctBMOED9q6rSfmZ8DO7qHxbwOYBZVwI/2Dbjdpie1/9b/0B8uDZ//7Dlr
b8oh8PO4iiFxWcya2fA7gW1e8wxm3nZ4piF9OYHa/w043tTKZhKf4i+H/5mr
/D9vZ69XtKjB/C1t2frS82AW/0A4N+BkwswUZv1M2NqQPuRT+0+t+W88Z+WS
a3Dc9Aw/rxBmuRZu9+OZU5cLzCornk6cPiQ/8ns35iIP+NlzRWIon5kfAf+d
NUZRUD6Jxb8Jpv0zs+wKTPtxZmUJPPlatbx+PYq/aS2deOrgfZoz5ezzeP3h
iszSLW3eMQunw0eU+8rG9WWWboDfJqjr1GnArMiEp40tGPKwDsX/AfapH9t/
azOK37y2Tqz8Myc0cyCzoC/s/+jH4GfLKf4QmOZH9n3k6+B5eftbTx5L9X8B
3rvrURdNOSsvegevODlY+bs+1b9ZHZ2YbZd2sXJRLzhuv//WK8+YZZNho/pT
roEvTHRwyXGi+M/CvXzXfuu1l+q/CK5/tvBFUgqzsKGJTsyfaB5sv5pZ2gPu
vspc96sr1f8keLUhHeXHrF4Fu5Xfm701jFl/Bh6wsfpbDynV/2v4AD+34zp3
Gv/q19WJ3/gadiwUfzd4qkOWyaEBzKoAeOzrQFQxxb8cpvwzM18FL15kCJDi
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
itVR/+wpfseOOuPzCr4vvOT4If/gIKr/BNjovoXsMDzhwPeRXbtR/efDht6T
Wsxer/kLu1044ezelZnnYK8THxKFTn/Yj+p/LNz6qa/18iCKPw4uL/MLmSui
/NcBuNIxJySqhtb/D+CnkZmawEO0/q+Cr4w4MuJWN/Z6QQcH9N/oJrtNR1H+
azTcN3aD6S83yn8tgK821L/+mEzx74Pjbd9n1ayn/MdduGnBzqXTB1L+4yd8
f1X+m6JGlP+y7aQzzo/IRsCbBxsyPpT/mAcb5Vs0e+Cq0XcXdtvEzMvjlgu/
d+L8fWlbR53x+aJiGKwc894r343yP3Ng3et2X/ycqP53wm7Bhow+rf9yYKN8
lKQCNjrflbfurDM+31ENgWcbfs4N1P9nw3R/hNZ/2+E1R4NLFy2g/NcNuGTJ
7y19gqj+y+GlM8pLEi9S/bdwwnrpxaHibnWo/gfCt/aV6kJk1P5nwfvnlgan
5FH7T4WN8m3Sa/C7Mt6qzIV0/quFt15fGvrsMvV/qy6c8UfvAfs9nz9Ef5X6
fwQ8e8qw0faR1P83wWdG+M42m0nnv1fgB8q9iUvWUPwl8JbAm+96Laf1f1Nn
7O88Rm8Vbqfxrz/8vYdU8T2c2v90OKhF6ZDPCdT/N8C+0RevSVZS/8+Ee1j0
dL/sTf3/gzNnvc7ju3DGN2FfmDbINP6FwHecT6y40Z/Gv3UunM9TX4Bdj82/
0KYVnX++c+HsDwRmXbG+riet0/4Gxd8LPtv8YczI1xT/ZNi+750uA09T/Gvg
u4bjvFYU/1m48fg5VmsKqf8Xwb8N1z31NP41FHLGE1kP2Pj8exJM53W0/1kF
z7GuzMgOpvafDpdY7P9kfYnyf6/hXehtG28wS+t304ldcpz4/R2p/XeDy+ZP
nnHuK+W/A+Aip0s/trdln69fDrdq3mRZSC0a/1Sw0fmr5AVM5zHU/01csV/Q
FzyY4siscoFtOgyuWmJN+e/xrpzxgr8Ujr486+BAd8p/noDp/g7lP5/B4+6/
aTnLj85/a3XnfJ7GCTac5rdrQvlPf9iipX+F50fa/8thw+2dDTra/x+FD7vd
6zf6IeU/HsPfsxu8fXiLxr9/cMvxORWDDtD416kH+lu4pIe5lPIfPrD3oNZy
s1WU/4iHjfKj8kOwILX3V1EI5b8ewnTfjPIff2B2fNGU8l/2bjpx97epv2N9
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
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQfeJBTc+KkjeOBrqvJt9JbLYHChUcAvK1TasXiEo0
gfgL3gD5GgJlXaHNDSD+BbHSN46SEcc/Oi9tBPEZHIF89w2Ff3fbgfUbZAP5
4oJHn/AagPkJU4H8ywd/2bf/BJs3YT+QrxpzQnnHRDD/wEsgP3P1pBN2J8D8
D8JlbxyTedY8/rEQzFewA/IjTebO5ekD8wMygPw9kc3fQ3eC3dMwCcjn8735
kr0U7J4Ne4D8fa2lj+9OBPMfPAPyNc/vkSm7D+YLCJa/cczX3msmrQ3mO1gD
+TuDrSL+PwebV5AK5PMGfRApWlpn73an+XVpOSJ8AF/pfbg=
       "]]}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwV0XtUjHkYB/AxO02xokMmOataQ7KtdlxbimdeMRUq2bOncsmE3BYNSdOF
Ztpk1G5mVJOpTJkiVDTvbFak35guLqub4li5VCOsXsml3QZz7OOP97znc77P
5ff+3m83xqyOZrNYrCB8vryzpmYaGzn9lOxXh5LLDVrCbb52pu+LA0e6hNVq
SUrcsNLGpp8SjmVr3hm0RNIUHbUMbcx/l/V9iZaEbhOyG9Ey+l6iVq4ljhVD
fg1czHsKV6cu1hLNHPF1kx32C2ewl186QUqXzGsho9FWKurv8kJSZXAqjp6A
9X43gluj84mn3vuqdDL6YU1EmOg4ybvzImjTNLRorEIxS00sojs6y0zcd6Cm
T/k6m9z0tyyxzsOc2yr27FSRowXhZRWLMb+8l7fQ6SgRjQ9MmeOPthtLxxRk
kJ1O8brpIeiPcsXNnelEsfvRkethaIX2artZTsatltd2buinWHH8tZ9Cksjv
ERc31mxFT9bcsLBjyWcDvzlQgh6of1bG3kye5Lek+kvRRvmi7UULSHWn/tOg
DC1IXOBhFwnJs91f7jmCHrThb4mVgP6b+1PEKvQolinhlhQeRZhcP2hwv7Qj
dGK/DOL5L7eO0KFFbYdb+YfAVrh83x/nsD6Jv+H+xSOgkPm8X2zA3P7C66y5
WSAN2kHmX8Hvt+p1ytkqiNzVHvygHl3mrWVLs4F23j+j/y/s/xya3KvOhf/+
KY/v6MD8kJ23c3kezLaflLH1If4P2GGSMhp4WNv4fNtTnH9aLBDZFkIyOTuS
9wr7KXaMb4gW7J+5FOUPYb2NW+NSUTGM1rSn/GbFecKRS3WhJ4FdVDv1Oy5D
dU8I8MyJ1cGWWX2O88YwlIxq/2pRaglcea6VOvEwTzuzXJVZCtw3yuJTLuio
u5aE8lNgTDeOP+nOUMW5K/OdL50GSYzHioAfMN/oXBLUVQZZT5ub13kzlDFd
cOLH/jNw4gCnIQAYSmjKtWkdOgu67bEHu/0ZSpy36p6FVw68Xte0vhCGcqv/
+XjX1AqQVXKC1eE4X1FlCg2shK7CxEyXKHR0xNrYbeehdKKXo+N2nKdZ2bdi
3wXY9Nw5qnoP2nDrl3UrqkC1xM9Sn4BelrN+4E4VVF2zcs7JGcrBnMa9F6aH
xuzBTp8MnBdUbLZ9oYeAt26DC48xlNIsXpC7m8aTPi6NRHf3GrgDEhpUqoKI
VPSqXm6nKJaGBwJe/U20W0/F7uF4GnbFfK0Oz2aotsfDJWvlNBxjhnz252D+
QDlmSg4Nj57dOqxX4320Gc3na2hIna/wvYsWtI3X29bS4J6+7M0wWtm65aC4
jgbJNOMaYR5DSVpGO4+rp4G9uXpmK9rhdnhw3G0aPHqKOpjjmF8fvOTzhIbb
gvUKBw3ub/JLz+mhYY9s0qK5aGGT+qdXZhouu+aeTkI7NPoOaF/QEBSZkTAq
n6GqTAo++y0Nbyv9vbzQbqauwTXvaVBbOeZQtOyaV53hXxq6C1NWatBiY2d4
9Eca0hjfEVfRRjLdvc5KwwzfD9XdaAFJfMdjGaAl888dnAK837pmYwzbAHu7
9rl6oFl1blk3OAb4H289dCQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$187064#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{3.6199008*^9, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->FrontEndValueCache[{{Automatic, Automatic}, {
      Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
      Charting`DateTicksFunction[
      Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, {{
     Automatic, Automatic}, {{{3.5975232*^9, 
        FormBox[
         StyleBox["\"2014\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         StyleBox["\"2016\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         StyleBox["\"2018\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         StyleBox["\"2020\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         StyleBox["\"2022\"", 
          Directive[], {}, StripOnInput -> False], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}, {{3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.013888888888888888`, 0.}, 
        Directive[]}, {3.5975232*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6290592*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6605952*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.6922176*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7237536*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7552896*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.7868256*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.818448*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}, {3.849984*^9, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {
        0.009722222222222222, 0.}, 
        Directive[]}}}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{3.6199008*^9, 3.839616*^9}, {0, 0.009464}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{}, Automatic}]], "Output",
 CellChangeTimes->{3.8396674081003957`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"f03380cf-3576-473b-8c9b-37c7ce148bd1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Poglavje - Podrobna analiza", "Chapter",
 CellChangeTimes->{{3.833434054514179*^9, 
  3.8334340681793647`*^9}},ExpressionUUID->"26a257bf-c3cb-4f1c-b091-\
b117e3158713"],

Cell["\<\
V tem poglavju bom bolj natan\[CHacek]no izkoristil orodje Mathematice za \
podrobno analizo\
\>", "Text",
 CellChangeTimes->{{3.833434106741639*^9, 
  3.8334341539983587`*^9}},ExpressionUUID->"74152d7f-16b2-4d28-8e42-\
15d54cde6cce"],

Cell[CellGroupData[{

Cell["\<\
1. Pridobitev in predstavitev osnovnih podatkov v obliki tabele\
\>", "Section",
 CellChangeTimes->{{3.8334342410745735`*^9, 3.8334342523300176`*^9}, {
  3.833437565639497*^9, 3.8334375844106407`*^9}, {3.833438103838254*^9, 
  3.833438113294267*^9}},ExpressionUUID->"da994b3a-830c-44cd-9903-\
a9c369757f03"],

Cell[CellGroupData[{

Cell["Pridobimo podatke kriptovalut iz strani Yahoo! Finance", "Subsubsection",
 CellChangeTimes->{{3.833434926755823*^9, 
  3.833434965785099*^9}},ExpressionUUID->"6d292788-aec9-4c61-aa06-\
0c2505bb0dbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"lsData", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
     "\"\<https://finance.yahoo.com/cryptocurrencies\>\"", ",", 
      "\"\<Data\>\""}], "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.8334342637438555`*^9, 3.833434263749875*^9}, 
   3.8334345799354677`*^9, {3.8334346100833116`*^9, 3.8334346277133436`*^9}, 
   3.8334346650135717`*^9, 3.8334347914965286`*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"9bd39810-3af3-428d-a10f-f9af9dc5269b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.3366704`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.833434268274724*^9, 3.8334343653630204`*^9, 3.833434489438904*^9, {
   3.833434583062415*^9, 3.8334346670725813`*^9}, {3.833434799200768*^9, 
   3.833434824005926*^9}},
 CellLabel->"Out[50]=",ExpressionUUID->"491fe9dd-8d67-4b58-9431-39d6dd218dfd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Dolo\[CHacek]imo, kje se podatki nahajajo", "Subsubsection",
 CellChangeTimes->{{3.833435012217163*^9, 
  3.833435029782383*^9}},ExpressionUUID->"24fc971e-04ce-4050-8714-\
54468954f41c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"First", "@", 
    RowBox[{"Position", "[", 
     RowBox[{"lsData", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Symbol\>\"", ",", "\"\<Name\>\"", ",", "\"\<Price (Intraday)\>\"",
         ",", "\"\<Change\>\"", ",", "\"\<% Change\>\"", ",", "___"}], 
       "}"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"dsCryptoCurrenciesColumnNames", "=", 
  RowBox[{"lsData", "[", 
   RowBox[{"[", 
    RowBox[{"Sequence", "@@", "pos"}], "]"}], "]"}]}], "\n", 
 RowBox[{"Length", "[", "dsCryptoCurrenciesColumnNames", "]"}]}], "Input",
 CellChangeTimes->{{3.8334348458713484`*^9, 3.8334348458783665`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"34653be3-ce06-46a0-a753-6f062d34a398"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Symbol\"\>", ",", "\<\"Name\"\>", 
   ",", "\<\"Price (Intraday)\"\>", ",", "\<\"Change\"\>", 
   ",", "\<\"% Change\"\>", ",", "\<\"Market Cap\"\>", 
   ",", "\<\"Volume in Currency (Since 0:00 UTC)\"\>", 
   ",", "\<\"Volume in Currency (24Hr)\"\>", 
   ",", "\<\"Total Volume All Currencies (24Hr)\"\>", 
   ",", "\<\"Circulating Supply\"\>", ",", "\<\"52 Week Range\"\>", 
   ",", "\<\"1 Day Chart\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.8334348478567677`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"5ae7478c-a273-43f9-bce0-f3a869f8c17b"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.8334348478616667`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"acd2d9e3-fcc7-46ca-bd60-fbd53abc49dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pridobitev podatkov", "Subsubsection",
 CellChangeTimes->{{3.8334350972630033`*^9, 3.833435108120387*^9}, 
   3.8334434259519124`*^9},ExpressionUUID->"2cfc5288-95d1-46cc-b091-\
a4272ec81e7a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsCryptoCurrencies", "=", 
   RowBox[{"lsData", "[", 
    RowBox[{"[", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Append", "[", 
       RowBox[{
        RowBox[{"Most", "[", "pos", "]"}], ",", "2"}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{"Dimensions", "[", "dsCryptoCurrencies", "]"}]}], "Input",
 CellChangeTimes->{{3.833434870896784*^9, 3.833434870904827*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"9c5ba007-6b3f-475d-a07d-984174d2f1f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"25", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.833434871898656*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c2510ee5-ed0c-44e9-b90d-feb500fbcc94"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Ustvarimo obse\[ZHacek]no tabelo kriptovalut ter raznoraznih informacij o \
le-teh\
\>", "Subsubsection",
 CellChangeTimes->{{3.833435116169159*^9, 3.833435161837804*^9}, {
  3.833435236240055*^9, 3.83343525591914*^9}, {3.8334375255460663`*^9, 
  3.833437556149581*^9}},ExpressionUUID->"b2c51d3c-959a-4c90-8e99-\
7c1d35d252c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsCryptoCurrencies", "=", 
  RowBox[{
   RowBox[{"Dataset", "[", "dsCryptoCurrencies", "]"}], "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{"AssociationThread", "[", 
      RowBox[{
       RowBox[{"dsCryptoCurrenciesColumnNames", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", 
          RowBox[{"-", "3"}]}], "]"}], "]"}], ",", "#"}], "]"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.83343488257728*^9, 3.8334348846121798`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"d4266f9b-cd0e-4dd3-a356-6fd0744e71cd"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Symbol" -> "BTC-USD", "Name" -> "Bitcoin USD", "Price (Intraday)" -> 
        "34,016.28", "Change" -> "+2,401.55", "% Change" -> "+7.60%", 
        "Market Cap" -> "637.503B", "Volume in Currency (Since 0:00 UTC)" -> 
        "61.863B", "Volume in Currency (24Hr)" -> "61.863B", 
        "Total Volume All Currencies (24Hr)" -> "61.863B", 
        "Circulating Supply" -> "18.741M"], 
       Association[
       "Symbol" -> "ETH-USD", "Name" -> "Ethereum USD", "Price (Intraday)" -> 
        "1,995.20", "Change" -> 113.23, "% Change" -> "+6.02%", "Market Cap" -> 
        "232.255B", "Volume in Currency (Since 0:00 UTC)" -> "36.254B", 
        "Volume in Currency (24Hr)" -> "36.254B", 
        "Total Volume All Currencies (24Hr)" -> "36.254B", 
        "Circulating Supply" -> "116.407M"], 
       Association[
       "Symbol" -> "USDT-USD", "Name" -> "Tether USD", "Price (Intraday)" -> 
        1.0008, "Change" -> 0.0006, "% Change" -> "+0.06%", "Market Cap" -> 
        "62.747B", "Volume in Currency (Since 0:00 UTC)" -> "104.668B", 
        "Volume in Currency (24Hr)" -> "104.668B", 
        "Total Volume All Currencies (24Hr)" -> "104.668B", 
        "Circulating Supply" -> "62.7B"], 
       Association[
       "Symbol" -> "BNB-USD", "Name" -> "BinanceCoin USD", "Price (Intraday)" -> 
        288.42, "Change" -> 29.08, "% Change" -> "+11.21%", "Market Cap" -> 
        "44.253B", "Volume in Currency (Since 0:00 UTC)" -> "4.566B", 
        "Volume in Currency (24Hr)" -> "4.566B", 
        "Total Volume All Currencies (24Hr)" -> "4.566B", 
        "Circulating Supply" -> "153.433M"], 
       Association[
       "Symbol" -> "ADA-USD", "Name" -> "Cardano USD", "Price (Intraday)" -> 
        1.2489, "Change" -> 0.1463, "% Change" -> "+13.27%", "Market Cap" -> 
        "39.898B", "Volume in Currency (Since 0:00 UTC)" -> "6.139B", 
        "Volume in Currency (24Hr)" -> "6.139B", 
        "Total Volume All Currencies (24Hr)" -> "6.139B", 
        "Circulating Supply" -> "31.946B"], 
       Association[
       "Symbol" -> "XRP-USD", "Name" -> "XRP USD", "Price (Intraday)" -> 
        0.637458, "Change" -> 0.054819, "% Change" -> "+9.41%", "Market Cap" -> 
        "29.479B", "Volume in Currency (Since 0:00 UTC)" -> "5.4B", 
        "Volume in Currency (24Hr)" -> "5.4B", 
        "Total Volume All Currencies (24Hr)" -> "5.4B", "Circulating Supply" -> 
        "46.245B"], 
       Association[
       "Symbol" -> "DOGE-USD", "Name" -> "Dogecoin USD", "Price (Intraday)" -> 
        0.216834, "Change" -> 0.029342, "% Change" -> "+15.65%", "Market Cap" -> 
        "28.219B", "Volume in Currency (Since 0:00 UTC)" -> "5.412B", 
        "Volume in Currency (24Hr)" -> "5.412B", 
        "Total Volume All Currencies (24Hr)" -> "5.412B", 
        "Circulating Supply" -> "130.143B"], 
       Association[
       "Symbol" -> "USDC-USD", "Name" -> "USDCoin USD", "Price (Intraday)" -> 
        1.0005, "Change" -> 0., "% Change" -> "+0.00%", "Market Cap" -> 
        "25.225B", "Volume in Currency (Since 0:00 UTC)" -> "3.036B", 
        "Volume in Currency (24Hr)" -> "3.036B", 
        "Total Volume All Currencies (24Hr)" -> "3.036B", 
        "Circulating Supply" -> "25.212B"], 
       Association[
       "Symbol" -> "DOT1-USD", "Name" -> "Polkadot USD", "Price (Intraday)" -> 
        16.03, "Change" -> 1.08, "% Change" -> "+7.21%", "Market Cap" -> 
        "15.298B", "Volume in Currency (Since 0:00 UTC)" -> "3.115B", 
        "Volume in Currency (24Hr)" -> "3.115B", 
        "Total Volume All Currencies (24Hr)" -> "3.115B", 
        "Circulating Supply" -> "954.346M"], 
       Association[
       "Symbol" -> "HEX-USD", "Name" -> "HEX USD", "Price (Intraday)" -> 
        0.082466, "Change" -> -0.001486, "% Change" -> "-1.77%", "Market Cap" -> 
        "14.3B", "Volume in Currency (Since 0:00 UTC)" -> "25.868M", 
        "Volume in Currency (24Hr)" -> "25.868M", 
        "Total Volume All Currencies (24Hr)" -> "25.868M", 
        "Circulating Supply" -> "173.411B"], 
       Association[
       "Symbol" -> "UNI3-USD", "Name" -> "Uniswap USD", "Price (Intraday)" -> 
        17.8, "Change" -> 2.61, "% Change" -> "+17.15%", "Market Cap" -> 
        "10.239B", "Volume in Currency (Since 0:00 UTC)" -> "717.633M", 
        "Volume in Currency (24Hr)" -> "717.633M", 
        "Total Volume All Currencies (24Hr)" -> "717.633M", 
        "Circulating Supply" -> "575.203M"], 
       Association[
       "Symbol" -> "BCH-USD", "Name" -> "BitcoinCash USD", "Price (Intraday)" -> 
        471.89, "Change" -> 45.12, "% Change" -> "+10.57%", "Market Cap" -> 
        "8.858B", "Volume in Currency (Since 0:00 UTC)" -> "2.687B", 
        "Volume in Currency (24Hr)" -> "2.687B", 
        "Total Volume All Currencies (24Hr)" -> "2.687B", 
        "Circulating Supply" -> "18.771M"], 
       Association[
       "Symbol" -> "LTC-USD", "Name" -> "Litecoin USD", "Price (Intraday)" -> 
        129.26, "Change" -> 11.13, "% Change" -> "+9.42%", "Market Cap" -> 
        "8.629B", "Volume in Currency (Since 0:00 UTC)" -> "3.766B", 
        "Volume in Currency (24Hr)" -> "3.766B", 
        "Total Volume All Currencies (24Hr)" -> "3.766B", 
        "Circulating Supply" -> "66.752M"], 
       Association[
       "Symbol" -> "SOL1-USD", "Name" -> "Solana USD", "Price (Intraday)" -> 
        30.64, "Change" -> 6.98, "% Change" -> "+29.48%", "Market Cap" -> 
        "8.354B", "Volume in Currency (Since 0:00 UTC)" -> "1.491B", 
        "Volume in Currency (24Hr)" -> "1.491B", 
        "Total Volume All Currencies (24Hr)" -> "1.491B", 
        "Circulating Supply" -> "272.637M"], 
       Association[
       "Symbol" -> "LINK-USD", "Name" -> "Chainlink USD", "Price (Intraday)" -> 
        18.6, "Change" -> 2.05, "% Change" -> "+12.36%", "Market Cap" -> 
        "8.071B", "Volume in Currency (Since 0:00 UTC)" -> "2.196B", 
        "Volume in Currency (24Hr)" -> "2.196B", 
        "Total Volume All Currencies (24Hr)" -> "2.196B", 
        "Circulating Supply" -> "434.01M"], 
       Association[
       "Symbol" -> "MATIC-USD", "Name" -> "MaticNetwork USD", 
        "Price (Intraday)" -> 1.185, "Change" -> 0.1171, "% Change" -> 
        "+10.96%", "Market Cap" -> "7.457B", 
        "Volume in Currency (Since 0:00 UTC)" -> "2.599B", 
        "Volume in Currency (24Hr)" -> "2.599B", 
        "Total Volume All Currencies (24Hr)" -> "2.599B", 
        "Circulating Supply" -> "6.293B"], 
       Association[
       "Symbol" -> "THETA-USD", "Name" -> "THETA USD", "Price (Intraday)" -> 
        6.9303, "Change" -> 0.6388, "% Change" -> "+10.15%", "Market Cap" -> 
        "6.93B", "Volume in Currency (Since 0:00 UTC)" -> "666.097M", 
        "Volume in Currency (24Hr)" -> "666.097M", 
        "Total Volume All Currencies (24Hr)" -> "666.097M", 
        "Circulating Supply" -> "1B"], 
       Association[
       "Symbol" -> "XLM-USD", "Name" -> "Stellar USD", "Price (Intraday)" -> 
        0.260267, "Change" -> 0.033395, "% Change" -> "+14.72%", "Market Cap" -> 
        "6.035B", "Volume in Currency (Since 0:00 UTC)" -> "931.469M", 
        "Volume in Currency (24Hr)" -> "931.469M", 
        "Total Volume All Currencies (24Hr)" -> "931.469M", 
        "Circulating Supply" -> "23.189B"], 
       Association[
       "Symbol" -> "VET-USD", "Name" -> "VeChain USD", "Price (Intraday)" -> 
        0.077823, "Change" -> 0.008078, "% Change" -> "+11.58%", "Market Cap" -> 
        "5.005B", "Volume in Currency (Since 0:00 UTC)" -> "1.218B", 
        "Volume in Currency (24Hr)" -> "1.218B", 
        "Total Volume All Currencies (24Hr)" -> "1.218B", 
        "Circulating Supply" -> "64.316B"], 
       Association[
       "Symbol" -> "ICP1-USD", "Name" -> "InternetComputer USD", 
        "Price (Intraday)" -> 36.87, "Change" -> 1.1, "% Change" -> "+3.07%", 
        "Market Cap" -> "4.755B", "Volume in Currency (Since 0:00 UTC)" -> 
        "284.966M", "Volume in Currency (24Hr)" -> "284.966M", 
        "Total Volume All Currencies (24Hr)" -> "284.966M", 
        "Circulating Supply" -> "128.986M"], 
       Association[
       "Symbol" -> "ETC-USD", "Name" -> "EthereumClassic USD", 
        "Price (Intraday)" -> 39.46, "Change" -> 2.2, "% Change" -> "+5.90%", 
        "Market Cap" -> "4.59B", "Volume in Currency (Since 0:00 UTC)" -> 
        "2.799B", "Volume in Currency (24Hr)" -> "2.799B", 
        "Total Volume All Currencies (24Hr)" -> "2.799B", 
        "Circulating Supply" -> "116.313M"], 
       Association[
       "Symbol" -> "FIL-USD", "Name" -> "FilecoinFutures USD", 
        "Price (Intraday)" -> 53.89, "Change" -> 6.2, "% Change" -> "+12.99%",
         "Market Cap" -> "4.372B", "Volume in Currency (Since 0:00 UTC)" -> 
        "1.145B", "Volume in Currency (24Hr)" -> "1.145B", 
        "Total Volume All Currencies (24Hr)" -> "1.145B", 
        "Circulating Supply" -> "81.131M"], 
       Association[
       "Symbol" -> "TRX-USD", "Name" -> "TRON USD", "Price (Intraday)" -> 
        0.055459, "Change" -> 0.003972, "% Change" -> "+7.71%", "Market Cap" -> 
        "3.974B", "Volume in Currency (Since 0:00 UTC)" -> "1.562B", 
        "Volume in Currency (24Hr)" -> "1.562B", 
        "Total Volume All Currencies (24Hr)" -> "1.562B", 
        "Circulating Supply" -> "71.66B"], 
       Association[
       "Symbol" -> "XMR-USD", "Name" -> "Monero USD", "Price (Intraday)" -> 
        215.68, "Change" -> 10.19, "% Change" -> "+4.96%", "Market Cap" -> 
        "3.869B", "Volume in Currency (Since 0:00 UTC)" -> "408.346M", 
        "Volume in Currency (24Hr)" -> "408.346M", 
        "Total Volume All Currencies (24Hr)" -> "408.346M", 
        "Circulating Supply" -> "17.938M"], 
       Association[
       "Symbol" -> "EOS-USD", "Name" -> "EOS USD", "Price (Intraday)" -> 
        3.6628, "Change" -> 0.2614, "% Change" -> "+7.69%", "Market Cap" -> 
        "3.496B", "Volume in Currency (Since 0:00 UTC)" -> "1.85B", 
        "Volume in Currency (24Hr)" -> "1.85B", 
        "Total Volume All Currencies (24Hr)" -> "1.85B", "Circulating Supply" -> 
        "954.494M"]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Name"} -> 
        1, {All, "Price (Intraday)"} -> 1, {All, "Change"} -> 
        1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[86.4], "Name" -> 
            TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
            "Price (Intraday)" -> TypeSystem`PackageScope`UnknownShape[False],
             "Change" -> TypeSystem`PackageScope`UnknownShape[False], 
            "% Change" -> 
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 25], "Meta" -> 
     Association["ID" -> 106004323751462], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Name"} -> 
        1, {All, "Price (Intraday)"} -> 1, {All, "Change"} -> 
        1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[86.4], "Name" -> 
            TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
            "Price (Intraday)" -> TypeSystem`PackageScope`UnknownShape[False],
             "Change" -> TypeSystem`PackageScope`UnknownShape[False], 
            "% Change" -> 
            TypeSystem`PackageScope`AtomShape[67.20000000000002], 
            "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[76.80000000000001]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 25], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     25, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Symbol"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Name"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Price (Intraday)", 
                  Style[
                  "Price (Intraday)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Price (Intraday)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Price (Intraday)"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Change", 
                  Style[
                  "Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Change"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["% Change", 
                  Style[
                  "% Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "% Change"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "% Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Market Cap", 
                  Style[
                  "Market Cap", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Market Cap"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Market Cap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (Since 0:00 UTC)", 
                  Style[
                  "Volume in Currency (Since 0:00 UTC)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Volume in Currency (Since 0:00 UTC)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (Since 0:00 UTC)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (24Hr)", 
                  Style[
                  "Volume in Currency (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Volume in Currency (24Hr)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (24Hr)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Total Volume All Currencies (24Hr)", 
                  Style[
                  "Total Volume All Currencies (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Total Volume All Currencies (24Hr)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Total Volume All Currencies (24Hr)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Circulating Supply", 
                  Style[
                  "Circulating Supply", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Circulating Supply"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Circulating Supply"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bitcoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["34,016.28", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+2,401.55", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+7.60%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["637.503B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["61.863B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["61.863B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["61.863B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["18.741M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ethereum USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1,995.20", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["113.23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+6.02%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["232.255B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["36.254B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["36.254B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["36.254B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["116.407M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDT-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Tether USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.06%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["62.747B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["104.668B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["104.668B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["104.668B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["62.7B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNB-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BinanceCoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["288.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.21%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["44.253B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.566B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.566B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.566B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["153.433M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ADA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cardano USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1463"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+13.27%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["39.898B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.139B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.139B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.139B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["31.946B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XRP-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["XRP USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.637458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.054819"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+9.41%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["29.479B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.4B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.4B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.4B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["46.245B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOGE-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Dogecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.216834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.029342"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+15.65%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["28.219B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.412B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.412B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.412B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["130.143B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USDCoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0005"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+0.00%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.225B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.036B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.036B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.036B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.212B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOT1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Polkadot USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+7.21%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["15.298B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.115B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.115B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.115B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["954.346M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["HEX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HEX USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.082466"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.001486"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["-1.77%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["14.3B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.868M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.868M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["25.868M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["173.411B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["UNI3-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Uniswap USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+17.15%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["10.239B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["717.633M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["717.633M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["717.633M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["575.203M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BCH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BitcoinCash USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["471.89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["45.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+10.57%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.858B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.687B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.687B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.687B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["18.771M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Litecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["129.26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+9.42%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.629B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.766B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.766B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["3.766B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["66.752M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SOL1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Solana USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+29.48%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.354B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.491B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.491B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.491B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["272.637M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LINK-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Chainlink USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.05"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+12.36%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["8.071B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.196B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.196B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.196B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["434.01M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MATIC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MaticNetwork USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.185"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+10.96%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["7.457B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.599B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.599B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2.599B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.293B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["THETA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["THETA USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.9303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6388"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+10.15%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.93B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["666.097M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["666.097M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["666.097M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XLM-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Stellar USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.260267"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.033395"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+14.72%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["6.035B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["931.469M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["931.469M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["931.469M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["23.189B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["VET-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VeChain USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.077823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.008078"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+11.58%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["5.005B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.218B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.218B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["1.218B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["64.316B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ICP1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["InternetComputer USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36.87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["+3.07%", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.20000000000002, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["4.755B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["284.966M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["284.966M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["284.966M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["128.986M", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1349., {277., 283.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1349., {277., 283.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833434885858554*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"794b5386-cada-424d-96a7-d401fbe99371"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2. Podrobna analiza", "Section",
 CellChangeTimes->{{3.833437594965787*^9, 3.8334376046470366`*^9}, {
  3.833438119252494*^9, 3.833438124282838*^9}, {3.8334402715775175`*^9, 
  3.833440273289858*^9}},ExpressionUUID->"fd2b1262-b8be-43e6-b597-\
62326dcf5411"],

Cell[CellGroupData[{

Cell["Pridobitev/pretvorba imen", "Subsubsection",
 CellChangeTimes->{{3.8334382158719563`*^9, 3.833438232743887*^9}, {
  3.8334384054879246`*^9, 
  3.8334384127195406`*^9}},ExpressionUUID->"3e26e95c-34aa-42cf-a149-\
8cb0f3afb3a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "ResourceFunction", "[", 
   "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", "\"\<CryptocurrencyNames\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.833438141517807*^9, 3.8334381633591185`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"eda96cd7-9c6b-4a20-90bf-f626aaa08ffd"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"BTC\"\>", "\[Rule]", "\<\"Bitcoin\"\>"}], ",", 
   RowBox[{"\<\"ETH\"\>", "\[Rule]", "\<\"Ethereum\"\>"}], ",", 
   RowBox[{"\<\"USDT\"\>", "\[Rule]", "\<\"Tether\"\>"}], ",", 
   RowBox[{"\<\"BNB\"\>", "\[Rule]", "\<\"BinanceCoin\"\>"}], ",", 
   RowBox[{"\<\"ADA\"\>", "\[Rule]", "\<\"Cardano\"\>"}], ",", 
   RowBox[{"\<\"XRP\"\>", "\[Rule]", "\<\"XRP\"\>"}], ",", 
   RowBox[{"\<\"USDC\"\>", "\[Rule]", "\<\"Coin\"\>"}], ",", 
   RowBox[{"\<\"DOGE\"\>", "\[Rule]", "\<\"Dogecoin\"\>"}], ",", 
   RowBox[{"\<\"DOT1\"\>", "\[Rule]", "\<\"Polkadot\"\>"}], ",", 
   RowBox[{"\<\"HEX\"\>", "\[Rule]", "\<\"HEX\"\>"}], ",", 
   RowBox[{"\<\"UNI3\"\>", "\[Rule]", "\<\"Uniswap\"\>"}], ",", 
   RowBox[{"\<\"BCH\"\>", "\[Rule]", "\<\"BitcoinCash\"\>"}], ",", 
   RowBox[{"\<\"LTC\"\>", "\[Rule]", "\<\"Litecoin\"\>"}], ",", 
   RowBox[{"\<\"LINK\"\>", "\[Rule]", "\<\"Chainlink\"\>"}], ",", 
   RowBox[{"\<\"SOL1\"\>", "\[Rule]", "\<\"Solana\"\>"}], ",", 
   RowBox[{"\<\"MATIC\"\>", "\[Rule]", "\<\"MaticNetwork\"\>"}], ",", 
   RowBox[{"\<\"THETA\"\>", "\[Rule]", "\<\"THETA\"\>"}], ",", 
   RowBox[{"\<\"XLM\"\>", "\[Rule]", "\<\"Stellar\"\>"}], ",", 
   RowBox[{"\<\"VET\"\>", "\[Rule]", "\<\"VeChain\"\>"}], ",", 
   RowBox[{"\<\"ICP1\"\>", "\[Rule]", "\<\"InternetComputer\"\>"}], ",", 
   RowBox[{"\<\"ETC\"\>", "\[Rule]", "\<\"EthereumClassic\"\>"}], ",", 
   RowBox[{"\<\"TRX\"\>", "\[Rule]", "\<\"TRON\"\>"}], ",", 
   RowBox[{"\<\"FIL\"\>", "\[Rule]", "\<\"FilecoinFutures\"\>"}], ",", 
   RowBox[{"\<\"XMR\"\>", "\[Rule]", "\<\"Monero\"\>"}], ",", 
   RowBox[{"\<\"EOS\"\>", "\[Rule]", "\<\"EOS\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.83343818718379*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"8ed5b6cd-69b2-4a89-9b7d-4f010ecdb96c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Predstavitev Bitcoin in Ethereuma iz \[OpenCurlyDoubleQuote]Financial Data\
\[CloseCurlyDoubleQuote] - vrednost v dolarjih tekom leta 2021\
\>", "Subsubsection",
 CellChangeTimes->{{3.833439668193019*^9, 
  3.8334397328887763`*^9}},ExpressionUUID->"80918b46-bd58-4399-bbb4-\
cb3b0f278464"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"DateListPlot", "[", 
     RowBox[{
      RowBox[{"FinancialData", "[", 
       RowBox[{"#", ",", "\"\<Jan 1 2021\>\""}], "]"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", 
       RowBox[{"1", "/", "4"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"\"\<BTC\>\"", ",", "\"\<ETH\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8334396900307693`*^9, 3.833439690038742*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"b254d67d-9993-4cac-a50d-4ca1fcfd649d"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw11gtQFVUcBvDVwTET6xoTpRSs2lQ+Rq+mQ/igo6mTj+qmWDo6sTKJIgk7
PoIQZMEXAuINQUymOhVlWeAtH6mFrkxqqek109FMWHko5Os6mo5oEvf7Tsww
+JvvnLPn/z/r7vZKSJ0yp6OmaVvaf4N/23+8Ty26Mjr4jz4b/hLtf+zxtGXV
1wUdMGmR38EJWi9XvpBRG7TnAG0PGYDcuq7WOzXkQtC+HouZF3zcELTzMi0i
6mBXCq0VXYXFRlruOVsftFmj8n6hWF9eofXNE7C+P3wJ8/WdYG00bTROxHru
ZNr5Mhe5UarGG09jfe8+WjakILdbaKssDQ6EvUc/EYbxeiytXQpF7plH2+G1
6IdVTBueX9A/30+0PLAQdi7STuEg2NU9jf04uBb1iRG0DE1Ebs6hrczS86h/
nfKcQuT+3Wp+6Uusv1F5+x6s534knf1K3IHxxou0czsHuTeBFlmdWX8hbW0I
Qb2BnWr+lJ6s/4LKU5NgT9f3mVeXod/WMNq4XYzcF6/yvi2NqH8NLS8dvYj6
t9P2Cw+aUH8tLfxDL6H+hzI4viYOlkMy1HlfxHz/LOXqGuTaato4tw12f6fm
x6TBxjnaSR/Ygvo7LeX+Bs+G7UHKRtXfqH8GbXxdexn1r6DtfWFXUH8V7WxK
x3zrjPK049ifr2Mm58ePbUb9A2gtcQLseovWTwjsT+Qoj7mH+eY3tNUg0B95
irabdmC8v+3/fC7r75fFfHxf7McdR2vFkvUvo+W738Ler2h9qhe2f6eFcRb7
C9xX4w+fgfXnljHXpqM/njdoO68S/bGW0jJyN+z7gjb+iUK/nOO0PmLaVdTf
qsZnR8PimWz2L9WD+eZrtJYSA8t0Wq7oAmu/0SLSj/Xdd7JV/W2w0cuiQ1ox
3juJNkpt2F5Ca9/zeoFPaCcqged9mNbDJ6Ofnlu0vDkB9VuRObx+XDLrfSVH
PS9Wwc5C2hiWgP24PqJt8ygsDtFy5C3YvEFrIWdhGZHLvCoU/fGPo7W1dcg1
k3a6lbH+TSrfFY7xxs8qT8pE7r2m3FjC+p9czv00DEceGEMbzYtgfYHypulY
z1OmvPd52NpPi8njYd9lWu/deA31P76C15v/6HXUL2itdzlyMZ+2+o+EzRLl
LSexntxL278+hv36m2nZrM4/bCXHbx8Ku0fRckk0bMyljXmZOC/vB7TWPQn3
s/2j8o443u9NtOiziPe7axXnVxzk+Q+nnQP7ef7v0PrMSthXRIvTAYx3dimX
l2M/ottqXi+KNqNpvXIbz3v2avU+moX1/AW0faIHz3unys+fZr0O7cSavN8f
zlPvhxqe99A89XwMhe23acPpwvPOo+15Gbzft9Gyws//3+fV+Pn78HywOq/h
ejePoD++wbQeORa5M5O24yr4fF+l8pmH8PwXPtqomoTnmfmncsRGvD9kSD77
9UMU7B+Yr+7XI3y/zaD1zNh61L+ctnt+zvdbJW39G4/c7lDA/MOTcKA/LUdF
YH39TVq/9xnf5xbt3Kjm98wWNb9gJb9n/lDzk+/AzgPlmK2wq28h+9OUi+uJ
qbTRuQ02s2h7/WBYblau4/X9J2iruZL13ld54gLY/exa7jdmOOv10EbXVuTe
DNrKucz3eQWtJT3g98wxWra9Dut31Xpp4diPp08RXVyC/liv0tbUrbAvjRal
TRjvfErLoqWw6yituY9hfXFbjXfSYVNfx/V73OX33ERa7K/k98xi2nHav5f+
A9uge8E=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.818448*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"BTC\"", TraditionalForm], 
     PlotRange -> {{3.818448*^9, 3.8333088*^9}, {0, 63611.33984375}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}], 
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.009166666666666668], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt1AtQVFUYB/ArapmYLhJOptZVFEhLVwszXx1rpNLR2bXMTNMr406aqZuK
D0w9JKygsqz4Ih9xURDBwNWMNBm4mIxloZtj08PMa+YDo9ryVQ1q7v9/mGF2
fvN953z3f87d7Z46d5wnStO0snv/kc97f4Gu85tG3Pu0PD/5ROQzhTarxmZH
HPbSRnmP3Ij1rbQ2pyIvYlc9LTq1XBex/FPVux3JjzjYeQEs3W03RGy/QFtP
VqDumEPr3fquj1gU0GZ8Kvq9R9T6zwdjntmk6jHpmBfqlAbbSacDEWsjaNmg
Yz/nLFpf3xvzjI205t6BeqCWttwDYauRNt+Ng8OxC+mivzci/3DaupaO53PN
oGVzMfaX+ar/4hisD1Yrl5TD9iXlm72wnyNmEV14CRZDaK3+JPN7VH1UDtab
eaqedBD10CHa9iRjvfYrbekzYWf7xXTWBPQbg2gxLB8OpNL60i6bkX8tbU6c
9QHyV9HGD1tg/TxtJ2/egvzRS7j/xk2wTKaNjGkFyD+V1lL2om7nKM8euhX5
D9By8uOw+JnWW92AvW3S2X+jfhvyD6CtsiQ4NJkW/kGwtkq57zzYuY+Wd6Kx
n3FG1aPnoh5ovZT7j7+9Hfn7KZ8v+RD5J9Iy47lC5M+kzdq5qLsqab1jKvN/
T9sX83Gewaj32N+5CudnP0Fb+xtxPo4JtN7BQr/IoO12KbB3D631aI37NL9V
9YdOoR66S4t/SmGt9zLOW7IQ85yv0sbpIZhnLKflzC/QH9it6keGo986RVv1
3ZEn3EyLq71wfnrictZffwfn53LT5oUzsFxKi6z2cLBE1ZvOYb19Uq1v9yXO
2/Gfqt8XB4ueK3geMfm8/7G0dbcL73+xqtddQ11rUPVLubzvW7Qdfws2ukv2
xzWiPzCa1s5Ww1aa8oxG5i1U/UeDsH6ctt1xOB/XddroEMX7fjSDz3/uMBx8
ibZLD/F9n0cbl3fheRzbad1TC4tjav15Dfm9f9HCrMT7ZXZ5n+uvdjRx3yNp
GZUIa15Vb3bDzi2qHpMHG0eVH/HBgT9ofX883mfr4ZVcn9QH9fDztJUwANZn
0+JELezarOqlNbCsW6l+v3fCwd9Uv7hehPxxmTyPfv4dyC9o67i+E/nfpvX8
trB3A20OKkO/WaPqT/3C/FdomVbJ/LFZvL+uGzDPOYy237iD9cZbtHlGL0b+
dbQR8xjq1mFVT3gT68MXlT1DUdcdPs6/FoXncw32qfUF2E9Op8XAZ0uQ36/q
g2fC9kGf+j7lweLBVXz+z1bsQt5naL3lhd3IO40WxfvKkHcNbUZ/Uo68VbRV
0+Yj5LVpo7h2D/K2zWb+KdUVyPs0rYfXVyLvFFp7MSWIvNmq35+5F3k/Vv3J
iai7zip7KjFP3p/D50+KRT3Yn9aG98A8exJtj++G53H4VL/xFfKJoLL3BPJ4
f6SF3ITzMFut5rwHEnBeob60WZOO+9Am0rZZyvteSYt5Y/H9MSpoOU7ivqwW
a+izidgv3IcWyQ2w/hptj/TzfiVtXGiHebKcNi83wsHTqj5nAe7fvqP2z+kE
i1fW8n6+68P7XaY8qz/mmaW03ZiJ/tA3tKzg+6M102LSy7AzIZf95XWYb7ho
89P5fJ/Tc9X+o5m3mBbX2R8+ofp37YP1f9V+BYdgV7yf8w/z+eUY2p7eAg4u
osWVavTbRbTl6Qk7vla+PRX3IW7S5rbFsFfP43kdO4DvqzmKlr+Pw+9baAFt
pe3YLv4H4ixEsA==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[
       Rational[1, 4], 0.25], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {3.818448*^9, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {
        Charting`DateTicksFunction[Automatic, DateTicksFormat -> {Automatic}], 
        Charting`DateTicksFunction[
        Automatic, DateTicksFormat -> {Automatic}, "TickLabels" -> None]}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     Method -> {
      "NoShowPlotTheme" -> Automatic, "OptimizePlotMarkers" -> True, 
       "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"ETH\"", TraditionalForm], 
     PlotRange -> {{3.818448*^9, 3.8333088*^9}, {0, 4166.27734375}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{}, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{3.8334396932728405`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"9272ac7b-e08a-4ac8-a427-6837d61368ee"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Povzetek v tabeli", "Subsubsection",
 CellChangeTimes->{{3.833438334140809*^9, 
  3.8334383480123262`*^9}},ExpressionUUID->"f631bc29-e30e-4795-b9e5-\
68ba551e9037"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dsCCSummary", "=", 
  RowBox[{
   RowBox[{
   "ResourceFunction", "[", 
    "\"\<https://www.wolframcloud.com/obj/antononcube/DeployedResources/\
Function/CryptocurrencyData\>\"", "]"}], "[", 
   RowBox[{"All", ",", "\"\<Summary\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.833438355092761*^9, 3.8334383677142377`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"252235ee-3b05-473b-8cbe-033ec8c75f70"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "Symbol" -> "BTC-USD", "Name" -> "Bitcoin USD", "Price (Intraday)" -> 
        34016.28, "Change" -> 2401.55, "% Change" -> 0.076, "Market Cap" -> 
        6.37503*^11, "Volume in Currency (Since 0:00 UTC)" -> 6.1863*^10, 
        "Volume in Currency (24Hr)" -> 6.1863*^10, 
        "Total Volume All Currencies (24Hr)" -> 6.1863*^10, 
        "Circulating Supply" -> 1.8741*^7], 
       Association[
       "Symbol" -> "ETH-USD", "Name" -> "Ethereum USD", "Price (Intraday)" -> 
        1995.2, "Change" -> 113.23, "% Change" -> 0.0602, "Market Cap" -> 
        2.32255*^11, "Volume in Currency (Since 0:00 UTC)" -> 3.6254*^10, 
        "Volume in Currency (24Hr)" -> 3.6254*^10, 
        "Total Volume All Currencies (24Hr)" -> 3.6254*^10, 
        "Circulating Supply" -> 1.16407*^8], 
       Association[
       "Symbol" -> "USDT-USD", "Name" -> "Tether USD", "Price (Intraday)" -> 
        1.0008, "Change" -> 0.0006, "% Change" -> 0.0006, "Market Cap" -> 
        6.2747*^10, "Volume in Currency (Since 0:00 UTC)" -> 1.04668*^11, 
        "Volume in Currency (24Hr)" -> 1.04668*^11, 
        "Total Volume All Currencies (24Hr)" -> 1.04668*^11, 
        "Circulating Supply" -> 6.27*^10], 
       Association[
       "Symbol" -> "BNB-USD", "Name" -> "BinanceCoin USD", "Price (Intraday)" -> 
        288.42, "Change" -> 29.08, "% Change" -> 0.1121, "Market Cap" -> 
        4.4253*^10, "Volume in Currency (Since 0:00 UTC)" -> 4.566*^9, 
        "Volume in Currency (24Hr)" -> 4.566*^9, 
        "Total Volume All Currencies (24Hr)" -> 4.566*^9, 
        "Circulating Supply" -> 1.53433*^8], 
       Association[
       "Symbol" -> "ADA-USD", "Name" -> "Cardano USD", "Price (Intraday)" -> 
        1.2489, "Change" -> 0.1463, "% Change" -> 0.13269999999999998`, 
        "Market Cap" -> 3.9898*^10, "Volume in Currency (Since 0:00 UTC)" -> 
        6.139*^9, "Volume in Currency (24Hr)" -> 6.139*^9, 
        "Total Volume All Currencies (24Hr)" -> 6.139*^9, 
        "Circulating Supply" -> 3.1946*^10], 
       Association[
       "Symbol" -> "XRP-USD", "Name" -> "XRP USD", "Price (Intraday)" -> 
        0.637458, "Change" -> 0.054819, "% Change" -> 0.0941, "Market Cap" -> 
        2.9479*^10, "Volume in Currency (Since 0:00 UTC)" -> 5.4*^9, 
        "Volume in Currency (24Hr)" -> 5.4*^9, 
        "Total Volume All Currencies (24Hr)" -> 5.4*^9, "Circulating Supply" -> 
        4.6245*^10], 
       Association[
       "Symbol" -> "DOGE-USD", "Name" -> "Dogecoin USD", "Price (Intraday)" -> 
        0.216834, "Change" -> 0.029342, "% Change" -> 0.1565, "Market Cap" -> 
        2.8219*^10, "Volume in Currency (Since 0:00 UTC)" -> 5.412*^9, 
        "Volume in Currency (24Hr)" -> 5.412*^9, 
        "Total Volume All Currencies (24Hr)" -> 5.412*^9, 
        "Circulating Supply" -> 1.30143*^11], 
       Association[
       "Symbol" -> "USDC-USD", "Name" -> "USDCoin USD", "Price (Intraday)" -> 
        1.0005, "Change" -> 0., "% Change" -> 0., "Market Cap" -> 2.5225*^10, 
        "Volume in Currency (Since 0:00 UTC)" -> 3.036*^9, 
        "Volume in Currency (24Hr)" -> 3.036*^9, 
        "Total Volume All Currencies (24Hr)" -> 3.036*^9, 
        "Circulating Supply" -> 2.5212*^10], 
       Association[
       "Symbol" -> "DOT1-USD", "Name" -> "Polkadot USD", "Price (Intraday)" -> 
        16.03, "Change" -> 1.08, "% Change" -> 0.0721, "Market Cap" -> 
        1.5298*^10, "Volume in Currency (Since 0:00 UTC)" -> 3.115*^9, 
        "Volume in Currency (24Hr)" -> 3.115*^9, 
        "Total Volume All Currencies (24Hr)" -> 3.115*^9, 
        "Circulating Supply" -> 9.54346*^8], 
       Association[
       "Symbol" -> "HEX-USD", "Name" -> "HEX USD", "Price (Intraday)" -> 
        0.082466, "Change" -> -0.001486, "% Change" -> -0.0177, "Market Cap" -> 
        1.43*^10, "Volume in Currency (Since 0:00 UTC)" -> 2.5868*^7, 
        "Volume in Currency (24Hr)" -> 2.5868*^7, 
        "Total Volume All Currencies (24Hr)" -> 2.5868*^7, 
        "Circulating Supply" -> 1.73411*^11], 
       Association[
       "Symbol" -> "UNI3-USD", "Name" -> "Uniswap USD", "Price (Intraday)" -> 
        17.8, "Change" -> 2.61, "% Change" -> 0.17149999999999999`, 
        "Market Cap" -> 1.0239*^10, "Volume in Currency (Since 0:00 UTC)" -> 
        7.17633*^8, "Volume in Currency (24Hr)" -> 7.17633*^8, 
        "Total Volume All Currencies (24Hr)" -> 7.17633*^8, 
        "Circulating Supply" -> 5.75203*^8], 
       Association[
       "Symbol" -> "BCH-USD", "Name" -> "BitcoinCash USD", "Price (Intraday)" -> 
        471.89, "Change" -> 45.12, "% Change" -> 0.1057, "Market Cap" -> 
        8.858*^9, "Volume in Currency (Since 0:00 UTC)" -> 2.687*^9, 
        "Volume in Currency (24Hr)" -> 2.687*^9, 
        "Total Volume All Currencies (24Hr)" -> 2.687*^9, 
        "Circulating Supply" -> 1.8771*^7], 
       Association[
       "Symbol" -> "LTC-USD", "Name" -> "Litecoin USD", "Price (Intraday)" -> 
        129.26, "Change" -> 11.13, "% Change" -> 0.0942, "Market Cap" -> 
        8.629*^9, "Volume in Currency (Since 0:00 UTC)" -> 3.766*^9, 
        "Volume in Currency (24Hr)" -> 3.766*^9, 
        "Total Volume All Currencies (24Hr)" -> 3.766*^9, 
        "Circulating Supply" -> 6.675199999999999*^7], 
       Association[
       "Symbol" -> "SOL1-USD", "Name" -> "Solana USD", "Price (Intraday)" -> 
        30.64, "Change" -> 6.98, "% Change" -> 0.2948, "Market Cap" -> 
        8.353999999999999*^9, "Volume in Currency (Since 0:00 UTC)" -> 
        1.491*^9, "Volume in Currency (24Hr)" -> 1.491*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.491*^9, 
        "Circulating Supply" -> 2.72637*^8], 
       Association[
       "Symbol" -> "LINK-USD", "Name" -> "Chainlink USD", "Price (Intraday)" -> 
        18.6, "Change" -> 2.05, "% Change" -> 0.1236, "Market Cap" -> 
        8.071*^9, "Volume in Currency (Since 0:00 UTC)" -> 2.196*^9, 
        "Volume in Currency (24Hr)" -> 2.196*^9, 
        "Total Volume All Currencies (24Hr)" -> 2.196*^9, 
        "Circulating Supply" -> 4.3401*^8], 
       Association[
       "Symbol" -> "MATIC-USD", "Name" -> "MaticNetwork USD", 
        "Price (Intraday)" -> 1.185, "Change" -> 0.1171, "% Change" -> 
        0.10960000000000002`, "Market Cap" -> 7.457*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 2.599*^9, 
        "Volume in Currency (24Hr)" -> 2.599*^9, 
        "Total Volume All Currencies (24Hr)" -> 2.599*^9, 
        "Circulating Supply" -> 6.293*^9], 
       Association[
       "Symbol" -> "THETA-USD", "Name" -> "THETA USD", "Price (Intraday)" -> 
        6.9303, "Change" -> 0.6388, "% Change" -> 0.1015, "Market Cap" -> 
        6.93*^9, "Volume in Currency (Since 0:00 UTC)" -> 6.66097*^8, 
        "Volume in Currency (24Hr)" -> 6.66097*^8, 
        "Total Volume All Currencies (24Hr)" -> 6.66097*^8, 
        "Circulating Supply" -> 1000000000], 
       Association[
       "Symbol" -> "XLM-USD", "Name" -> "Stellar USD", "Price (Intraday)" -> 
        0.260267, "Change" -> 0.033395, "% Change" -> 0.1472, "Market Cap" -> 
        6.035*^9, "Volume in Currency (Since 0:00 UTC)" -> 9.31469*^8, 
        "Volume in Currency (24Hr)" -> 9.31469*^8, 
        "Total Volume All Currencies (24Hr)" -> 9.31469*^8, 
        "Circulating Supply" -> 2.3189*^10], 
       Association[
       "Symbol" -> "VET-USD", "Name" -> "VeChain USD", "Price (Intraday)" -> 
        0.077823, "Change" -> 0.008078, "% Change" -> 0.1158, "Market Cap" -> 
        5.005*^9, "Volume in Currency (Since 0:00 UTC)" -> 1.218*^9, 
        "Volume in Currency (24Hr)" -> 1.218*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.218*^9, 
        "Circulating Supply" -> 6.4316*^10], 
       Association[
       "Symbol" -> "ICP1-USD", "Name" -> "InternetComputer USD", 
        "Price (Intraday)" -> 36.87, "Change" -> 1.1, "% Change" -> 
        0.030699999999999998`, "Market Cap" -> 4.755*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 2.84966*^8, 
        "Volume in Currency (24Hr)" -> 2.84966*^8, 
        "Total Volume All Currencies (24Hr)" -> 2.84966*^8, 
        "Circulating Supply" -> 1.2898599999999999`*^8], 
       Association[
       "Symbol" -> "ETC-USD", "Name" -> "EthereumClassic USD", 
        "Price (Intraday)" -> 39.46, "Change" -> 2.2, "% Change" -> 
        0.059000000000000004`, "Market Cap" -> 4.59*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 2.799*^9, 
        "Volume in Currency (24Hr)" -> 2.799*^9, 
        "Total Volume All Currencies (24Hr)" -> 2.799*^9, 
        "Circulating Supply" -> 1.16313*^8], 
       Association[
       "Symbol" -> "FIL-USD", "Name" -> "FilecoinFutures USD", 
        "Price (Intraday)" -> 53.89, "Change" -> 6.2, "% Change" -> 
        0.12990000000000002`, "Market Cap" -> 4.372*^9, 
        "Volume in Currency (Since 0:00 UTC)" -> 1.145*^9, 
        "Volume in Currency (24Hr)" -> 1.145*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.145*^9, 
        "Circulating Supply" -> 8.1131*^7], 
       Association[
       "Symbol" -> "TRX-USD", "Name" -> "TRON USD", "Price (Intraday)" -> 
        0.055459, "Change" -> 0.003972, "% Change" -> 0.0771, "Market Cap" -> 
        3.974*^9, "Volume in Currency (Since 0:00 UTC)" -> 1.562*^9, 
        "Volume in Currency (24Hr)" -> 1.562*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.562*^9, 
        "Circulating Supply" -> 7.166*^10], 
       Association[
       "Symbol" -> "XMR-USD", "Name" -> "Monero USD", "Price (Intraday)" -> 
        215.68, "Change" -> 10.19, "% Change" -> 0.0496, "Market Cap" -> 
        3.869*^9, "Volume in Currency (Since 0:00 UTC)" -> 4.08346*^8, 
        "Volume in Currency (24Hr)" -> 4.08346*^8, 
        "Total Volume All Currencies (24Hr)" -> 4.08346*^8, 
        "Circulating Supply" -> 1.7938*^7], 
       Association[
       "Symbol" -> "EOS-USD", "Name" -> "EOS USD", "Price (Intraday)" -> 
        3.6628, "Change" -> 0.2614, "% Change" -> 0.07690000000000001, 
        "Market Cap" -> 3.496*^9, "Volume in Currency (Since 0:00 UTC)" -> 
        1.85*^9, "Volume in Currency (24Hr)" -> 1.85*^9, 
        "Total Volume All Currencies (24Hr)" -> 1.85*^9, "Circulating Supply" -> 
        9.54494*^8]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Name"} -> 
        1, {All, "Price (Intraday)"} -> 1, {All, "Change"} -> 
        1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[86.4], "Name" -> 
            TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
            "Price (Intraday)" -> TypeSystem`PackageScope`AtomShape[60], 
            "Change" -> TypeSystem`PackageScope`AtomShape[60], "% Change" -> 
            TypeSystem`PackageScope`AtomShape[60], "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 25], "Meta" -> 
     Association["ID" -> 86286128899037], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "Symbol"} -> 1, {All, "Name"} -> 
        1, {All, "Price (Intraday)"} -> 1, {All, "Change"} -> 
        1, {All, "% Change"} -> 1, {All, "Market Cap"} -> 
        1, {All, "Volume in Currency (Since 0:00 UTC)"} -> 
        1, {All, "Volume in Currency (24Hr)"} -> 
        1, {All, "Total Volume All Currencies (24Hr)"} -> 
        1, {All, "Circulating Supply"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "Symbol" -> TypeSystem`PackageScope`AtomShape[86.4], "Name" -> 
            TypeSystem`PackageScope`AtomShape[192.00000000000003`], 
            "Price (Intraday)" -> TypeSystem`PackageScope`AtomShape[60], 
            "Change" -> TypeSystem`PackageScope`AtomShape[60], "% Change" -> 
            TypeSystem`PackageScope`AtomShape[60], "Market Cap" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (Since 0:00 UTC)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Volume in Currency (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], 
            "Total Volume All Currencies (24Hr)" -> 
            TypeSystem`PackageScope`AtomShape[60], "Circulating Supply" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 10, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "Symbol", "Name", "Price (Intraday)", "Change", "% Change", 
         "Market Cap", "Volume in Currency (Since 0:00 UTC)", 
         "Volume in Currency (24Hr)", "Total Volume All Currencies (24Hr)", 
         "Circulating Supply"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 25], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     25, "DataColumnCount" -> 10, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Symbol", 
                  Style[
                  "Symbol", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Symbol"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Symbol"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Name", 
                  Style[
                  "Name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Name"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Price (Intraday)", 
                  Style[
                  "Price (Intraday)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Price (Intraday)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Price (Intraday)"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Change", 
                  Style[
                  "Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Change"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["% Change", 
                  Style[
                  "% Change", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "% Change"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "% Change"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Market Cap", 
                  Style[
                  "Market Cap", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Market Cap"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Market Cap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (Since 0:00 UTC)", 
                  Style[
                  "Volume in Currency (Since 0:00 UTC)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Volume in Currency (Since 0:00 UTC)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (Since 0:00 UTC)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Volume in Currency (24Hr)", 
                  Style[
                  "Volume in Currency (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Volume in Currency (24Hr)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Volume in Currency (24Hr)"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Total Volume All Currencies (24Hr)", 
                  Style[
                  "Total Volume All Currencies (24Hr)", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Total Volume All Currencies (24Hr)"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Total Volume All Currencies (24Hr)"}, "ColumnHeader", 
                True], "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Circulating Supply", 
                  Style[
                  "Circulating Supply", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Circulating Supply"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Circulating Supply"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["BTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Bitcoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34016.3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2401.55"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.076"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["637503000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61863000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61863000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["61863000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18741000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Ethereum USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1995.2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["113.23"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0602"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["232255000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36254000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36254000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36254000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["116407000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDT-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Tether USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0006"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62747000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104668000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104668000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["104668000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["62700000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNB-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BinanceCoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["288.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1121"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44253000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4566000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4566000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4566000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["153433000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ADA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Cardano USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.2489"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1463"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1327"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39898000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6139000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6139000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6139000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31946000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XRP-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["XRP USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.637458"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.054819"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0941"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29479000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5400000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5400000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5400000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46245000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOGE-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Dogecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.216834"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.029342"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1565"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28219000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5412000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5412000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5412000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["130143000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["USDC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["USDCoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0005"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25225000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3036000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3036000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3036000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25212000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DOT1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Polkadot USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16.03"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.08"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0721"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15298000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3115000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3115000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3115000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["954346000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["HEX-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["HEX USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.082466"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.001486"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.0177"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14300000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25868000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25868000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25868000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["173411000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["UNI3-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Uniswap USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["17.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.61"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1715"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10239000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["717633000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["717633000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["717633000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["575203000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BCH-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["BitcoinCash USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["471.89"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["45.12"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1057"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8858000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2687000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2687000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2687000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18771000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LTC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Litecoin USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["129.26"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11.13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0942"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8629000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3766000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3766000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3766000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["66752000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SOL1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Solana USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30.64"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.98"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.2948"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8354000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1491000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1491000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1491000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["272637000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LINK-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Chainlink USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["18.6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.05"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1236"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8071000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2196000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2196000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2196000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["434010000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MATIC-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["MaticNetwork USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.185"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1171"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1096"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7457000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2599000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2599000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2599000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6293000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["THETA-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["THETA USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6.9303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.6388"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1015"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6930000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["666097000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["666097000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["666097000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["XLM-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Stellar USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.260267"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.033395"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1472"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6035000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["931469000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["931469000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["931469000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["23189000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["VET-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["VeChain USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.077823"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.008078"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.1158"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5005000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1218000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1218000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1218000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["64316000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ICP1-USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{86.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["InternetComputer USD", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["36.87"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Price (Intraday)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0307"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["% Change"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4755000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Market Cap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["284966000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (Since 0:00 UTC)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["284966000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Volume in Currency (24Hr)"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["284966000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Total Volume All Currencies (24Hr)"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["128986000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Circulating Supply"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 25, 1], {1, 25 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    25, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 25, 1], {1, 25 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1347., {277., 283.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1347., {277., 283.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833438397034058*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"33fd73b4-e260-4c79-920e-04c9f6ab2528"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulacija podatkov iz tabele - ureditev po kategorijah", \
"Subsubsection",
 CellChangeTimes->{{3.8334384431341667`*^9, 
  3.833438465871253*^9}},ExpressionUUID->"5c302d50-0f17-4d3f-8f8e-\
8a786775e1d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  "dsCCSummary", "]"}]], "Input",
 CellChangeTimes->{{3.8334386324976873`*^9, 3.8334386325056667`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"c47698df-211c-43fd-94be-71feedc51f41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 Symbol\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"ADA-USD\"\>", "1"},
          {"\<\"BCH-USD\"\>", "1"},
          {"\<\"BNB-USD\"\>", "1"},
          {"\<\"BTC-USD\"\>", "1"},
          {"\<\"DOGE-USD\"\>", "1"},
          {"\<\"DOT1-USD\"\>", "1"},
          {"\<\"(Other)\"\>", "19"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 Name\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"BinanceCoin USD\"\>", "1"},
          {"\<\"BitcoinCash USD\"\>", "1"},
          {"\<\"Bitcoin USD\"\>", "1"},
          {"\<\"Cardano USD\"\>", "1"},
          {"\<\"Chainlink USD\"\>", "1"},
          {"\<\"Dogecoin USD\"\>", "1"},
          {"\<\"(Other)\"\>", "19"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 Price (Intraday)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "0.055459`"},
          {"\<\"1st Qu\"\>", "0.9097394999999999`"},
          {"\<\"Median\"\>", "16.03`"},
          {"\<\"3rd Qu\"\>", "72.7325`"},
          {"\<\"Mean\"\>", "1493.8551442799996`"},
          {"\<\"Max\"\>", "34016.28`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 Change\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "0.001486`"}]},
          {"\<\"1st Qu\"\>", "0.03238175`"},
          {"\<\"Median\"\>", "1.08`"},
          {"\<\"3rd Qu\"\>", "7.782500000000001`"},
          {"\<\"Mean\"\>", "105.35249279999996`"},
          {"\<\"Max\"\>", "2401.55`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"5 % Change\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", 
           RowBox[{"-", "0.0177`"}]},
          {"\<\"1st Qu\"\>", "0.059899999999999995`"},
          {"\<\"Median\"\>", "0.0942`"},
          {"\<\"Mean\"\>", "0.09494799999999999`"},
          {"\<\"3rd Qu\"\>", "0.125175`"},
          {"\<\"Max\"\>", "0.2948`"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"6 Market Cap\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "3.496`*^9"},
          {"\<\"1st Qu\"\>", "4.9425`*^9"},
          {"\<\"Median\"\>", "8.629`*^9"},
          {"\<\"3rd Qu\"\>", "2.8534`*^10"},
          {"\<\"Mean\"\>", "4.895244`*^10"},
          {"\<\"Max\"\>", "6.37503`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"7 Volume in Currency (Since 0:00 UTC)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "2.5868`*^7"},
          {"\<\"1st Qu\"\>", "1.09161725`*^9"},
          {"\<\"Median\"\>", "2.599`*^9"},
          {"\<\"3rd Qu\"\>", "4.7745`*^9"},
          {"\<\"Mean\"\>", "1.019201516`*^10"},
          {"\<\"Max\"\>", "1.04668`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"8 Volume in Currency (24Hr)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "2.5868`*^7"},
          {"\<\"1st Qu\"\>", "1.09161725`*^9"},
          {"\<\"Median\"\>", "2.599`*^9"},
          {"\<\"3rd Qu\"\>", "4.7745`*^9"},
          {"\<\"Mean\"\>", "1.019201516`*^10"},
          {"\<\"Max\"\>", "1.04668`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"9 Total Volume All Currencies (24Hr)\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "2.5868`*^7"},
          {"\<\"1st Qu\"\>", "1.09161725`*^9"},
          {"\<\"Median\"\>", "2.599`*^9"},
          {"\<\"3rd Qu\"\>", "4.7745`*^9"},
          {"\<\"Mean\"\>", "1.019201516`*^10"},
          {"\<\"Max\"\>", "1.04668`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"10 Circulating Supply\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "1.7938`*^7"},
          {"\<\"1st Qu\"\>", "1.163835`*^8"},
          {"\<\"Median\"\>", "9.54346`*^8"},
          {"\<\"Mean\"\>", "2.560096648`*^10"},
          {"\<\"3rd Qu\"\>", "3.552075`*^10"},
          {"\<\"Max\"\>", "1.73411`*^11"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.833438635305069*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"d6b65ae4-221a-42ea-ab47-9139ed3173e5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Nedavni dogodki, povezani z Kripto platformo", "Subsubsection",
 CellChangeTimes->{{3.8334404052479753`*^9, 
  3.8334404306889486`*^9}},ExpressionUUID->"9fe53738-04fb-4e46-809c-\
0c954ae80579"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsEventData", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Jun 18, 2021\>\"", ",", 
       "\"\<China to shut down over 90% of its Bitcoin mining capacity after \
local bans\>\"", ",", 
       "\"\<https://www.globaltimes.cn/page/202106/1226598.shtml\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Jun 10, 2021\>\"", ",", 
       "\"\<Global banking regulators call for toughest rules for \
cryptocurrencies\>\"", ",", 
       "\"\<https://www.theguardian.com/technology/2021/jun/10/global-banking-\
regulators-cryptocurrencies-bitcoin\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 10, 2021\>\"", ",", 
       "\"\<IMF sees legal, economic issues with El Salvador's bitcoin move\>\
\"", ",", 
       "\"\<https://www.reuters.com/business/finance/imf-sees-legal-economic-\
issues-with-el-salvador-bitcoin-move-2021-06-10/\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 8, 2021\>\"", ",", 
       "\"\<El Salvador Becomes First Country To Adopt Bitcoin as Legal \
Tender After Passing Law\>\"", ",", 
       "\"\<https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-make-\
bitcoin-legal-tender.html\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 8, 2021\>\"", ",", 
       "\"\<US recovers millions in cryptocurrency paid to Colonial Pipeline \
ransomware hackers\>\"", ",", 
       "\"\<https://edition.cnn.com/2021/06/07/politics/colonial-pipeline-\
ransomware-recovered/\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 4, 2021\>\"", ",", 
       "\"\<Start of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood\>\"", ",", 
       "\"\<https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-largest-\
cryptocurrency-conference-coming-to-wynwood/\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<June 6, 2021\>\"", ",", 
       "\"\<End of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood\>\"", ",", 
       "\"\<https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-largest-\
cryptocurrency-conference-coming-to-wynwood/\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<May 28, 2021\>\"", ",", 
       "\"\<Iran Bans Crypto Mining After Months of Blackouts\>\"", ",", 
       "\"\<https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<May 19, 2021\>\"", ",", 
       "\"\<Bitcoin, Ethereum prices in free fall as China plans crackdown on \
mining and trading\>\"", ",", 
       "\"\<https://www.cnet.com/news/bitcoin-ethereum-prices-in-freefall-as-\
china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e\>\""}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsEventData", "=", 
   RowBox[{
    RowBox[{"Dataset", "[", "lsEventData", "]"}], "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"AssociationThread", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Date\>\"", ",", "\"\<Event\>\"", ",", "\"\<URL\>\""}], 
         "}"}], ",", "#"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsEventData", "=", 
   RowBox[{"dsEventData", "[", 
    RowBox[{"All", ",", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Prepend", "[", 
         RowBox[{"#", ",", 
          RowBox[{"\"\<DateObject\>\"", "\[Rule]", 
           RowBox[{"DateObject", "[", "#Date", "]"}]}]}], "]"}], ",", 
        RowBox[{"<|", 
         RowBox[{"\"\<URL\>\"", "\[Rule]", 
          RowBox[{"URL", "[", "#URL", "]"}]}], "|>"}]}], "]"}], "&"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsEventData", "=", 
  RowBox[{"dsEventData", "[", 
   RowBox[{"SortBy", "[", 
    RowBox[{"#DateObject", "&"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8334404332471957`*^9, 3.833440433257316*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"ecf4a310-97a4-4c97-922b-452a2e74b081"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "DateObject" -> DateObject[{2021, 5, 19}, "Day", "Gregorian", 2.], 
        "Date" -> "May 19, 2021", "Event" -> 
        "Bitcoin, Ethereum prices in free fall as China plans crackdown on \
mining and trading", "URL" -> 
        URL["https://www.cnet.com/news/bitcoin-ethereum-prices-in-freefall-as-\
china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"]], 
       Association[
       "DateObject" -> DateObject[{2021, 5, 28}, "Day", "Gregorian", 2.], 
        "Date" -> "May 28, 2021", "Event" -> 
        "Iran Bans Crypto Mining After Months of Blackouts", "URL" -> 
        URL["https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 4}, "Day", "Gregorian", 2.], 
        "Date" -> "June 4, 2021", "Event" -> 
        "Start of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood", "URL" -> 
        URL["https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 6}, "Day", "Gregorian", 2.], 
        "Date" -> "June 6, 2021", "Event" -> 
        "End of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood", "URL" -> 
        URL["https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 8}, "Day", "Gregorian", 2.], 
        "Date" -> "June 8, 2021", "Event" -> 
        "El Salvador Becomes First Country To Adopt Bitcoin as Legal Tender \
After Passing Law", "URL" -> 
        URL["https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-make-\
bitcoin-legal-tender.html"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 8}, "Day", "Gregorian", 2.], 
        "Date" -> "June 8, 2021", "Event" -> 
        "US recovers millions in cryptocurrency paid to Colonial Pipeline \
ransomware hackers", "URL" -> 
        URL["https://edition.cnn.com/2021/06/07/politics/colonial-pipeline-\
ransomware-recovered/"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 10}, "Day", "Gregorian", 2.], 
        "Date" -> "Jun 10, 2021", "Event" -> 
        "Global banking regulators call for toughest rules for \
cryptocurrencies", "URL" -> 
        URL["https://www.theguardian.com/technology/2021/jun/10/global-\
banking-regulators-cryptocurrencies-bitcoin"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 10}, "Day", "Gregorian", 2.], 
        "Date" -> "June 10, 2021", "Event" -> 
        "IMF sees legal, economic issues with El Salvador's bitcoin move", 
        "URL" -> URL[
         "https://www.reuters.com/business/finance/imf-sees-legal-economic-\
issues-with-el-salvador-bitcoin-move-2021-06-10/"]], 
       Association[
       "DateObject" -> DateObject[{2021, 6, 18}, "Day", "Gregorian", 2.], 
        "Date" -> "Jun 18, 2021", "Event" -> 
        "China to shut down over 90% of its Bitcoin mining capacity after \
local bans", "URL" -> 
        URL["https://www.globaltimes.cn/page/202106/1226598.shtml"]]}, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "DateObject"} -> 1, {All, "Date"} -> 
        1, {All, "Event"} -> 1, {All, "URL"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "DateObject" -> TypeSystem`PackageScope`AtomShape[75], "Date" -> 
            TypeSystem`PackageScope`AtomShape[124.80000000000001`], "Event" -> 
            TypeSystem`PackageScope`AtomShape[480.00000000000006`], "URL" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 4, {All}]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"DateObject", "Date", "Event", "URL"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL]}], 9], "Meta" -> 
     Association["ID" -> 214224614714323], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "DateObject"} -> 1, {All, "Date"} -> 
        1, {All, "Event"} -> 1, {All, "URL"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "DateObject" -> TypeSystem`PackageScope`AtomShape[75], "Date" -> 
            TypeSystem`PackageScope`AtomShape[124.80000000000001`], "Event" -> 
            TypeSystem`PackageScope`AtomShape[480.00000000000006`], "URL" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 4, {All}]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"DateObject", "Date", "Event", "URL"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[URL]}], 9], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 9, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     9, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DateObject", 
                  Style[
                  "DateObject", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "DateObject"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DateObject"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Date"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Event", 
                  Style[
                  "Event", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "Event"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Event"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["URL", 
                  Style[
                  "URL", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                TypeSystem`NestedGrid`PackagePrivate`updateState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                  All, "URL"}, 1]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "URL"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Wed 19 May 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["May 19, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Bitcoin, Ethereum prices in free fall as China plans crackdown \
on mining and trading", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.cnet.com/news/bitcoin-ethereum-prices-...", 
                URL[
                "https://www.cnet.com/news/bitcoin-ethereum-prices-in-\
freefall-as-china-plans-crackdown-on-mining-and-trading/#ftag=CAD590a51e"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Fri 28 May 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["May 28, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Iran Bans Crypto Mining After Months of Blackouts", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://gizmodo.com/iran-bans-crypto-mining-after-...", 
                URL[
                "https://gizmodo.com/iran-bans-crypto-mining-after-months-of-\
blackouts-1846991039"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Fri 4 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 4, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Start of Bitcoin 2021: World's Largest Cryptocurrency \
Conference Coming To Wynwood", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://miami.cbslocal.com/2021/06/04/bitcoin-2021...", 
                URL[
                "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Sun 6 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 6, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "End of Bitcoin 2021: World's Largest Cryptocurrency Conference \
Coming To Wynwood", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://miami.cbslocal.com/2021/06/04/bitcoin-2021...", 
                URL[
                "https://miami.cbslocal.com/2021/06/04/bitcoin-2021-worlds-\
largest-cryptocurrency-conference-coming-to-wynwood/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Tue 8 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 8, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "El Salvador Becomes First Country To Adopt Bitcoin as Legal \
Tender After Passing Law", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.cnbc.com/2021/06/09/el-salvador-propos...", 
                URL[
                "https://www.cnbc.com/2021/06/09/el-salvador-proposes-law-to-\
make-bitcoin-legal-tender.html"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Tue 8 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 8, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "US recovers millions in cryptocurrency paid to Colonial \
Pipeline ransomware hackers", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://edition.cnn.com/2021/06/07/politics/coloni...", 
                URL[
                "https://edition.cnn.com/2021/06/07/politics/colonial-\
pipeline-ransomware-recovered/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Thu 10 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Jun 10, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Global banking regulators call for toughest rules for \
cryptocurrencies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.theguardian.com/technology/2021/jun/10...", 
                URL[
                "https://www.theguardian.com/technology/2021/jun/10/global-\
banking-regulators-cryptocurrencies-bitcoin"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Thu 10 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["June 10, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "IMF sees legal, economic issues with El Salvador's bitcoin \
move", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.reuters.com/business/finance/imf-sees-...", 
                URL[
                "https://www.reuters.com/business/finance/imf-sees-legal-\
economic-issues-with-el-salvador-bitcoin-move-2021-06-10/"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["\"Fri 18 Jun 2021\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DateObject"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Jun 18, 2021", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "China to shut down over 90% of its Bitcoin mining capacity \
after local bans", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Event"]}, "Item", False], "Mouse"], 
              ImageSize -> {{480.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Hyperlink[
               "https://www.globaltimes.cn/page/202106/1226598.sht...", 
                URL["https://www.globaltimes.cn/page/202106/1226598.shtml"]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["URL"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1168., {135., 141.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1168., {135., 141.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.833440434771865*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"288a60b1-7d33-4fed-b22c-5437d68082ab"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Zaklju\[CHacek]na beseda", "Section",
 CellChangeTimes->{{3.8335312910188437`*^9, 
  3.833531302471642*^9}},ExpressionUUID->"cf7cef12-9953-4f42-8926-\
390d21cb64d5"],

Cell["\<\
Kot lahko vidimo, je tehnologija kriptovalut \[SHacek]e vedno nekoliko \
zapletena in nejasna - izgleda, da smo \[SHacek]e nekoliko dale\[CHacek] od \
bolj splo\[SHacek]ne uporabe kriptovalut med ve\[CHacek]jo mno\[ZHacek]ico, \
le \[CHacek]as pa bo pokazal, ali gre resni\[CHacek]no za tehnologijo \
prihodnosti, ki bo zamenjala gotovino in denar kot tak, ali pa se bo \
izkazalo, da so skeptiki imeli ves \[CHacek]as prav.\
\>", "Text",
 CellChangeTimes->{{3.8335313082840323`*^9, 
  3.833531459379097*^9}},ExpressionUUID->"1b89f985-da38-4530-bfba-\
b7352167839b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 587.4},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ffad544d-24e4-428d-ac00-cd850d8595fd"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 3, 97, "Title",ExpressionUUID->"0c60ad2c-412c-4f5d-9c9d-e2714dc6e87e"],
Cell[740, 27, 190, 3, 53, "Subtitle",ExpressionUUID->"261899e7-4a2d-437a-9512-dc4ad6562e64"],
Cell[933, 32, 307, 7, 35, "Text",ExpressionUUID->"9e1eeca3-af72-4de6-b0ca-14e4e5f88020"],
Cell[CellGroupData[{
Cell[1265, 43, 160, 3, 67, "Section",ExpressionUUID->"8cf0acad-d56e-4e3a-a293-319ca6395e2d"],
Cell[1428, 48, 1307, 20, 150, "Text",ExpressionUUID->"113dcc3c-56e0-431e-8209-fdef0e8c3852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2772, 73, 188, 3, 69, "Chapter",ExpressionUUID->"3a129c01-4c24-46f9-8285-886b35210c20"],
Cell[CellGroupData[{
Cell[2985, 80, 320, 5, 67, "Section",ExpressionUUID->"b1040eba-bac7-4fba-8b81-71cfd94d335f"],
Cell[CellGroupData[{
Cell[3330, 89, 733, 13, 28, "Input",ExpressionUUID->"59d0e300-a31e-4169-ab0f-1f6f3d051257"],
Cell[4066, 104, 1589, 24, 209, "Output",ExpressionUUID->"e91b4753-8fa8-4903-8d51-6f51e5a16cae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5692, 133, 326, 7, 28, "Input",ExpressionUUID->"7a72f135-73de-4134-a94c-02eedaedbc0c"],
Cell[6021, 142, 1575, 25, 209, "Output",ExpressionUUID->"e239110a-7cf8-4ae7-8a75-8111f681a60e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7645, 173, 224, 4, 67, "Section",ExpressionUUID->"a14496a6-7355-40af-9edb-3c6d5182f9f8"],
Cell[CellGroupData[{
Cell[7894, 181, 495, 10, 28, "Input",ExpressionUUID->"1859327e-eb4c-4d53-a02f-71175eceb472"],
Cell[8392, 193, 2843, 44, 423, "Output",ExpressionUUID->"42da9771-1d48-4ed3-a6e5-e65f08c27645"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11272, 242, 324, 7, 28, "Input",ExpressionUUID->"e2e5ae5a-d251-43b4-a241-998e483e9100"],
Cell[11599, 251, 2926, 47, 423, "Output",ExpressionUUID->"76b6863c-d338-4772-aa6e-051834e3c1dd"]
}, Open  ]],
Cell[14540, 301, 1543, 23, 196, "Text",ExpressionUUID->"56f1cdbc-c8ed-4db7-b6d1-54f7ae79cfa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16120, 329, 330, 5, 67, "Section",ExpressionUUID->"eb4cb3bb-877e-4c03-aa10-ce5ba44e32a1"],
Cell[16453, 336, 980, 15, 104, "Text",ExpressionUUID->"ae576aeb-f457-41ba-b18e-582725ef919b"],
Cell[CellGroupData[{
Cell[17458, 355, 160, 3, 54, "Subsection",ExpressionUUID->"bec68de3-5937-472a-8a84-4006c54f814e"],
Cell[17621, 360, 616, 11, 58, "Text",ExpressionUUID->"6263d048-b8f0-4736-a5b5-ae7e86b259f6"],
Cell[CellGroupData[{
Cell[18262, 375, 169, 3, 45, "Subsubsection",ExpressionUUID->"04b39778-8352-4b19-8e4b-5f47396c29cf"],
Cell[CellGroupData[{
Cell[18456, 382, 304, 6, 28, "Input",ExpressionUUID->"c89d2d07-e78d-4ba0-9ddf-029f0073cfc0"],
Cell[18763, 390, 33747, 614, 209, "Output",ExpressionUUID->"87fba6af-1be5-47fd-bcb6-08b42971496e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52559, 1010, 171, 3, 45, "Subsubsection",ExpressionUUID->"ac58238c-90cf-4c10-8db9-aac914126ff1"],
Cell[CellGroupData[{
Cell[52755, 1017, 360, 7, 28, "Input",ExpressionUUID->"0039ce36-fbae-487e-9fd1-723182cb8f2f"],
Cell[53118, 1026, 41155, 730, 64, "Output",ExpressionUUID->"3d9520f3-7594-4b17-96d9-fd6ae123c29c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94310, 1761, 275, 5, 28, "Input",ExpressionUUID->"b1368b7f-72cc-47de-a95c-09922025754c"],
Cell[94588, 1768, 33895, 624, 237, "Output",ExpressionUUID->"2c477c53-12f5-4c29-907b-2eb9025b472b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128544, 2399, 159, 3, 54, "Subsection",ExpressionUUID->"abbc57fd-6602-4e1e-86a9-8c69e05a5a34"],
Cell[128706, 2404, 1189, 18, 127, "Text",ExpressionUUID->"f1b8be85-9f57-4ab2-bb77-299367abf54b"],
Cell[CellGroupData[{
Cell[129920, 2426, 171, 3, 45, "Subsubsection",ExpressionUUID->"c1a64801-c9ba-4675-a134-c557b9007449"],
Cell[CellGroupData[{
Cell[130116, 2433, 305, 6, 28, "Input",ExpressionUUID->"167bdbcb-822a-4707-b669-04e541327393"],
Cell[130424, 2441, 39021, 715, 263, "Output",ExpressionUUID->"de09c46a-4218-4c13-8b5c-38d08154a1dc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169494, 3162, 170, 3, 45, "Subsubsection",ExpressionUUID->"e00f3810-226d-4008-9d27-dd2d43725db2"],
Cell[CellGroupData[{
Cell[169689, 3169, 360, 7, 28, "Input",ExpressionUUID->"cb7e2f34-2b2f-4cbb-801f-b2df8aa41ef4"],
Cell[170052, 3178, 42690, 755, 64, "Output",ExpressionUUID->"80fc4777-9ba0-43ea-a3f9-e3439f2a9b0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212779, 3938, 207, 4, 28, "Input",ExpressionUUID->"9199eee7-1472-4ed3-9547-06d5384083a8"],
Cell[212989, 3944, 35230, 646, 241, "Output",ExpressionUUID->"87ec02a7-f459-4cca-8170-5c283d005581"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[248280, 4597, 261, 4, 54, "Subsection",ExpressionUUID->"8e6b6835-b911-404f-bd51-823380aa8356"],
Cell[248544, 4603, 1790, 26, 173, "Text",ExpressionUUID->"a275f60e-2d3e-4acb-87c7-e90500fbe882"],
Cell[CellGroupData[{
Cell[250359, 4633, 170, 3, 45, "Subsubsection",ExpressionUUID->"3b11613a-aa8f-46ce-9675-ea2fe071dae7"],
Cell[CellGroupData[{
Cell[250554, 4640, 464, 8, 28, "Input",ExpressionUUID->"aea53ee2-8ee7-4e95-b079-1abe1a4ae86d"],
Cell[251021, 4650, 530, 12, 23, "Message",ExpressionUUID->"6509ede3-7aa8-4da3-8061-ec5abd5f8698"],
Cell[251554, 4664, 493, 10, 23, "Message",ExpressionUUID->"6893621e-07b7-4153-afdb-369c973bd160"],
Cell[252050, 4676, 316, 5, 32, "Output",ExpressionUUID->"a28b52e1-d60c-4ca3-8d23-688e7d5f8471"]
}, Open  ]],
Cell[252381, 4684, 266, 4, 35, "Text",ExpressionUUID->"5531d644-c56b-441b-af96-c6246bea9370"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252684, 4693, 174, 3, 45, "Subsubsection",ExpressionUUID->"d7d66406-d6ba-4da6-a02f-8fab96ede583"],
Cell[CellGroupData[{
Cell[252883, 4700, 361, 7, 28, "Input",ExpressionUUID->"0ef14e89-df66-4908-91bb-a99212876ea0"],
Cell[253247, 4709, 42386, 753, 64, "Output",ExpressionUUID->"75b8e18a-b6ba-451f-9f08-572a14028cba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295670, 5467, 207, 4, 28, "Input",ExpressionUUID->"59f34ee6-387e-4b30-b826-3e4729da82ad"],
Cell[295880, 5473, 34257, 630, 246, "Output",ExpressionUUID->"9d9b836a-410c-4cb1-9546-c2feae8b7e0b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[330186, 6109, 195, 3, 45, "Subsubsection",ExpressionUUID->"0af1b9a5-ecf0-4039-b7dc-ae1bf8f3b155"],
Cell[CellGroupData[{
Cell[330406, 6116, 447, 10, 49, "Input",ExpressionUUID->"c0107354-d14c-48a8-8c51-de1987aa0d96"],
Cell[330856, 6128, 128342, 2263, 120, "Output",ExpressionUUID->"45fafab7-3d49-4d9c-bd31-07503f9701e3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459235, 8396, 212, 3, 28, "Input",ExpressionUUID->"d16f8e07-4eb4-4a2c-9556-84e2a6ddc535"],
Cell[459450, 8401, 97094, 1677, 240, "Output",ExpressionUUID->"ad48b90c-8116-406d-9540-c75902b4fe09"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[556617, 10086, 168, 3, 67, "Section",ExpressionUUID->"bd016494-fb06-47a2-8fea-6bbfd7078898"],
Cell[556788, 10091, 415, 8, 58, "Text",ExpressionUUID->"5c32b2cb-2251-4b31-b592-d037a5893be9"],
Cell[CellGroupData[{
Cell[557228, 10103, 162, 3, 54, "Subsection",ExpressionUUID->"46b11da4-0278-41ba-9289-928576b4194e"],
Cell[557393, 10108, 537, 12, 28, "Input",ExpressionUUID->"34bdea2b-2d60-48e2-a22e-c937f64a194e"],
Cell[557933, 10122, 652, 16, 28, "Input",ExpressionUUID->"7dec3457-9001-4f13-b132-dc0ee7daf21a"],
Cell[558588, 10140, 525, 14, 28, "Input",ExpressionUUID->"122cec23-43f5-49ec-985d-8137ab538a3b"],
Cell[559116, 10156, 367, 8, 28, "Input",ExpressionUUID->"139a34d1-6c34-45ce-878f-bab54e5155a1"],
Cell[CellGroupData[{
Cell[559508, 10168, 338, 6, 28, "Input",ExpressionUUID->"0f8dd165-c62a-4a2b-ba84-54f1617fe34d"],
Cell[559849, 10176, 52784, 920, 100, "Output",ExpressionUUID->"2bd6914f-cdfb-46cf-812a-3abaefbe0a10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[612670, 11101, 167, 3, 28, "Input",ExpressionUUID->"76823e15-934c-4bcd-8db6-eeb2567025ee"],
Cell[612840, 11106, 40357, 729, 248, "Output",ExpressionUUID->"2e3f8352-2a25-4e5c-ab9c-83a04d1f8c8b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[653246, 11841, 163, 3, 54, "Subsection",ExpressionUUID->"64ec4c83-d292-4697-9260-01e2942a3fda"],
Cell[653412, 11846, 452, 11, 28, "Input",ExpressionUUID->"5bc6b03d-1b30-4107-b8d0-a2e5f856663e"],
Cell[653867, 11859, 521, 14, 28, "Input",ExpressionUUID->"66f62e9f-dc0b-4d4c-a1b2-cce64d590f5e"],
Cell[654391, 11875, 528, 14, 28, "Input",ExpressionUUID->"bac6d0a1-3c1c-44c4-8d92-f32cc57c92b5"],
Cell[654922, 11891, 343, 7, 28, "Input",ExpressionUUID->"193d060c-2d77-42fa-ad6b-0eeb4dadbe07"],
Cell[CellGroupData[{
Cell[655290, 11902, 286, 5, 28, "Input",ExpressionUUID->"1d37883e-d1d4-44c5-ba5b-3a5e019b1c7a"],
Cell[655579, 11909, 47818, 839, 100, "Output",ExpressionUUID->"44a75b1e-fc55-44e5-8d5b-a8c5712a20de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703434, 12753, 165, 3, 28, "Input",ExpressionUUID->"56ada8b7-6acd-48ee-ac6f-fb1f826fda25"],
Cell[703602, 12758, 36940, 674, 244, "Output",ExpressionUUID->"7cf1e22c-430d-45df-8758-993be9a698bc"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[740591, 13438, 163, 3, 54, "Subsection",ExpressionUUID->"c82c5cde-4ded-42a8-8666-4428ff92a005"],
Cell[740757, 13443, 456, 11, 28, "Input",ExpressionUUID->"6040415d-3704-44a1-98a8-2844f78f3d96"],
Cell[741216, 13456, 527, 14, 28, "Input",ExpressionUUID->"76ee9dc7-9191-4da2-af4f-a0d00d6fcc28"],
Cell[741746, 13472, 530, 14, 28, "Input",ExpressionUUID->"f54fbcfb-a9f5-41b8-b79c-734d7ba031d4"],
Cell[742279, 13488, 349, 7, 28, "Input",ExpressionUUID->"f292617a-89c7-4b39-b22e-cfd4eb6ca3e5"],
Cell[CellGroupData[{
Cell[742653, 13499, 287, 5, 28, "Input",ExpressionUUID->"5202a8d5-c127-46d7-adb1-e65e955b36ae"],
Cell[742943, 13506, 36169, 651, 100, "Output",ExpressionUUID->"8d94534b-67cc-45f3-a0ed-8ada461d686e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[779149, 14162, 167, 3, 28, "Input",ExpressionUUID->"9cb228fd-b3c9-4801-a15b-6cd49e91cf04"],
Cell[779319, 14167, 26840, 510, 248, "Output",ExpressionUUID->"f802ee21-52fa-4106-9a05-360f7b7047e4"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[806220, 14684, 179, 3, 67, "Section",ExpressionUUID->"37ce9467-1b7b-4b6b-b027-7ee9bc441971"],
Cell[CellGroupData[{
Cell[806424, 14691, 158, 3, 54, "Subsection",ExpressionUUID->"b52439e2-d772-4015-8fef-315bb9a3aaba"],
Cell[806585, 14696, 449, 11, 28, "Input",ExpressionUUID->"23504b08-a0f1-404f-a0a0-9cd0a9020967"],
Cell[807037, 14709, 338, 7, 28, "Input",ExpressionUUID->"99c4866b-7de1-4f84-8a77-95e833fbc1b2"],
Cell[807378, 14718, 266, 5, 28, "Input",ExpressionUUID->"88f32ff7-4690-4001-85fe-679e1a97d3d1"],
Cell[807647, 14725, 480, 13, 32, "Input",ExpressionUUID->"8ecd221b-9c05-434c-9d0d-94b50c09f104"],
Cell[CellGroupData[{
Cell[808152, 14742, 772, 19, 28, "Input",ExpressionUUID->"6346a173-be85-4ea2-9ada-80b699925b2c"],
Cell[808927, 14763, 33951, 627, 237, "Output",ExpressionUUID->"71367305-6e05-4bb4-853c-c137dbc120b7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[842927, 15396, 161, 3, 54, "Subsection",ExpressionUUID->"7234e213-f2f6-4a75-9558-d11911bda359"],
Cell[843091, 15401, 425, 10, 28, "Input",ExpressionUUID->"bbea3e10-4ce7-4188-bcc3-4bc2188433bc"],
Cell[843519, 15413, 305, 6, 28, "Input",ExpressionUUID->"4368b707-ae34-4969-a3cb-c09dc652dfb2"],
Cell[843827, 15421, 240, 4, 28, "Input",ExpressionUUID->"1a8dcc8a-e12d-4245-a1b1-10a8662d802b"],
Cell[CellGroupData[{
Cell[844092, 15429, 722, 18, 28, "Input",ExpressionUUID->"6f733db6-b33b-46dc-b1e5-7bc81a9e6f01"],
Cell[844817, 15449, 35680, 656, 241, "Output",ExpressionUUID->"f6c0dbfd-6537-4865-987a-05db3dd1caa7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[880546, 16111, 158, 3, 54, "Subsection",ExpressionUUID->"bcb8612a-ecdd-471f-b225-8b22bba6b695"],
Cell[880707, 16116, 427, 10, 28, "Input",ExpressionUUID->"84639f24-3884-45c4-8f09-f6a3a133d9cd"],
Cell[881137, 16128, 309, 6, 28, "Input",ExpressionUUID->"ec0dc8fe-1e5c-426a-919e-9859c59c2f22"],
Cell[881449, 16136, 241, 4, 28, "Input",ExpressionUUID->"7062473d-e453-4d02-bf9f-3fb635f41ef6"],
Cell[CellGroupData[{
Cell[881715, 16144, 726, 18, 28, "Input",ExpressionUUID->"d1f7b30b-13df-41b5-8a93-d54fdf7d58e0"],
Cell[882444, 16164, 34641, 639, 239, "Output",ExpressionUUID->"f03380cf-3576-473b-8c9b-37c7ce148bd1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[917158, 16811, 177, 3, 69, "Chapter",ExpressionUUID->"26a257bf-c3cb-4f1c-b091-b117e3158713"],
Cell[917338, 16816, 244, 6, 35, "Text",ExpressionUUID->"74152d7f-16b2-4d28-8e42-15d54cde6cce"],
Cell[CellGroupData[{
Cell[917607, 16826, 317, 6, 67, "Section",ExpressionUUID->"da994b3a-830c-44cd-9903-a9c369757f03"],
Cell[CellGroupData[{
Cell[917949, 16836, 205, 3, 45, "Subsubsection",ExpressionUUID->"6d292788-aec9-4c61-aa06-0c2505bb0dbd"],
Cell[CellGroupData[{
Cell[918179, 16843, 525, 11, 28, "Input",ExpressionUUID->"9bd39810-3af3-428d-a10f-f9af9dc5269b"],
Cell[918707, 16856, 357, 7, 32, "Output",ExpressionUUID->"491fe9dd-8d67-4b58-9431-39d6dd218dfd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[919113, 16869, 192, 3, 45, "Subsubsection",ExpressionUUID->"24fc971e-04ce-4050-8714-54468954f41c"],
Cell[CellGroupData[{
Cell[919330, 16876, 737, 17, 68, "Input",ExpressionUUID->"34653be3-ce06-46a0-a753-6f062d34a398"],
Cell[920070, 16895, 594, 11, 53, "Output",ExpressionUUID->"5ae7478c-a273-43f9-bce0-f3a869f8c17b"],
Cell[920667, 16908, 152, 2, 32, "Output",ExpressionUUID->"acd2d9e3-fcc7-46ca-bd60-fbd53abc49dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[920868, 16916, 197, 3, 45, "Subsubsection",ExpressionUUID->"2cfc5288-95d1-46cc-b091-a4272ec81e7a"],
Cell[CellGroupData[{
Cell[921090, 16923, 497, 12, 49, "Input",ExpressionUUID->"9c5ba007-6b3f-475d-a07d-984174d2f1f1"],
Cell[921590, 16937, 196, 4, 32, "Output",ExpressionUUID->"c2510ee5-ed0c-44e9-b90d-feb500fbcc94"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[921835, 16947, 337, 7, 45, "Subsubsection",ExpressionUUID->"b2c51d3c-959a-4c90-8e99-7c1d35d252c8"],
Cell[CellGroupData[{
Cell[922197, 16958, 563, 14, 28, "Input",ExpressionUUID->"d4266f9b-cd0e-4dd3-a356-6fd0744e71cd"],
Cell[922763, 16974, 166883, 3201, 579, "Output",ExpressionUUID->"794b5386-cada-424d-96a7-d401fbe99371"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1089707, 20182, 263, 4, 66, "Section",ExpressionUUID->"fd2b1262-b8be-43e6-b597-62326dcf5411"],
Cell[CellGroupData[{
Cell[1089995, 20190, 231, 4, 45, "Subsubsection",ExpressionUUID->"3e26e95c-34aa-42cf-a149-8cb0f3afb3a4"],
Cell[CellGroupData[{
Cell[1090251, 20198, 379, 8, 28, "Input",ExpressionUUID->"eda96cd7-9c6b-4a20-90bf-f626aaa08ffd"],
Cell[1090633, 20208, 1844, 30, 70, "Output",ExpressionUUID->"8ed5b6cd-69b2-4a89-9b7d-4f010ecdb96c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1092526, 20244, 299, 6, 45, "Subsubsection",ExpressionUUID->"80918b46-bd58-4399-bbb4-cb3b0f278464"],
Cell[CellGroupData[{
Cell[1092850, 20254, 649, 15, 28, "Input",ExpressionUUID->"b254d67d-9993-4cac-a50d-4ca1fcfd649d"],
Cell[1093502, 20271, 7154, 142, 136, "Output",ExpressionUUID->"9272ac7b-e08a-4ac8-a427-6837d61368ee"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1100705, 20419, 170, 3, 45, "Subsubsection",ExpressionUUID->"f631bc29-e30e-4795-b9e5-68ba551e9037"],
Cell[CellGroupData[{
Cell[1100900, 20426, 426, 9, 28, "Input",ExpressionUUID->"252235ee-3b05-473b-8cbe-033ec8c75f70"],
Cell[1101329, 20437, 168546, 3325, 579, "Output",ExpressionUUID->"33fd73b4-e260-4c79-920e-04c9f6ab2528"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1269924, 23768, 212, 4, 45, "Subsubsection",ExpressionUUID->"5c302d50-0f17-4d3f-8f8e-8a786775e1d5"],
Cell[CellGroupData[{
Cell[1270161, 23776, 280, 5, 28, "Input",ExpressionUUID->"c47698df-211c-43fd-94be-71feedc51f41"],
Cell[1270444, 23783, 10484, 298, 309, "Output",ExpressionUUID->"d6b65ae4-221a-42ea-ab47-9139ed3173e5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280977, 24087, 199, 3, 45, "Subsubsection",ExpressionUUID->"9fe53738-04fb-4e46-809c-0c954ae80579"],
Cell[CellGroupData[{
Cell[1281201, 24094, 4074, 100, 366, "Input",ExpressionUUID->"ecf4a310-97a4-4c97-922b-452a2e74b081"],
Cell[1285278, 24196, 52856, 1007, 295, "Output",ExpressionUUID->"288a60b1-7d33-4fed-b22c-5437d68082ab"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1338195, 25210, 171, 3, 66, "Section",ExpressionUUID->"cf7cef12-9953-4f42-8926-390d21cb64d5"],
Cell[1338369, 25215, 576, 10, 56, "Text",ExpressionUUID->"1b89f985-da38-4530-bfba-b7352167839b"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

